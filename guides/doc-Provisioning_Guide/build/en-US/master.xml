<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<info>
<title>Provisioning Guide</title>
<date>2020-02-05</date>
</info>
<chapter xml:id="Introduction">
<title>Introduction</title>
<simpara>Provisioning is a process that starts with a bare physical or virtual machine and ends with a fully configured, ready-to-use operating system. Using {ProjectName}, you can define and automate fine-grained provisioning for a large number of hosts.</simpara>
<simpara>There are many provisioning methods. For example, you can use {ProjectServer}'s integrated {SmartProxy} or an external {SmartProxyServer} to provision bare metal hosts using both PXE based and non-PXE based methods. You can also provision cloud instances from specific providers through their APIs. These provisioning methods are part of the {ProjectNameX} application life cycle to create, manage, and update hosts.</simpara>
<section xml:id="Introduction-Defining_Provisioning_Types">
<title>Provisioning Types Overview</title>
<simpara>{ProjectNameX} has different methods for provisioning hosts:</simpara>
<variablelist>
<varlistentry>
<term>Bare Metal Provisioning</term>
<listitem>
<simpara>{Project} provisions bare metal hosts primarily through PXE boot and MAC address identification. You can create host entries and specify the MAC address of the physical host to provision. You can also boot blank hosts to use {Project}'s discovery service, which creates a pool of ready-to-provision hosts. You can also boot and provision hosts through PXE-less methods.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Cloud Providers</term>
<listitem>
<simpara>{Project} connects to private and public cloud providers to provision instances of hosts from images that are stored with the Cloud environment. This also includes selecting which hardware profile or flavor to use.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Virtualization Infrastructure</term>
<listitem>
<simpara>{Project} connects to virtualization infrastructure services such as {OVirt} and VMware to provision virtual machines from virtual image templates or using the same PXE-based boot methods as bare metal providers.</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section xml:id="Introduction-Defining_the_Provisioning_Workflow">
<title>Provisioning Workflow Overview</title>
<simpara>The provisioning process follows a basic PXE workflow:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>You create a host and select a domain and subnet. {Project} requests an available IP address from the DHCP {SmartProxyServer} that is associated with the subnet or from the PostgreSQL database in Satellite. {Project} loads this IP address into the <emphasis role="strong">IP address</emphasis> field in the Create Host window. When you complete all the options for the new host, submit the new host request.</simpara>
</listitem>
<listitem>
<simpara>Depending on the configuration specifications of the host and its domain and subnet, {Project} creates the following settings:</simpara>
<itemizedlist>
<listitem>
<simpara>A DHCP record on the {SmartProxyServer} that is associated with the subnet.</simpara>
</listitem>
<listitem>
<simpara>A forward DNS record on the {SmartProxyServer} that is associated with the domain.</simpara>
</listitem>
<listitem>
<simpara>A reverse DNS record on the DNS {SmartProxyServer} that is associated with the subnet.</simpara>
</listitem>
<listitem>
<simpara>PXELinux, Grub, Grub2, and iPXE configuration files for the host in the TFTP {SmartProxyServer} that is associated with the subnet.</simpara>
</listitem>
<listitem>
<simpara>A Puppet certificate on the associated Puppet server.</simpara>
</listitem>
<listitem>
<simpara>A realm on the associated identity server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>The new host requests a DHCP reservation from the DHCP server.</simpara>
</listitem>
<listitem>
<simpara>The DHCP server responds to the reservation request and returns TFTP <literal>next-server</literal> and <literal>filename</literal> options.</simpara>
</listitem>
<listitem>
<simpara>The host requests the boot loader and menu from the TFTP server according to the PXELoader setting.</simpara>
</listitem>
<listitem>
<simpara>A boot loader is returned over TFTP.</simpara>
</listitem>
<listitem>
<simpara>The boot loader fetches configuration for the host through its provisioning interface MAC address.</simpara>
</listitem>
<listitem>
<simpara>The boot loader fetches the operating system installer kernel, init RAM disk, and boot parameters.</simpara>
</listitem>
<listitem>
<simpara>The installer requests the provisioning template from {Project}.</simpara>
</listitem>
<listitem>
<simpara>{Project} renders the provision template and returns the result to the host.</simpara>
</listitem>
<listitem>
<simpara>The installer performs installation of the operating system.</simpara>
<itemizedlist>
<listitem>
<simpara>The installer notifies {Project} of a successful build in the <literal>postinstall</literal> script.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>The PXE configuration files revert to a local boot template.</simpara>
</listitem>
<listitem>
<simpara>The host reboots.</simpara>
</listitem>
<listitem>
<simpara>The new host requests a DHCP reservation from the DHCP server.</simpara>
</listitem>
<listitem>
<simpara>The DHCP server responds to the reservation request and returns TFTP <literal>next-server</literal> and <literal>filename</literal> options.</simpara>
</listitem>
<listitem>
<simpara>The host requests the bootloader and menu from the TFTP server according to the PXELoader setting.</simpara>
</listitem>
<listitem>
<simpara>A boot loader is returned over TFTP.</simpara>
</listitem>
<listitem>
<simpara>The boot loader fetches the configuration for the host through its provision interface MAC address.</simpara>
</listitem>
<listitem>
<simpara>The boot loader initiates boot from the local drive.</simpara>
</listitem>
<listitem>
<simpara>If you configured the host to use any Puppet classes, the host configures itself using the modules.</simpara>
</listitem>
</orderedlist>
<simpara>This workflow differs depending on custom options. For example:</simpara>
<variablelist>
<varlistentry>
<term>Discovery</term>
<listitem>
<simpara>If you use the discovery service, {Project} automatically detects the MAC address of the new host and restarts the host after you submit a request. Note that TCP port 8443 must be reachable by the {SmartProxy} to which the host is attached for {Project} to restart the host.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>PXE-less Provisioning</term>
<listitem>
<simpara>After you submit a new host request, you must boot the specific host with the boot disk that you download from {Project} and transfer using a USB port of the host.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Compute Resources</term>
<listitem>
<simpara>{Project} creates the virtual machine and retrieves the MAC address and stores the MAC address in {Project}. If you use image-based provisioning, the host does not follow the standard PXE boot and operating system installation. The compute resource creates a copy of the image for the host to use. Depending on image settings in {Project}, seed data can be passed in for initial configuration, for example using <literal>cloud-init</literal>. {Project} can connect using SSH to the host and execute a template to finish the customization.</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</chapter>
<chapter xml:id="Configuring_Provisioning_Contexts">
<title>Configuring Provisioning Contexts</title>
<simpara>Before you provision hosts using {Project}, you must understand the placement strategy for hosts in {Project}. This is known as the provisioning context.</simpara>
<section xml:id="Configuring_Provisioning_Contexts-Defining_a_Provisioning_Context">
<title>Provisioning Context Overview</title>
<simpara>A provisioning context is the combination of an organization and location that you specify for {Project} components. The organization and location that a component belongs to sets the ownership and access for that component.</simpara>
<simpara>Organizations divide {ProjectNameX} components into logical groups based on ownership, purpose, content, security level, and other divisions. You can create and manage multiple organizations through {ProjectNameX} and assign components to each individual organization. This ensures the {ProjectServer} provisions hosts within a certain organization and only uses components that are assigned to that organization. For more information about organizations, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/content_management_guide/managing_organizations">Managing Organizations</link> in the <emphasis>Content Management Guide</emphasis>.</simpara>
<simpara>Locations function similar to organizations. The difference is that locations are based on physical or geographical setting. Users can nest locations in a hierarchy.</simpara>
<simpara>For more information about locations, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/content_management_guide/managing_locations">Managing Locations</link> in the <emphasis>Content Management Guide</emphasis>.</simpara>
</section>
<section xml:id="Configuring_Provisioning_Contexts-Setting_the_Provisioning_Context">
<title>Setting the Provisioning Context</title>
<simpara>When you set a context, you define which organization and location to use for provisioning hosts.</simpara>
<simpara>The organization and location menus are located in the menu bar, on the upper left of the {Project} web UI. If you have not selected an organization and location to use, the menu displays: <emphasis role="strong">Any Organization</emphasis> and <emphasis role="strong">Any Location</emphasis>.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>To set the provisioning context, click the <emphasis role="strong">Any Organization</emphasis> and <emphasis role="strong">Any Location</emphasis> buttons and select the organization and location to use.</simpara>
</listitem>
</itemizedlist>
<simpara>Each user can set their default provisioning context in their account settings. Click the user name in the upper right of the {Project} web UI and select <emphasis role="strong">My account</emphasis> to edit your user account settings.</simpara>
<formalpara>
<title>For CLI Users</title>
<para>While using the CLI, include either <literal>--organization</literal> or <literal>--organization-label</literal> and <literal>--location</literal> or <literal>--location-id</literal> as an option. For example:</para>
</formalpara>
<screen># hammer host list --organization "Default_Organization" --location "Default_Location"</screen>
<simpara>This command outputs hosts allocated for the Default_Organization and Default_Location.</simpara>
</section>
</chapter>
<chapter xml:id="Configuring_Provisioning_Resources">
<title>Configuring Provisioning Resources</title>
<simpara>{Project} contains provisioning resources that you must set up and configure to create a host. These include:</simpara>
<variablelist>
<varlistentry>
<term>Provisioning template</term>
<listitem>
<simpara>While you can create static provisioning templates, for example Kickstart templates, {Project} has many provisioning templates  in ERB (Embedded Ruby) syntax that you can use to modularize parameters in each host or host group. For example, the timezone setting in a kickstart template can differ depending on the given host parameter. Depending on a provisioning workflow, you can set various combinations.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Partition table</term>
<listitem>
<simpara>A Partition table is a type of template used only for rendering the disk volume definition part of kickstart. A Partition table uses the same ERB syntax as provisioning templates. You can use a Partition table to define multiple disk layouts and select them for each host or host group depending on the system purpose.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Installation media</term>
<listitem>
<simpara>Installation media represents a parametrized URL to a remote repository with OS packages, for example <literal>yum</literal> or <literal>apt</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Subscriptions and Repositories</term>
<listitem>
<simpara>To consume Red Hat content, you must upload subscriptions to {ProjectName}. You must create a Product for the subscription. You must enable and synchronize one or more installation repositories in the initial lifecycle environment <emphasis role="strong">Library</emphasis>. Optionally, content can be filtered and promoted to other Lifecycle Environments or Content Views.</simpara>
</listitem>
</varlistentry>
</variablelist>
<section xml:id="Configuring_Provisioning_Resources-Creating_Operating_Systems">
<title>Creating Operating Systems</title>
<simpara>An operating system is a collection of resources that define how {ProjectServer} installs a base operating system on a host. Operating system entries combine previously defined resources, such as installation media, partition tables, provisioning templates, and others.</simpara>
<simpara>Importing operating systems from Red Hat&#8217;s CDN creates new entries on the <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating Systems</emphasis> page.</simpara>
<simpara>You can also add custom operating systems using the following procedure:</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating systems</emphasis> and click <emphasis role="strong">New Operating</emphasis> system.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to represent the operating system entry.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Major</emphasis> field, enter the number that corresponds to the major version of the operating system.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Minor</emphasis> field, enter the number that corresponds to the minor version of the operating system.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description of the operating system.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Family</emphasis> list, select the operating system&#8217;s family.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Root Password Hash</emphasis> list, select the encoding method for the root password.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architectures</emphasis> list, select the architectures that the operating system uses.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Partition table</emphasis> tab and select the possible partition tables that apply to this operating system.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Templates</emphasis> tab and select a <emphasis role="strong">PXELinux template</emphasis>, a <emphasis role="strong">Provisioning template</emphasis>, and a <emphasis role="strong">Finish template</emphasis> for your operating system to use. You can select other templates, for example an <emphasis role="strong">iPXE template</emphasis>, if you plan to use iPXE for provisioning.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your provisioning template.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the operating system using the <literal>hammer os create</literal> command:</para>
</formalpara>
<screen># hammer os create --name "<emphasis>MyOS</emphasis>" \
--description "<emphasis>My_custom_operating_system</emphasis>" \
--major 7 --minor 3 --family "Redhat" --architectures "x86_64" \
--partition-tables "<emphasis>My_Partition</emphasis>" --media "<emphasis>Red_Hat</emphasis>" \
--provisioning-templates "<emphasis>My_Provisioning_Template</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Updating_Multiple_Operating_Systems">
<title>Updating Multiple Operating Systems</title>
<simpara>Use the following procedure to assign each operating system a partition table, configuration template, and provisioning template.</simpara>
<formalpara>
<title>Procedure</title>
<para>To assign each operating system a partition table <literal>Kickstart default</literal>, configuration template <literal>Kickstart default PXELinux</literal>, and provisioning template <literal>Satellite Kickstart Default</literal>, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Run the following Bash script:</simpara>
<programlisting language="Bash" linenumbering="unnumbered">PARTID=$(hammer --csv partition-table list | grep "Kickstart default," | cut -d, -f1)
PXEID=$(hammer --csv template list --per-page=1000 | grep "Kickstart default PXELinux" | cut -d, -f1)
SATID=$(hammer --csv template list --per-page=1000 | grep "provision" | grep ",Kickstart default" | cut -d, -f1)

for i in $(hammer --no-headers --csv os list | awk -F, {'print $1'})
do
   hammer partition-table add-operatingsystem --id="${PARTID}" --operatingsystem-id="${i}"
   hammer template add-operatingsystem --id="${PXEID}" --operatingsystem-id="${i}"
   hammer os set-default-template --id="${i}" --config-template-id=${PXEID}
   hammer os add-config-template --id="${i}" --config-template-id=${SATID}
   hammer os set-default-template --id="${i}" --config-template-id=${SATID}
done</programlisting>
</listitem>
<listitem>
<simpara>Display information about the updated operating system to verify that the operating system is updated correctly:</simpara>
<screen># hammer os info --id <emphasis>1</emphasis></screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Configuring_Provisioning_Resources-Architectures">
<title>Creating Architectures</title>
<simpara>An architecture in {Project} represents a logical grouping of hosts and operating systems. Architectures are created by {Project} automatically when hosts check in with Puppet. Basic i386 and x86_64 architectures are already preset in {ProjectX}.</simpara>
<simpara>Use this procedure to create an architecture in {Project}.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create an architecture, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Architectures</emphasis>, and in the Architectures window, click <emphasis role="strong">Create Architecture</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the architecture.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operating Systems</emphasis> list, select an operating system. If none are available, you can create and assign them under <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating Systems</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Enter the <literal>hammer architecture create</literal> command to create an architecture. Specify its name and operating systems that include this architecture:</para>
</formalpara>
<screen># hammer architecture create --name "<emphasis>Architecture_Name</emphasis>" \
--operatingsystems "<emphasis>os</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Hardware_Models">
<title>Creating Hardware Models</title>
<simpara>Use this procedure to create a hardware model in {Project} so that you can specify what hardware model a host uses.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a hardware model, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Hardware Models</emphasis>, and in the Hardware Models window, click <emphasis role="strong">Create Model</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the hardware model.</simpara>
</listitem>
<listitem>
<simpara>Optionally, in the <emphasis role="strong">Hardware Model</emphasis> and <emphasis role="strong">Vendor Class</emphasis> fields, you can enter corresponding information for your system.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Info</emphasis> field, enter a description of the hardware model.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your hardware model.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create a hardware model using the <literal>hammer model create</literal> command. The only required parameter is <literal>--name</literal>. Optionally, enter the hardware model with the <literal>--hardware-model</literal> option, a vendor class with the <literal>--vendor-class</literal> option, and a description with the <literal>--info</literal> option:</para>
</formalpara>
<screen># hammer model create --name "<emphasis>model_name</emphasis>" --info "<emphasis>description</emphasis>" \
--hardware-model "<emphasis>hardware_model</emphasis>" --vendor-class "<emphasis>vendor_class</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Using_Kickstart_Repository_as_Installation_Medium">
<title>Using a Synced Kickstart Repository for a Host&#8217;s Operating System</title>
<simpara>{Project} contains a set of synchronized kickstart repositories that you use to install the provisioned host&#8217;s operating system. For more information about adding repositories, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/content_management_guide/importing_red_hat_content#Importing_Red_Hat_Content-Synchronizing_Red_Hat_Repositories">Synchronizing Red Hat Repositories</link> in the <emphasis>Content Management Guide</emphasis>.</simpara>
<simpara>To set up a kickstart repository, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Add the synchronized kickstart repository that you want to use to the existing Content View or create a new Content View and add the kickstart repository.</simpara>
<simpara>For {RHEL} 8, ensure that you add both <emphasis role="strong">{RHEL} 8 for x86_64 - AppStream Kickstart x86_64 8</emphasis> and <emphasis role="strong">{RHEL} 8 for x86_64 - BaseOS Kickstart x86_64 8</emphasis> repositories.</simpara>
</listitem>
<listitem>
<simpara>Publish a new version of the Content View where the kickstart repository is added and promote it to a required lifecycle environment. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/content_management_guide/managing_content_views">Managing Content Views</link> in the <emphasis>Content Management Guide</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>When you create a host, in the <emphasis role="strong">Operating System</emphasis> tab, for <emphasis role="strong">Media Selection</emphasis>, select the <emphasis role="strong">Synced Content</emphasis> check box.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>To View the Kickstart Tree</title>
<para>To view the kickstart tree enter the following command:</para>
</formalpara>
<screen># hammer medium list --organization "<emphasis>your_organization</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Creating_Partition_Tables">
<title>Creating Partition Tables</title>
<simpara>A partition table is a set of directives that defines the way {ProjectServer} configures the disks available on a new host. {ProjectNameX} contains a set of default partition tables to use, including a <literal>Kickstart default</literal>. You can also edit partition table entries to configure the preferred partitioning scheme, or create a partition table entry and add it to the Red Hat Enterprise Linux operating system entry.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create partition tables, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Partition Tables</emphasis> and, in the Partition Tables window, click <emphasis role="strong">Create Partition Table</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to represent the partition table.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default</emphasis> check box if you want to set the template to automatically associate with new organizations or locations.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Snippet</emphasis> check box if you want to identify the template as a reusable snippet for other partition tables.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operating System Family</emphasis> list, select the distribution or family of the partitioning layout. For example, Red Hat Enterprise Linux, CentOS, and Fedora are in the Red Hat family.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Template editor</emphasis> field, enter the layout for the disk partition. For example:</simpara>
<screen>zerombr
clearpart --all --initlabel
autopart</screen>
<simpara>You can also use the <emphasis role="strong">Template</emphasis> file browser to upload a template file.</simpara>
<simpara>The format of the layout must match that for the intended operating system. For example, Red Hat Enterprise Linux 7.2 requires a layout that matches a kickstart file.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Audit Comment</emphasis> field, add a summary of changes to the partition layout.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> and <emphasis role="strong">Locations</emphasis> tabs to add any other provisioning contexts that you want to associate with the partition table. {Project} adds the partition table to the current provisioning context.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your partition table.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Before you create a partition table with the CLI, create a plain text file that contains the partition layout. This example uses the <literal>~/my-partition</literal> file. Create the installation medium using the <literal>hammer partition-table create</literal> command:</para>
</formalpara>
<screen># hammer partition-table create --name "My Partition" --snippet false \
--os-family Redhat --file ~/my-partition --organizations "<emphasis>My_Organization</emphasis>" \
--locations "<emphasis>My_Location</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Creating_Provisioning_Templates">
<title>Creating Provisioning Templates</title>
<simpara>A provisioning template defines the way {ProjectServer} installs an operating system on a host.</simpara>
<section xml:id="Configuring_Provisioning_Resources-Types_of_Provisioning_Templates">
<title>Types of Provisioning Templates</title>
<simpara>There are various types of provisioning templates, including:</simpara>
<simpara><emphasis role="strong">Provision</emphasis></simpara>
<simpara>The main template for the provisioning process. For example, a kickstart template. For more information about kickstart template syntax, see the <link xlink:href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html">Kickstart Syntax Reference</link> in the <emphasis>Red Hat Enterprise Linux 7 Installation Guide</emphasis>.</simpara>
<simpara><emphasis role="strong">PXELinux</emphasis>, <emphasis role="strong">PXEGrub</emphasis>, <emphasis role="strong">PXEGrub2</emphasis></simpara>
<simpara>PXE-based templates that deploy to the template {SmartProxy} associated with a subnet to ensure that the host uses the installer with the correct kernel options. For BIOS provisioning, select <emphasis role="strong">PXELinux</emphasis> template. For UEFI provisioning, select <emphasis role="strong">PXEGrub2</emphasis>.</simpara>
<simpara><emphasis role="strong">Finish</emphasis></simpara>
<simpara>Post-configuration scripts to use when the main provisioning process completes. This is completed as an SSH task. You can use Finishing templates only for imaged-based provisioning in virtual environments. Do not confuse an image with a foreman discovery ISO, which is sometimes called a Foreman discovery image. An image in this context is an install image in a virtualized environment for easy deployment.</simpara>
<simpara>When a finish script successfully exits with the return code <literal>0</literal>, {ProjectName} treats the code as a success and the host exits the build mode. Note that there are a few finish scripts with a build mode that uses a <emphasis>call back</emphasis> HTTP call. These scripts are not used for image-based provisioning, but for post configuration of operating-system installations such as Debian, Ubuntu, and BSD.</simpara>
<simpara><emphasis role="strong">Bootdisk</emphasis></simpara>
<simpara>Templates for PXE-less boot methods.</simpara>
<simpara><emphasis role="strong">Kernel Execution (kexec)</emphasis></simpara>
<simpara>Kernel execution templates for PXE-less boot methods.</simpara>
<simpara><emphasis role="strong">user_data</emphasis></simpara>
<simpara>Post-configuration scripts for providers that accept user data, such as <literal>cloud-init</literal> scripts. This template does not require {Project} to be able to reach the host. However, the host must be able to reach {Project}.</simpara>
<simpara><emphasis role="strong">Script</emphasis></simpara>
<simpara>An arbitrary script not used by default but useful for custom tasks.</simpara>
<simpara><emphasis role="strong">ZTP</emphasis></simpara>
<simpara>Zero Touch Provisioning templates.</simpara>
<simpara><emphasis role="strong">POAP</emphasis></simpara>
<simpara>PowerOn Auto Provisioning templates.</simpara>
<simpara><emphasis role="strong">iPXE</emphasis></simpara>
<simpara>Templates for <literal>iPXE</literal> or <literal>gPXE</literal> environments to use instead of PXELinux.</simpara>
</section>
<section xml:id="_template_syntax_and_management">
<title>Template Syntax and Management</title>
<simpara>{ProjectName} includes many template examples. In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning templates</emphasis> to view them. You can create a template or clone a template and edit the clone. For help with templates, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning templates</emphasis> &gt; <emphasis role="strong">Create Template</emphasis> &gt; <emphasis role="strong">Help</emphasis>.</simpara>
<simpara>Templates accept the Embedded Ruby (ERB) syntax. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/managing_hosts/appe-red_hat_satellite-managing_hosts-template_writing_reference">Template Writing Reference</link> in <emphasis>Managing Hosts</emphasis>.</simpara>
<simpara>You can download provisioning templates. Before you can download the template, you must create a debug certificate. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/content_management_guide/managing_organizations#Managing_Organizations-Creating_an_Organization_Debug_Certificate">Creating an Organization Debug Certificate</link> in the <emphasis>Content Management Guide</emphasis>.</simpara>
<simpara>You can synchronize templates between {ProjectServer} and a Git repository or a local directory. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/managing_hosts/synchronizing_templates_repositories">Synchronizing Templates Repositories</link> in the <emphasis>Managing Hosts</emphasis> guide.</simpara>
<formalpara>
<title>Change logs and history</title>
<para>To view the history of changes applied to a template, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning templates</emphasis>, select one of the templates, and click <emphasis role="strong">History</emphasis>. Click <emphasis role="strong">Revert</emphasis> to override the editor content with the previous version. It is possible to revert to an earlier change as well. Click <emphasis role="strong">Show Diff</emphasis> to see information about a specific change:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><emphasis role="strong">Template Diff</emphasis> tab displays changes in the body of a provisioning template.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Details</emphasis> tab displays changes in the template description.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">History</emphasis> tab displays the user who made a change to the template and date of the change.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_procedure">
<title>Procedure</title>
<simpara>To create a template, complete the following step:</simpara>
<itemizedlist>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis> and, in the Provisioning Templates window, click <emphasis role="strong">Create Template</emphasis>.</simpara>
</listitem>
</itemizedlist>
<simpara>The <emphasis role="strong">Help</emphasis> tab provides information about the template syntax. It details the available functions, variables, and methods that can be called on different types of objects within the template.</simpara>
<simpara>Alternatively, to clone a template and add your updates to the clone, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis> and search for the template that you want to use.</simpara>
</listitem>
<listitem>
<simpara>On the template that you want to use, click <emphasis role="strong">Clone</emphasis> to duplicate it.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the provisioning template.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default</emphasis> check box to set the template to associate automatically with new organizations or locations.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Template editor</emphasis> field, enter the body of the provisioning template. You can also use the <emphasis role="strong">Template</emphasis> file browser to upload a template file.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Audit Comment</emphasis> field, enter a summary of changes to the provisioning template for auditing purposes.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Type</emphasis> tab and if your template is a snippet, select the <emphasis role="strong">Snippet</emphasis> check box. A snippet is not a standalone provisioning template, but a part of a provisioning template that can be inserted into other provisioning templates.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Type</emphasis> list, select the type of the template. For example, <emphasis role="strong">Provisioning template</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab and from the <emphasis role="strong">Applicable Operating Systems</emphasis> list, select the names of the operating systems that you want to associate with the provisioning template.</simpara>
</listitem>
<listitem>
<simpara>Optionally, click <emphasis role="strong">Add combination</emphasis> and select a host group from the <emphasis role="strong">Host Group</emphasis> list or an environment from the <emphasis role="strong">Environment</emphasis> list to associate provisioning template with the host groups and environments.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> and <emphasis role="strong">Locations</emphasis> tabs to add any additional contexts to the template.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your provisioning template.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Before you create a template with the CLI, create a plain text file that contains the template. This example uses the <literal>~/my-template</literal> file. Create the installation medium using the <literal>hammer template create</literal> command and specify the type with the <literal>--type</literal> option:</para>
</formalpara>
<screen># hammer template create --name "My Provisioning Template" \
--file ~/my-template --type provision --organizations "<emphasis>My_Organization</emphasis>" \
--locations "<emphasis>My_Location</emphasis>"</screen>
</section>
</section>
<section xml:id="Configuring_Provisioning_Resources-Creating_Compute_Profiles">
<title>Creating Compute Profiles</title>
<simpara>Compute profiles are used in conjunction with compute resources, such as virtualization infrastructure and cloud providers. Compute profiles allow users to predefine hardware such as CPUs, memory, and storage. A default installation of {ProjectNameX} contains three predefined profiles:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>1-Small</literal></simpara>
</listitem>
<listitem>
<simpara><literal>2-Medium</literal></simpara>
</listitem>
<listitem>
<simpara><literal>3-Large</literal></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis>, and in the Compute Profiles window, click <emphasis role="strong">Create Compute Profile</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the profile and click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>The compute profile CLI commands are not yet implemented in {ProjectName} 6.6.</para>
</formalpara>
</section>
<section xml:id="Configuring_Provisioning_Resources-Setting_Default_Root_Password">
<title>Setting a Default Encrypted Root Password for Hosts</title>
<simpara>If you do not want to set a plain text default root password for the hosts that you provision, you can use a default encrypted password.</simpara>
<simpara>To set a default encrypted password for your hosts, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Generate an encrypted password. You can use the following command to generate a password:</simpara>
<screen># python -c 'import crypt,getpass;pw=getpass.getpass(); print(crypt.crypt(pw)) if (pw==getpass.getpass("Confirm: ")) else exit()'</screen>
</listitem>
<listitem>
<simpara>Copy the password for later use.</simpara>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Settings</emphasis> page, select the <emphasis role="strong">Provisioning</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> column, navigate to <emphasis role="strong">Root password</emphasis>, and click <emphasis role="strong">Click to edit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Paste the encrypted password that you generate, and click <emphasis role="strong">Save</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Configuring_Provisioning_Resources-Creating_Installation_Media">
<title>Using Third Party Installation Media</title>
<simpara>Installation media are sources of files for third parties that {ProjectServer} uses to install a third-party base operating system on a machine. Installation media must be in the format of an operating system installation tree, and must be accessible to the machine hosting the installer through an HTTP URL. You can view installation media by navigating to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Installation Media</emphasis> menu.</simpara>
<simpara>For other installation media, for example, a locally mounted ISO image, you can add your own custom media paths using the following procedure.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create installation media, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Installation Media</emphasis> and click <emphasis role="strong">Create Medium</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to represent the installation media entry.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Path</emphasis> enter the URL or NFS share that contains the installation tree. You can use following variables in the path to represent multiple different system architectures and versions:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>$arch</literal> - The system architecture.</simpara>
</listitem>
<listitem>
<simpara><literal>$version</literal> - The operating system version.</simpara>
</listitem>
<listitem>
<simpara><literal>$major</literal> - The operating system major version.</simpara>
</listitem>
<listitem>
<simpara><literal>$minor</literal> - The operating system minor version.</simpara>
<simpara>Example HTTP path:</simpara>
<screen>http://download.example.com/centos/$version/Server/$arch/os/</screen>
<simpara>Example NFS path:</simpara>
<screen>nfs://download.example.com:/centos/$version/Server/$arch/os/</screen>
<simpara>Synchronized content on {SmartProxyServer}s always uses an HTTP path. {SmartProxyServer} managed content does not support NFS paths.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operating system family</emphasis> list, select the distribution or family of the installation medium. For example, CentOS, and Fedora are in the <literal>Red Hat</literal> family.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> and <emphasis role="strong">Locations</emphasis> tabs, to change the provisioning context. {ProjectServer} adds the installation medium to the set provisioning context.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your installation medium.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the installation medium using the <literal>hammer medium create</literal> command:</para>
</formalpara>
<screen># hammer medium create --name "CustomOS" --os-family "Redhat" \
--path 'http://download.example.com/centos/$version/Server/$arch/os/' \
--organizations "<emphasis>My_Organization</emphasis>" --locations "<emphasis>My_Location</emphasis>"</screen>
</section>
<section xml:id="Configuring_Provisioning_Resources-Accessing_Virtual_Machines_with_the_noVNC_Console">
<title>Using noVNC to Access Virtual Machines</title>
<simpara>You can use your browser to access the VNC console of VMs created by {Project}.</simpara>
<simpara>{Project} supports using noVNC on the following virtualization platforms:</simpara>
<itemizedlist>
<listitem>
<simpara>VMware</simpara>
</listitem>
<listitem>
<simpara>Libvirt</simpara>
</listitem>
<listitem>
<simpara>{OVirt}</simpara>
</listitem>
</itemizedlist>
<simpara>Use the following procedure to configure your virtualization platform and browser to enable the use of the noVNC console.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You must have a virtual machine created by {Project}.</simpara>
</listitem>
<listitem>
<simpara>For existing virtual machines, ensure that the <emphasis role="strong">Display type</emphasis> in the <emphasis role="strong">Compute Resource</emphasis> settings is <emphasis role="strong">VNC</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>You must import the Katello root CA certificate into your {ProjectServer}. Adding a security exception in the browser is not enough for using noVNC. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-accessing_red_hat_satellite#sect-{Project_Link}-Administering_{Project_Link}-Installing_the_Katello_Root_CA_Certificate">Installing the Katello Root CA Certificate</link> section in the <emphasis>Administering {ProjectName}</emphasis> guide.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>On the VM host system, configure the firewall to allow VNC service on ports 5900 to 5930:</simpara>
</listitem>
</orderedlist>
<screen># iptables -A INPUT -p tcp --dport 5900:5930 -j ACCEPT
# service iptables save</screen>
<simpara>+</simpara>
<simpara>+</simpara>
<screen># firewall-cmd --add-port=5900-5930/tcp
# firewall-cmd --add-port=5900-5930/tcp --permanent</screen>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and select the name of a compute resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Virtual Machines</emphasis> tab, select the name of a VM host. Ensure the machine is powered on and then select <emphasis role="strong">Console</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="Configuring_Networking">
<title>Configuring Networking</title>
<simpara>Each provisioning type requires some network configuration. Use this chapter to configure network services in your integrated {SmartProxy} on {ProjectServer}.</simpara>
<simpara>New hosts must have access to your {SmartProxyServer}. {SmartProxyServer} can be either your integrated {SmartProxy} on {ProjectServer} or an external {SmartProxyServer}. You might want to provision hosts from an external {SmartProxyServer} when the hosts are on isolated networks and cannot connect to {ProjectServer} directly, or when the content is synchronized with the {SmartProxyServer}. Provisioning using the external {SmartProxyServer} can save on network bandwidth.</simpara>
<simpara>Configuring {SmartProxyServer} has two basic requirements:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Configuring network services. This includes:</simpara>
<itemizedlist>
<listitem>
<simpara>Content delivery services</simpara>
</listitem>
<listitem>
<simpara>Network services (DHCP, DNS, and TFTP)</simpara>
</listitem>
<listitem>
<simpara>Puppet configuration</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Defining network resource data in {ProjectServer} to help configure network interfaces on new hosts.</simpara>
</listitem>
</orderedlist>
<simpara>The following instructions have similar applications to configuring standalone {SmartProxies} managing a specific network. To configure {Project} to use external DHCP, DNS, and TFTP services, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/installing_satellite_server_from_a_connected_network/configuring_external_services">Configuring External Services</link> in <emphasis>Installing {ProjectServer} from a Connected Network</emphasis>.</simpara>
<section xml:id="networking_resources">
<title>Network Resources</title>
<simpara>{Project} contains networking resources that you must set up and configure to create a host. {Project} includes the following networking resources:</simpara>
<variablelist>
<varlistentry>
<term>Domain</term>
<listitem>
<simpara>You must assign every host that is managed by {Project} to a domain. Using the domain, {Project} can manage A, AAAA, and PTR records. Even if you do not want {Project} to manage your DNS servers, you still must create and associate at least one domain. Domains are included in the naming conventions {Project} hosts, for example, a host with the name <literal>test123</literal> in the <literal>example.com</literal> domain has the fully qualified domain name <literal>test123.example.com</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Subnet</term>
<listitem>
<simpara>You must assign every host managed by {Project} to a subnet. Using subnets, {Project} can then manage IPv4 reservations. If there are no reservation integrations, you still must create and associate at least one subnet. When you manage a subnet in {Project}, you cannot create DHCP records for that subnet outside of {Project}. In {Project}, you can use IP Address Management (IPAM) to manage IP addresses with one of the following options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">DHCP</emphasis>: the DHCP {SmartProxy} manages the assignment of IP addresses by finding the next available IP address starting from the first. Before assigning an IP address, {SmartProxy} sends an ICMP and TCP ping to verify whether the IP address is in use.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Internal DB</emphasis>: {Project} manages a list of available IP addresses in the PostgreSQL database. {Project} assigns the IP addresses automatically.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Random DB</emphasis>: {Project} manages a list of available IP addresses in the PostgreSQL database, but randomizes the results to avoid IPv4 race conditions.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">None</emphasis>: IP address for each host must be entered manually.</simpara>
<simpara>For more information about adding a subnet, see <xref linkend="Configuring_Networking-Adding_a_Subnet_to_the_Satellite_Server"/>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>DHCP Ranges</term>
<listitem>
<simpara>You can define the same DHCP range in {ProjectServer} for both discovered and provisioned systems, but use a separate range for each service within the same subnet.</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section xml:id="_project_and_dhcp_options">
<title>{Project} and DHCP Options</title>
<simpara>{Project} manages DHCP reservations through a DHCP {SmartProxy}. {Project} also sets the <literal>next-server</literal> and <literal>filename</literal> DHCP options.</simpara>
<formalpara>
<title>The next-server option</title>
<para>The <literal>next-server</literal> option provides the IP address of the TFTP server to boot from. This option is not set by default and must be set for each TFTP {SmartProxy}. You can use the <literal>{foreman-installer}</literal> command with the <literal>--foreman-proxy-tftp-servername</literal> option to set the TFTP server in the <literal>/etc/foreman-proxy/settings.d/tftp.yml</literal> file:</para>
</formalpara>
<screen># {foreman-installer} --foreman-proxy-tftp-servername <emphasis>1.2.3.4</emphasis></screen>
<simpara>Each TFTP {SmartProxy} then reports this setting through the API and {Project} can retrieve the configuration information when it creates the DHCP record.</simpara>
<simpara>When the PXE loader is set to <literal>none</literal>, {Project} does not populate the <literal>next-server</literal> option into the DHCP record.</simpara>
<simpara>If the <literal>next-server</literal> option remains undefined, {Project} uses reverse DNS search to find a TFTP server address to assign, but you might encounter the following problems:</simpara>
<itemizedlist>
<listitem>
<simpara>DNS timeouts during provisioning</simpara>
</listitem>
<listitem>
<simpara>Querying of incorrect DNS server. For example, authoritative rather than caching</simpara>
</listitem>
<listitem>
<simpara>Errors about incorrect IP address for the TFTP server. For example, <literal>PTR record was invalid</literal></simpara>
</listitem>
</itemizedlist>
<simpara>If you encounter these problems, check the DNS setup on both {Project} and {SmartProxy}, specifically the PTR record resolution.</simpara>
<formalpara>
<title>The filename option</title>
<para>The <literal>filename</literal> option contains the full path to the file that downloads and executes during provisioning. The PXE loader that you select for the host or host group defines which <literal>filename</literal> option to use. When the PXE loader is set to <literal>none</literal>, {Project} does not populate the <literal>filename</literal>  option into the DHCP record. Depending on the PXE loader option, the <literal>filename</literal> changes as follows:</para>
</formalpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">PXE loader option</entry>
<entry align="left" valign="top">filename entry</entry>
<entry align="left" valign="top">Notes</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>PXELinux BIOS</simpara></entry>
<entry align="left" valign="top"><simpara><literal>pxelinux.0</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PXELinux UEFI</simpara></entry>
<entry align="left" valign="top"><simpara><literal>pxelinux.efi</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>iPXE Chain BIOS</simpara></entry>
<entry align="left" valign="top"><simpara><literal>undionly.kpxe</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PXEGrub2 UEFI</simpara></entry>
<entry align="left" valign="top"><simpara><literal>grub2/grubx64.efi</literal></simpara></entry>
<entry align="left" valign="top"><simpara>x64 can differ depending on architecture</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>iPXE UEFI HTTP</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://<emphasis>{smartproxy-example-com}</emphasis>:8000/httpboot/ipxe-x64.efi</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Requires the <literal>httpboot</literal> feature and renders the <literal>filename</literal> as a full URL where <emphasis>{smartproxy-example-com}</emphasis> is a known host name of {SmartProxy} in {Project}.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Grub2 UEFI HTTP</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://<emphasis>{smartproxy-example-com}</emphasis>:8000/httpboot/grub2/grubx64.efi</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Requires the <literal>httpboot</literal> feature and renders the <literal>filename</literal> as a full URL where <emphasis>{smartproxy-example-com}</emphasis> is a known host name of {SmartProxy} in {Project}.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_troubleshooting_dhcp_problems_in_project">
<title>Troubleshooting DHCP Problems in {Project}</title>
<simpara>{Project} can manage an ISC DHCP server on internal or external DHCP {SmartProxy}. {Project} can list, create, and delete DHCP reservations and leases. However, there are a number of problems that you might encounter on occasions.</simpara>
<formalpara>
<title>PXE loader option change</title>
<para>When the PXE loader option is changed for an existing host, this causes a DHCP conflict. The only workaround is to overwrite the DHCP entry.</para>
</formalpara>
<formalpara>
<title>Incorrect permissions on DHCP files</title>
<para>An operating system update can update the <literal>dhcpd</literal> package. This causes the permissions of important directories and files to reset so that the DHCP {SmartProxy} cannot read the required information.</para>
</formalpara>
<formalpara>
<title>Changing the DHCP {SmartProxy} entry</title>
<para>{Project} manages DHCP records only for hosts that are assigned to subnets with a DHCP {SmartProxy} set. If you create a host and then clear or change the DHCP {SmartProxy}, when you attempt to delete the host, the action fails.</para>
</formalpara>
<simpara>If you create a host without setting the DHCP {SmartProxy} and then try to set the DHCP {SmartProxy}, this causes DHCP conflicts.</simpara>
<formalpara>
<title>Deleted hosts entries in the dhcpd.leases file</title>
<para>Any changes to a DHCP lease are appended to the end of the <literal>dhcpd.leases</literal> file. Because entries are appended to the file, it is possible that two or more entries of the same lease can exist in the <literal>dhcpd.leases</literal> file at the same time. When there are two or more entries of the same lease, the last entry in the file takes precedence. Group, subgroup and host declarations in the lease file are processed in the same manner. If a lease is deleted, <literal>{ deleted; }</literal> is appended to the declaration.</para>
</formalpara>
</section>
<section xml:id="_prerequisites_for_image_based_provisioning">
<title>Prerequisites for Image Based Provisioning</title>
<formalpara>
<title>Post-Boot Configuration Method</title>
<para>Images that use the <literal>finish</literal> post-boot configuration scripts require a managed DHCP server, such as {Project}'s integrated {SmartProxy} or an external {SmartProxy}. The host must be created with a subnet associated with a DHCP {SmartProxy}, and the IP address of the host must be a valid IP address from the DHCP range.</para>
</formalpara>
<simpara>It is possible to use an external DHCP service, but IP addresses must be entered manually. The SSH credentials corresponding to the configuration in the image must be configured in {Project} to enable the post-boot configuration to be made.</simpara>
<simpara>Check following items when troubleshooting a virtual machine booted from an image that depends on post-configuration scripts:</simpara>
<itemizedlist>
<listitem>
<simpara>The host has a subnet assigned in {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The subnet has a DHCP {SmartProxy} assigned in {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The host has a valid IP address assigned in {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The IP address acquired by the virtual machine using DHCP matches the address configured in {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The virtual machine created from an image responds to SSH requests.</simpara>
</listitem>
<listitem>
<simpara>The virtual machine created from an image authorizes the user and password, over SSH, which is associated with the image being deployed.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} has access to the virtual machine via SSH keys. This is required for the virtual machine to receive post-configuration scripts from {ProjectServer}.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Pre-Boot Initialization Configuration Method</title>
<para>Images that use the <literal>cloud-init</literal> scripts require a DHCP server to avoid having to include the IP address in the image. A managed DHCP {SmartProxy} is preferred. The image must have the <literal>cloud-init</literal> service configured to start when the system boots and fetch a script or configuration data to use in completing the configuration.</para>
</formalpara>
<simpara>Check the following items when troubleshooting a virtual machine booted from an image that depends on initialization scripts included in the image:</simpara>
<itemizedlist>
<listitem>
<simpara>There is a DHCP server on the subnet.</simpara>
</listitem>
<listitem>
<simpara>The virtual machine has the <literal>cloud-init</literal> service installed and enabled.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Configuring_Networking-Configuring_Network_Services_for_PXE_Boot">
<title>Configuring Network Services</title>
<simpara>Some provisioning methods use {SmartProxyServer} services. For example, a network might require the {SmartProxyServer} to act as a DHCP server. A network can also use PXE boot services to install the operating system on new hosts. This requires configuring the {SmartProxyServer} to use the main PXE boot services: DHCP, DNS, and TFTP.</simpara>
<simpara>Use the <literal>{foreman-installer}</literal> command with the options to configure these services on the {ProjectServer}.</simpara>
<simpara>{ProjectServer} uses <literal>eth0</literal> for external communication, such as connecting to Red Hat&#8217;s CDN.</simpara>
<formalpara>
<title>Procedure</title>
<para>To configure network services on {Project}'s integrated {SmartProxy}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Enter the <literal>{foreman-installer}</literal> command to configure the required network services:</simpara>
<screen># {foreman-installer} --foreman-proxy-dhcp true \
--foreman-proxy-dhcp-managed true \
--foreman-proxy-dhcp-gateway "<emphasis>192.168.140.1</emphasis>" \
--foreman-proxy-dhcp-interface "eth1" \
--foreman-proxy-dhcp-nameservers "<emphasis>192.168.140.2</emphasis>" \
--foreman-proxy-dhcp-range "<emphasis>192.168.140.10</emphasis> <emphasis>192.168.140.110</emphasis>" \
--foreman-proxy-dhcp-server "<emphasis>192.168.140.2</emphasis>" \
--foreman-proxy-dns true \
--foreman-proxy-dns-managed true \
--foreman-proxy-dns-forwarders "<emphasis>8.8.8.8</emphasis>; <emphasis>8.8.4.4</emphasis>" \
--foreman-proxy-dns-interface "eth1" \
--foreman-proxy-dns-reverse "<emphasis>140.168.192.in-addr.arpa</emphasis>" \
--foreman-proxy-dns-server "<emphasis>127.0.0.1</emphasis>" \
--foreman-proxy-dns-zone "<emphasis>example.com</emphasis>" \
--foreman-proxy-tftp true \
--foreman-proxy-tftp-managed true</screen>
</listitem>
<listitem>
<simpara>Find the {SmartProxyServer} that you configure:</simpara>
<screen># hammer proxy list</screen>
</listitem>
<listitem>
<simpara>Refresh features of the {SmartProxyServer} to view the changes:</simpara>
<screen># hammer proxy refresh-features --name "<emphasis>{foreman-example-com}</emphasis>"</screen>
</listitem>
<listitem>
<simpara>Verify the services configured on the {SmartProxyServer}:</simpara>
<screen># hammer proxy info --name "<emphasis>{foreman-example-com}</emphasis>"</screen>
</listitem>
</orderedlist>
<section xml:id="_dhcp_dns_and_tftp_options_for_network_configuration">
<title>DHCP, DNS, and TFTP Options for Network Configuration</title>
<variablelist>
<title>DHCP Options</title>
<varlistentry>
<term>--foreman-proxy-dhcp</term>
<listitem>
<simpara>Enables the DHCP service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-managed</term>
<listitem>
<simpara>Enables Foreman to manage the DHCP service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-gateway</term>
<listitem>
<simpara>The DHCP pool gateway. Set this to the address of the external gateway for hosts on your private network.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-interface</term>
<listitem>
<simpara>Sets the interface for the DHCP service to listen for requests. Set this to <literal>eth1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-nameservers</term>
<listitem>
<simpara>Sets the addresses of the nameservers provided to clients through DHCP. Set this to the address for {ProjectServer} on <literal>eth1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-range</term>
<listitem>
<simpara>A space-separated DHCP pool range for Discovered and Unmanaged services.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dhcp-server</term>
<listitem>
<simpara>Sets the address of the DHCP server to manage.</simpara>
</listitem>
</varlistentry>
</variablelist>
<variablelist>
<title>DNS Options</title>
<varlistentry>
<term>--foreman-proxy-dns</term>
<listitem>
<simpara>Enables DNS service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-managed</term>
<listitem>
<simpara>Enables Foreman to manage the DNS service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-forwarders</term>
<listitem>
<simpara>Sets the DNS forwarders. Set this to your DNS servers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-interface</term>
<listitem>
<simpara>Sets the interface to listen for DNS requests. Set this to <literal>eth1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-reverse</term>
<listitem>
<simpara>The DNS reverse zone name.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-server</term>
<listitem>
<simpara>Sets the address of the DNS server to manage.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-dns-zone</term>
<listitem>
<simpara>Sets the DNS zone name.</simpara>
</listitem>
</varlistentry>
</variablelist>
<variablelist>
<title>TFTP Options</title>
<varlistentry>
<term>--foreman-proxy-tftp</term>
<listitem>
<simpara>Enables TFTP service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-tftp-managed</term>
<listitem>
<simpara>Enables Foreman to manage the TFTP service. You can set this option to <literal>true</literal> or <literal>false</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>--foreman-proxy-tftp-servername</term>
<listitem>
<simpara>Sets the TFTP server to use. Ensure that you use {SmartProxy}'s IP address.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Run <literal>{foreman-installer} --help</literal> to view more options related to DHCP, DNS, TFTP, and other {Project} {SmartProxy} services</simpara>
</section>
<section xml:id="Configuring_Networking-Using_TFTP_Services_through_NAT">
<title>Using TFTP Services through NAT</title>
<simpara>You can use {Project} TFTP services through NAT. To do this, on all NAT routers or firewalls, you must enable a TFTP service on UDP port 69 and enable the TFTP state tracking feature. For more information, see the documentation for your NAT device.</simpara>
<simpara>Use the following command to allow TFTP service on UDP port 69, load the kernel TFTP state tracking module, and make the changes persistent:</simpara>
<screen># firewall-cmd --add-service=tftp &amp;&amp; firewall-cmd --runtime-to-permanent</screen>
<orderedlist numeration="arabic">
<listitem>
<simpara>Configure the firewall to allow TFTP service UDP on port 69.</simpara>
<screen># iptables -A OUTPUT -i eth0 -p udp --sport 69 -m state \
--state ESTABLISHED -j ACCEPT
# service iptables save</screen>
</listitem>
<listitem>
<simpara>Load the <literal>ip_conntrack_tftp</literal> kernel TFTP state module. In the <literal>/etc/sysconfig/iptables-config</literal> file, locate <literal>IPTABLES_MODULES</literal> and add <literal>ip_conntrack_tftp</literal> as follows:</simpara>
<screen>IPTABLES_MODULES="ip_conntrack_tftp"</screen>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="Configuring_Networking-Adding_a_Domain_to_the_Satellite_Server">
<title>Adding a Domain to {ProjectServer}</title>
<simpara>{ProjectServer} defines domain names for each host on the network. {ProjectServer} must have information about the domain and the {SmartProxyServer} responsible for domain name assignment.</simpara>
<formalpara>
<title>Checking for Existing Domains</title>
<para>{ProjectServer} might already have the relevant domain created as part of {ProjectServer} installation. Switch the context to <literal>Any Organization</literal> and <literal>Any Location</literal> then check the domain list to see if it exists.</para>
</formalpara>
<formalpara>
<title>DNS Server Configuration Considerations</title>
<para>During the DNS record creation, {Project} performs conflict DNS lookups to verify that the host name is not in active use. This check runs against one of the following DNS servers:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>The system-wide resolver if <emphasis role="strong">Adminster</emphasis> &gt; <emphasis role="strong">Settings</emphasis> &gt; <emphasis role="strong">Query local nameservers</emphasis> is set to <emphasis role="strong">true</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>The nameservers that are defined in the subnet associated with the host.</simpara>
</listitem>
<listitem>
<simpara>The authoritative NS-Records that are queried from the SOA from the domain name associated with the host.</simpara>
</listitem>
</itemizedlist>
<simpara>If you experience timeouts during DNS conflict resolution, check the following settings:</simpara>
<itemizedlist>
<listitem>
<simpara>The subnet nameservers must be reachable from {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The domain name must have a Start of Authority (SOA) record available from {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>The system resolver in the `/etc/resolv.conf`file must have a valid and working configuration.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To add a domain to {Project}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Domains</emphasis> and click <emphasis role="strong">Create Domain</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">DNS Domain</emphasis> field, enter the full DNS domain name.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Fullname</emphasis> field, enter the plain text name of the domain.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Parameters</emphasis> tab and configure any domain level parameters to apply to hosts attached to this domain. For example, user defined Boolean or string parameters to use in templates.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Add Parameter</emphasis> and fill in the <emphasis role="strong">Name</emphasis> and <emphasis role="strong">Value</emphasis> fields.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab, and add the location where the domain resides.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab, and add the organization that the domain belongs to.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Use the <literal>hammer domain create</literal> command to create a domain:</para>
</formalpara>
<screen># hammer domain create --name "<emphasis>domain_name.com</emphasis>" \
--description "<emphasis>My example domain</emphasis>" --dns-id 1 \
--locations "<emphasis>My_Location</emphasis>" --organizations "<emphasis>My_Organization</emphasis>"</screen>
<simpara>In this example, the <literal>--dns-id</literal> option uses <literal>1</literal>, which is the ID of your integrated {SmartProxy} on {ProjectServer}.</simpara>
</section>
<section xml:id="Configuring_Networking-Adding_a_Subnet_to_the_Satellite_Server">
<title>Adding a Subnet to {ProjectServer}</title>
<simpara>You must add information for each of your subnets to {ProjectServer} because {Project} configures interfaces for new hosts. To configure interfaces, {ProjectServer} must have all the information about the network that connects these interfaces.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a subnet to {ProjectServer}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Subnets</emphasis>, and in the Subnets window, click <emphasis role="strong">Create Subnet</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Network address</emphasis> field, enter the network address for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Network prefix</emphasis> field, enter the network prefix for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Network mask</emphasis> field, enter the network mask for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Gateway address</emphasis> field, enter the external gateway for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Primary DNS server</emphasis> field, enter a primary DNS for the subnet.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Secondary DNS server</emphasis>, enter a secondary DNS for the subnet.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">IPAM</emphasis> list, select the method that you want to use for IP address management (IPAM). For more information about IPAM, see <xref linkend="networking_resources"/>.</simpara>
</listitem>
<listitem>
<simpara>Enter the information for the IPAM method that you select.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Domains</emphasis> tab and select the domains that apply to this subnet.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">{SmartProxies}</emphasis> tab and select the {SmartProxy} that applies to each service in the subnet, including DHCP, TFTP, and reverse DNS services.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Parameters</emphasis> tab and configure any subnet level parameters to apply to hosts attached to this subnet. For example, user defined Boolean or string parameters to use in templates.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab and select the locations that use this {SmartProxy}.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab and select the organizations that use this {SmartProxy}.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the subnet information.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the subnet with the following command:</para>
</formalpara>
<screen># hammer subnet create --name "<emphasis>My_Network</emphasis>" \
--description "<emphasis>your_description</emphasis>" \
--network "192.168.140.0" --mask "255.255.255.0" \
--gateway "192.168.140.1" --dns-primary "192.168.140.2" \
--dns-secondary "8.8.8.8" --ipam "DHCP" \
--from "192.168.140.111" --to "192.168.140.250" --boot-mode "DHCP" \
--domains "<emphasis>example.com</emphasis>" --dhcp-id 1 --dns-id 1 --tftp-id 1 \
--locations "<emphasis>My_Location</emphasis>" --organizations "<emphasis>My_Organization</emphasis>"</screen>
<note>
<simpara>In this example, the <literal>--dhcp-id</literal>, <literal>--dns-id</literal>, and <literal>--tftp-id</literal> options use 1, which is the ID of the integrated {SmartProxy} in {ProjectServer}.</simpara>
</note>
</section>
</chapter>
<chapter xml:id="chap-Infoblox-Integration">
<title>Using Infoblox as DHCP and DNS Providers</title>
<simpara>You can use {SmartProxyServer} to connect to your Infoblox application to create and manage DHCP and DNS records, and to reserve IP addresses.</simpara>
<section xml:id="_limitations">
<title>Limitations</title>
<simpara>All DHCP and DNS records can be managed only in a single Network or DNS view, After you install the Infoblox modules on {SmartProxy} and set up the view using the <literal>{foreman-installer}</literal> command, you cannot edit the view.</simpara>
<simpara>{SmartProxyServer} communicates with a single Infoblox node using the standard HTTPS web API. If you want to configure clustering and High Availability, make the configurations in Infoblox.</simpara>
<simpara>Hosting PXE-related files using Infoblox&#8217;s TFTP functionality is not supported. You must use {SmartProxy} as a TFTP server for PXE provisioning. For more information, see <xref linkend="Configuring_Networking"/>.</simpara>
<simpara>{Project} IPAM feature cannot be integrated with Infoblox.</simpara>
</section>
<section xml:id="_prerequisites">
<title>Prerequisites</title>
<simpara>You must have Infoblox account credentials to manage DHCP and DNS entries in {Project}.</simpara>
<simpara>Ensure that you have Infoblox administration roles with the names: <literal>DHCP Admin</literal> and <literal>DNS Admin</literal>.</simpara>
<simpara>The administration roles must have permissions or belong to an admin group that permits the accounts to perform tasks through the Infoblox API.</simpara>
</section>
<section xml:id="_installing_the_infoblox_ca_certificate_on_smartproxyserver">
<title>Installing the Infoblox CA Certificate on {SmartProxyServer}</title>
<simpara>You must install Infoblox HTTPS CA certificate on the base system for all {SmartProxies} that you want to integrate with Infoblox applications.</simpara>
<simpara>You can download the certificate from the Infoblox web UI, or you can use the following OpenSSL commands to download the certificate:</simpara>
<screen># update-ca-trust enable
# openssl s_client -showcerts -connect <emphasis>infoblox.example.com</emphasis>:443 &lt;/dev/null | \
openssl x509 -text &gt;/etc/pki/ca-trust/source/anchors/infoblox.crt
# update-ca-trust extract</screen>
<itemizedlist>
<listitem>
<simpara>The <literal><emphasis>infoblox.example.com</emphasis></literal> entry must match the host name for the Infoblox application in the X509 certificate.</simpara>
</listitem>
</itemizedlist>
<simpara>To test the CA certificate, use a CURL query:</simpara>
<screen># curl -u admin:infoblox https://<emphasis>infoblox.example.com</emphasis>/wapi/v2.0/network</screen>
<simpara>Example positive response:</simpara>
<screen>[
    {
        "_ref": "network/ZG5zLm5ldHdvcmskMTkyLjE2OC4yMDIuMC8yNC8w:<emphasis>infoblox.example.com</emphasis>/24/default",
        "network": "192.168.202.0/24",
        "network_view": "default"
    }
]</screen>
</section>
<section xml:id="Infoblox-Integration-Installing_the_DHCP_Infoblox_Module">
<title>Installing the DHCP Infoblox module</title>
<simpara>Use this procedure to install the DHCP Infoblox module on {SmartProxy}. Note that you cannot manage records in separate views.</simpara>
<simpara>You can also install DHCP and DNS Infoblox modules simultaneously by combining this procedure and <xref linkend="Infoblox-Integration-Installing_the_DNS_Infoblox_Module"/></simpara>
<formalpara>
<title>DHCP Infoblox Record Type Considerations</title>
<para>Use only the <literal>--foreman-proxy-plugin-dhcp-infoblox-record-type fixedaddress</literal> option to configure the DHCP and DNS modules.</para>
</formalpara>
<simpara>Configuring both DHCP and DNS Infoblox modules with the <literal>host</literal> record type setting causes DNS conflicts and is not supported. If you install the Infoblox module on {SmartProxyServer} with the <literal>--foreman-proxy-plugin-dhcp-infoblox-record-type</literal> option set to <literal>host</literal>, you must unset both DNS {SmartProxy} and Reverse DNS {SmartProxy} options because Infoblox does the DNS management itself. You cannot use the <literal>host</literal> option without creating conflicts and, for example, being unable to rename hosts in {Project}.</simpara>
<formalpara>
<title>Procedure</title>
<para>To install the Infoblox module for DHCP, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On {SmartProxy}, enter the following command:</simpara>
<screen># {foreman-installer} --enable-foreman-proxy-plugin-dhcp-infoblox \
--foreman-proxy-dhcp true \
--foreman-proxy-dhcp-managed false \
--foreman-proxy-dhcp-provider infoblox \
--foreman-proxy-plugin-dhcp-infoblox-record-type fixedaddress \
--foreman-proxy-dhcp-server <emphasis>infoblox.example.com</emphasis> \
--foreman-proxy-plugin-dhcp-infoblox-username admin \
--foreman-proxy-plugin-dhcp-infoblox-password infoblox \
--foreman-proxy-plugin-dhcp-infoblox-network-view default \
--foreman-proxy-plugin-dhcp-infoblox-dns-view default</screen>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">{SmartProxies}</emphasis> and select the {SmartProxy} with the Infoblox DHCP module and click <emphasis role="strong">Refresh</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">dhcp</emphasis> features are listed.</simpara>
</listitem>
<listitem>
<simpara>For all domains managed through Infoblox, ensure that the DNS {SmartProxy} is set for that domain. To verify, in the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Domains</emphasis>, and inspect the settings of each domain.</simpara>
</listitem>
<listitem>
<simpara>For all subnets managed through Infoblox, ensure that DHCP {SmartProxy} and Reverse DNS {SmartProxy} is set. To verify, in the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Subnets</emphasis>, and inspect the settings of each subnet.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Infoblox-Integration-Installing_the_DNS_Infoblox_Module">
<title>Installing the DNS Infoblox Module</title>
<simpara>Use this procedure to install the DNS Infoblox module on {SmartProxy}. You can also install DHCP and DNS Infoblox modules simultaneously by combining this procedure and <xref linkend="Infoblox-Integration-Installing_the_DHCP_Infoblox_Module"/>.</simpara>
<simpara>DNS records are managed only in the default DNS view, it&#8217;s not possible to specify which DNS view to use.</simpara>
<simpara>To install the DNS Infoblox module, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On {SmartProxy}, enter the following command:</simpara>
<screen># {foreman-installer} --enable-foreman-proxy-plugin-dns-infoblox \
--foreman-proxy-dns true \
--foreman-proxy-dns-managed false \
--foreman-proxy-dns-provider infoblox \
--foreman-proxy-plugin-dns-infoblox-dns-server <emphasis>infoblox.example.com</emphasis> \
--foreman-proxy-plugin-dns-infoblox-username admin \
--foreman-proxy-plugin-dns-infoblox-password infoblox</screen>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">{SmartProxies}</emphasis> and select the {SmartProxy} with the Infoblox DNS module and click <emphasis role="strong">Refresh</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">dns</emphasis> features are listed.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="Configuring_Networking-Configuring_gPXE_to_Reduce_Provisioning_Times">
<title>Configuring iPXE to Reduce Provisioning Times</title>
<simpara>You can use {Project} to configure PXELinux to chainboot iPXE and boot using the HTTP protocol if you have the following restrictions that prevent you from using PXE:</simpara>
<itemizedlist>
<listitem>
<simpara>A network with unmanaged DHCP servers.</simpara>
</listitem>
<listitem>
<simpara>A PXE service that is blacklisted on your network or restricted by a firewall.</simpara>
</listitem>
<listitem>
<simpara>An unreliable TFTP UDP-based protocol because of, for example, a low-bandwidth network.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>iPXE Workflow Overview</title>
<para>The provisioning process using iPXE follows this workflow:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>A discovered host boots over PXE.</simpara>
</listitem>
<listitem>
<simpara>The host loads either <literal>ipxe.efi</literal> or <literal>undionly.0</literal>.</simpara>
</listitem>
<listitem>
<simpara>The host initializes again on the network using DHCP.</simpara>
</listitem>
<listitem>
<simpara>The DHCP server detects the iPXE firmware and returns the iPXE template URL with the bootstrap flag.</simpara>
</listitem>
<listitem>
<simpara>The host requests iPXE template. {Project} does not recognize the host, and because the bootstrap flag is set, the host receives the iPXE intermediate script template that ships with {Project}.</simpara>
</listitem>
<listitem>
<simpara>The host runs the intermediate iPXE script and downloads the discovery image.</simpara>
</listitem>
<listitem>
<simpara>The host starts the discovery operating system and performs a discovery request.</simpara>
</listitem>
<listitem>
<simpara>The host is scheduled for provisioning and restarts.</simpara>
</listitem>
<listitem>
<simpara>The host boots over PXE.</simpara>
</listitem>
<listitem>
<simpara>The previous workflow repeats, but {Project} recognizes the host&#8217;s remote IP address and instead of the intermediate template, the host receives a regular iPXE template.</simpara>
</listitem>
<listitem>
<simpara>The host reads the iPXE configuration and boots the installer.</simpara>
</listitem>
<listitem>
<simpara>From this point, the installation follows a regular PXE installation workflow.</simpara>
</listitem>
</itemizedlist>
<simpara>Note that the workflow uses the discovery process, which is optional. To set up the discovery service, see <xref linkend="setting_up_the_discovery_service_for_iPXE"/>.</simpara>
<simpara>With {Project}, you can set up hosts to download either the <literal>ipxe.efi</literal> or <literal>undionly.kpxe</literal> over TFTP. When the file downloads, all communication continues using HTTP. {Project} uses the iPXE provisioning script either to load an operating system installer or the next entry in the boot order.</simpara>
<simpara>There are three methods of using iPXE with {ProjectName}:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Chainbooting virtual machines using hypervisors that use iPXE as primary firmware.</simpara>
</listitem>
<listitem>
<simpara>Using PXELinux through TFTP to chainload iPXE directly on bare metal hosts.</simpara>
</listitem>
<listitem>
<simpara>Using PXELinux through UNDI, which uses HTTP to transfer the kernel and the initial RAM disk on bare-metal hosts.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Security Information</title>
<para>The iPXE binary in {RHEL} is built without some security features. For this reason, you can use HTTP, and cannot use HTTPs. All security-related features of iPXE in {RHEL} are not supported. For more information, see <link xlink:href="https://access.redhat.com/solutions/3483601">Red Hat Enterprise Linux HTTPS support in iPXE</link>.</para>
</formalpara>
<formalpara>
<title>Prerequisites</title>
<para>Before you begin, ensure that the following conditions are met:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>A host exists on {ProjectName} to use.</simpara>
</listitem>
<listitem>
<simpara>The MAC address of the provisioning interface matches the host configuration.</simpara>
</listitem>
<listitem>
<simpara>The provisioning interface of the host has a valid DHCP reservation.</simpara>
</listitem>
<listitem>
<simpara>The NIC is capable of PXE booting. For more information, see <link xlink:href="http://ipxe.org/appnote/hardware_drivers">http://ipxe.org/appnote/hardware_drivers</link>.</simpara>
</listitem>
<listitem>
<simpara>The NIC is compatible with iPXE.</simpara>
</listitem>
</itemizedlist>
<section xml:id="setting_up_the_discovery_service_for_iPXE">
<title>Setting up the Discovery Service for iPXE</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>On {SmartProxyServer}, install the Foreman discovery service:</simpara>
<screen># yum install foreman-discovery-image</screen>
</listitem>
<listitem>
<simpara>On {SmartProxyServer}, enable the <emphasis role="strong">httpboot</emphasis> service:</simpara>
<screen># {foreman-installer} --foreman-proxy-httpboot true</screen>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis>, and click the <emphasis role="strong">Provisioning</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Locate the <emphasis role="strong">Default PXE global template entry</emphasis> row and in the <emphasis role="strong">Value</emphasis> column, change the value to <emphasis role="strong">discovery</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_chainbooting_virtual_machines">
<title>Chainbooting virtual machines</title>
<simpara>Some virtualization hypervisors use iPXE as primary firmware for PXE booting. Because of this, you can chainboot without TFTP and PXELinux.</simpara>
<formalpara>
<title>Chainbooting virtual machine workflow</title>
<para>Using virtualization hypervisors removes the need for TFTP and PXELinux. It has the following workflow:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Virtual machine starts</simpara>
</listitem>
<listitem>
<simpara>iPXE retrieves the network credentials using DHCP</simpara>
</listitem>
<listitem>
<simpara>iPXE retrieves the HTTP address using DHCP</simpara>
</listitem>
<listitem>
<simpara>iPXE chainloads the iPXE template from the template {SmartProxy}</simpara>
</listitem>
<listitem>
<simpara>iPXE loads the kernel and initial RAM disk of the installer</simpara>
</listitem>
</orderedlist>
<simpara>If you want to use the discovery service with iPXE, see <xref linkend="setting_up_the_discovery_service_for_iPXE"/>.</simpara>
<simpara>Ensure that the hypervisor that you want to use supports iPXE. The following virtualization hypervisors support iPXE:</simpara>
<itemizedlist>
<listitem>
<simpara>libvirt</simpara>
</listitem>
<listitem>
<simpara>oVirt</simpara>
</listitem>
<listitem>
<simpara>RHEV</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Configuring {ProjectServer} to use iPXE</title>
<para>You can use the default template to configure iPXE booting for hosts.
If you want to change the default values in the template, clone the template and edit the clone.</para>
</formalpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Copy a boot file to the TFTP directory on your {ProjectServer}:</simpara>
<itemizedlist>
<listitem>
<simpara>For EFI systems, copy the <literal>ipxe.efi</literal> file:</simpara>
<screen># cp /usr/share/ipxe/ipxe.efi /var/lib/tftpboot/</screen>
</listitem>
<listitem>
<simpara>For BIOS systems, copy the <literal>undionly.kpxe</literal> file:</simpara>
<screen># cp /usr/share/ipxe/undionly.kpxe /var/lib/tftpboot/undionly.0</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis>, enter <literal>Kickstart default iPXE</literal> and click <emphasis role="strong">Search</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: If you want to change the template, click <emphasis role="strong">Clone</emphasis>, enter a unique name, and click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the name of the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>If you clone the template, you can make changes you require on the <emphasis role="strong">Template</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab, and select the operating systems that your host uses.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab, and add the location where the host resides.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab, and add the organization that the host belongs to.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating systems</emphasis> and select the operating system of your host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Templates</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">iPXE Template</emphasis> list, select the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">All Hosts</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Hosts</emphasis> page, select the host that you want to use.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Templates</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">iPXE template</emphasis> list, select <emphasis role="strong">Review</emphasis> to verify that the <emphasis role="strong">Kickstart default iPXE</emphasis> template is the correct template.</simpara>
</listitem>
<listitem>
<simpara>To use the iPXE bootstrapping feature for {Project}, configure the <literal>dhcpd.conf</literal> file as follows:</simpara>
<screen>if exists user-class and option user-class = "iPXE" {
  filename "http://{foreman-example-com}/unattended/iPXE?bootstrap=1";
} elsif option architecture = 00:06 {
  filename "ipxe.efi";
} elsif option architecture = 00:07 {
  filename "ipxe.efi";
} elsif option architecture = 00:09 {
  filename "ipxe.efi";
} else {
  filename "undionly.0";
}</screen>
<simpara>If you use an isolated network, use a {SmartProxyServer} URL with TCP port <literal>8000</literal>, instead of the URL of {ProjectServer}.</simpara>
<note>
<simpara>Use <literal><link xlink:href="http://{foreman-example-com}/unattended/iPXE?bootstrap=1">http://{foreman-example-com}/unattended/iPXE?bootstrap=1</link></literal> when {SmartProxy} HTTP endpoint is disabled (installer option --foreman-proxy-http false). Template {SmartProxy} plug-in has the default value <literal>8000</literal> when enabled and can be changed with <literal>--foreman-proxy-http-port installer</literal> option. In that case, use <literal><link xlink:href="http://{smartproxy-example-com}:8000">http://{smartproxy-example-com}:8000</link></literal>.
You must update the <literal>/etc/dhcp/dhcpd.conf</literal> file after every upgrade.</simpara>
</note>
</listitem>
</orderedlist>
</section>
<section xml:id="_chainbooting_projectserver_to_use_ipxe_directly">
<title>Chainbooting {ProjectServer} to use iPXE directly</title>
<simpara>Use this procedure to set up iPXE to use a built-in driver for network communication or UNDI interface. There are separate procedures to configure {ProjectServer} and {SmartProxy} to use iPXE.</simpara>
<simpara>You can use this procedure only with bare metal hosts.</simpara>
<orderedlist numeration="arabic">
<title>Chainbooting iPXE directly or with UNDI workflow</title>
<listitem>
<simpara>Host powers on</simpara>
</listitem>
<listitem>
<simpara>PXE driver retrieves the network credentials using DHCP</simpara>
</listitem>
<listitem>
<simpara>PXE driver retrieves the PXELinux firmware <literal>pxelinux.0</literal> using TFTP</simpara>
</listitem>
<listitem>
<simpara>PXELinux searches for the configuration file on the TFTP server</simpara>
</listitem>
<listitem>
<simpara>PXELinux chainloads iPXE <literal>ipxe.lkrn</literal> or <literal>undionly-ipxe.0</literal></simpara>
</listitem>
<listitem>
<simpara>iPXE retrieves the network credentials using DHCP again</simpara>
</listitem>
<listitem>
<simpara>iPXE retrieves HTTP address using DHCP</simpara>
</listitem>
<listitem>
<simpara>iPXE chainloads the iPXE template from the template {SmartProxy}</simpara>
</listitem>
<listitem>
<simpara>iPXE loads the kernel and initial RAM disk of the installer</simpara>
</listitem>
</orderedlist>
<simpara>If you want to use the discovery service with iPXE, see <xref linkend="setting_up_the_discovery_service_for_iPXE"/>.</simpara>
<formalpara>
<title>Configuring {ProjectName} Server to use iPXE</title>
<para>You can use the default template to configure iPXE booting for hosts.
If you want to change the default values in the template, clone the template and edit the clone.</para>
</formalpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis>, enter <literal>PXELinux chain iPXE</literal> or, for BIOS systems, enter <literal>PXELinux chain iPXE UNDI</literal>, and click <emphasis role="strong">Search</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: If you want to change the template, click <emphasis role="strong">Clone</emphasis>, enter a unique name, and click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the name of the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>If you clone the template, you can make changes you require on the <emphasis role="strong">Template</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab, and select the operating systems that your host uses.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab, and add the location where the host resides.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab, and add the organization that the host belongs to.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Provisioning Templates</emphasis> page, enter <literal>Kickstart default iPXE</literal> into the search field and click <emphasis role="strong">Search</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: If you want to change the template, click <emphasis role="strong">Clone</emphasis>, enter a unique name, and click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the name of the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>If you clone the template, you can make changes you require on the <emphasis role="strong">Template</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab, and associate the template with the operating system that your host uses.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab, and add the location where the host resides.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab, and add the organization that the host belongs to.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating systems</emphasis> and select the operating system of your host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Templates</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">PXELinux template</emphasis> list, select the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">iPXE template</emphasis> list, select the template you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">All Hosts</emphasis>, and select the host you want to use.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Templates</emphasis> tab, and from the <emphasis role="strong">PXELinux template</emphasis> list, select <emphasis role="strong">Review</emphasis> to verify the template is the correct template.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">iPXE template</emphasis> list, select <emphasis role="strong">Review</emphasis> to verify the template is the correct template. If there is no PXELinux entry, or you cannot find the new template, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">All Hosts</emphasis>, and on your host, click <emphasis role="strong">Edit</emphasis>. Click the <emphasis role="strong">Operating system</emphasis> tab and click the Provisioning Template <emphasis role="strong">Resolve</emphasis> button to refresh the list of templates.</simpara>
</listitem>
<listitem>
<simpara>To use the iPXE bootstrapping feature for {Project}, configure the <literal>dhcpd.conf</literal> file as follows:</simpara>
<screen>if exists user-class and option user-class = "iPXE" {
  filename "http://{foreman-example-com}/unattended/iPXE?bootstrap=1";
} elsif option architecture = 00:06 {
  filename "ipxe.efi";
} elsif option architecture = 00:07 {
  filename "ipxe.efi";
} elsif option architecture = 00:09 {
  filename "ipxe.efi";
} else {
  filename "undionly.0";
}</screen>
<simpara>If you use an isolated network, use a {SmartProxyServer} URL with TCP port <literal>8000</literal>, instead of the URL of {ProjectServer}.</simpara>
<note>
<simpara>For <literal><link xlink:href="http://{foreman-example-com}/unattended/iPXE">http://{foreman-example-com}/unattended/iPXE</link></literal>, you can also use a {ProjectName} {SmartProxy} <literal><link xlink:href="http://{smartproxy-example-com}:8000/unattended/iPXE">http://{smartproxy-example-com}:8000/unattended/iPXE</link></literal>.
You must update the <literal>/etc/dhcp/dhcpd.conf</literal> file after every upgrade.</simpara>
</note>
</listitem>
</orderedlist>
</section>
<section xml:id="_chainbooting_projectname_smartproxy_to_use_ipxe_directly">
<title>Chainbooting {ProjectName} {SmartProxy} to use iPXE directly</title>
<simpara>You must perform this procedure on all {SmartProxies}.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Install the <literal>ipxe-bootimgs</literal> RPM package:</simpara>
<screen># yum install ipxe-bootimgs</screen>
</listitem>
<listitem>
<simpara>Copy the iPXE firmware to the TFTP server&#8217;s root directory. Do not use symbolic links because TFTP runs in the <literal>chroot</literal> environment.</simpara>
<itemizedlist>
<listitem>
<simpara>For EFI systems, copy the <literal>ipxe.efi</literal> file:</simpara>
<screen># cp /usr/share/ipxe/ipxe.lkrn /var/lib/tftpboot/</screen>
</listitem>
<listitem>
<simpara>For BIOS systems, copy the <literal>undionly.kpxe</literal> file:</simpara>
<screen># cp /usr/share/ipxe/undionly.kpxe /var/lib/tftpboot/undionly-ipxe.0</screen>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="Provisioning_Bare_Metal_Hosts">
<title>Provisioning Bare Metal Hosts</title>
<simpara>There are four main ways to provision bare metal instances with {ProjectName} 6.6:</simpara>
<variablelist>
<varlistentry>
<term>Unattended Provisioning</term>
<listitem>
<simpara>New hosts are identified by a MAC address and {ProjectServer} provisions the host using a PXE boot process.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Unattended Provisioning with Discovery</term>
<listitem>
<simpara>New hosts use PXE boot to load the {Project} Discovery service. This service identifies hardware information about the host and lists it as an available host to provision.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>PXE-less Provisioning</term>
<listitem>
<simpara>New hosts are provisioned with a boot disk or PXE-less discovery image that {ProjectServer} generates.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>PXE-less Provisioning with Discovery</term>
<listitem>
<simpara>New hosts use an ISO boot disk that loads the {Project} Discovery service. This service identifies hardware information about the host and lists it as an available host to provision.</simpara>
</listitem>
</varlistentry>
</variablelist>
<formalpara>
<title>BIOS and UEFI Support</title>
<para>With {ProjectName}, you can perform both BIOS and UEFI based PXE provisioning.</para>
</formalpara>
<simpara>Both BIOS and UEFI interfaces work as interpreters between the computer&#8217;s operating system and firmware, initializing the hardware components and starting the operating system at boot time.</simpara>
<simpara>In {Project} provisioning, the PXE loader option defines the DHCP <literal>filename</literal> option to use during provisioning. For BIOS systems, use the <emphasis role="strong">PXELinux BIOS</emphasis> option to enable a provisioned node to download the <literal>pxelinux.0</literal> file over TFTP. For UEFI systems, use the <emphasis role="strong">PXEGrub2 UEFI</emphasis> option to enable a TFTP client to download <literal>grub2/grubx64.efi</literal> file.</simpara>
<simpara>For BIOS provisioning, you must associate a PXELinux template with the operating system.</simpara>
<simpara>For UEFI provisioning, you must associate a PXEGrub2 template with the operating system.</simpara>
<simpara>If you associate both PXELinux and PXEGrub2 templates, {ProjectX} can deploy configuration files for both on a TFTP server, so that you can switch between PXE loaders easily.</simpara>
<section xml:id="Provisioning_Bare_Metal_Hosts-Prerequisites_for_Bare_Metal_Provisioning">
<title>Prerequisites for Bare Metal Provisioning</title>
<simpara>The requirements for bare metal provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing the network for bare metal hosts. For unattended provisioning and discovery-based provisioning, {ProjectServer} requires PXE server settings. For more information, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
<listitem>
<simpara>A bare metal host or a blank VM.</simpara>
</listitem>
</itemizedlist>
<simpara>For information about the security token for unattended and PXE-less provisioning, see <xref linkend="Provisioning_Bare_Metal_Hosts-Security_Token_in_the_Boot_Process"/>.</simpara>
</section>
<section xml:id="Provisioning_Bare_Metal_Hosts-Security_Token_in_the_Boot_Process">
<title>Configuring the Security Token Validity Duration</title>
<simpara>When performing unattended and PXE-less provisioning, as a security measure, {Project} automatically generates a unique token and adds this token to the {provision-script} URL in the PXE configuration file (PXELinux, Grub2).</simpara>
<simpara>By default, the token is valid for 360 minutes. When you provision a host, ensure that you reboot the host within this time frame. If the token expires, it is no longer valid and you receive a 404 error and the operating system installer download fails.</simpara>
<simpara>To adjust the token&#8217;s duration of validity, in the {Project} web UI, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis>, and click the <emphasis role="strong">Provisioning</emphasis> tab. Find the <emphasis role="strong">Token duration</emphasis> option, and click the edit icon and edit the duration, or enter <literal>0</literal> to disable token generation.</simpara>
<simpara>If token generation is disabled, an attacker can spoof client IP address and download {provision-script} from {ProjectServer}, including the encrypted root password.</simpara>
</section>
<section xml:id="Provisioning_Bare_Metal_Hosts-Creating_New_Hosts_with_Unattended_Provisioning">
<title>Creating Hosts with Unattended Provisioning</title>
<simpara>Unattended provisioning is the simplest form of host provisioning. You enter the host details on {ProjectServer} and boot your host. {ProjectServer} automatically manages the PXE configuration, organizes networking services, and provides the operating system and configuration for the host.</simpara>
<simpara>This method of provisioning hosts uses minimal interaction during the process.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a host with unattended provisioning, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs and change the context to match your requirements.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select a host group that you want to use to populate the form.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab, and on the host&#8217;s interface, click <emphasis role="strong">Edit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">MAC address</emphasis> field, enter a MAC address for the host. This ensures the identification of the host during the PXE boot process.</simpara>
</listitem>
<listitem>
<simpara>Ensure that {ProjectServer} automatically selects the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">MAC address</emphasis> field, enter a MAC address of the host&#8217;s provisioning interface. This ensures the identification of the host during the PXE boot process.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">OK</emphasis> to save. To add another interface, click <emphasis role="strong">Add Interface</emphasis>. You can select only one interface for <emphasis role="strong">Provision</emphasis> and <emphasis role="strong">Primary</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and verify that all fields contain values. Confirm each aspect of the operating system.</simpara>
</listitem>
<listitem>
<simpara>Optional: Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning template</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
<simpara>For more information about associating provisioning templates, see <xref linkend="Configuring_Provisioning_Resources-Creating_Provisioning_Templates"/>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host details.</simpara>
<simpara>For more information about network interfaces, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html//managing_hosts/index#Adding_Network_Interfaces">Adding network interfaces</link>.</simpara>
</listitem>
</orderedlist>
<simpara>This creates the host entry and the relevant provisioning settings. This also includes creating the necessary directories and files for PXE booting the bare metal host. If you start the physical host and set its boot mode to PXE, the host detects the DHCP service of {ProjectServer}'s integrated {SmartProxy} and starts installing the operating system from its Kickstart tree.</simpara>
<formalpara>
<title>For CLI Users</title>
<para>Create the host with the <literal>hammer host create</literal> command.</para>
</formalpara>
<screen># hammer host create --name "<emphasis>My_Unattended_Host</emphasis>" --organization "<emphasis>My_Organization</emphasis>" \
--location "<emphasis>My_Location</emphasis>" --hostgroup "<emphasis>My_Host_Group</emphasis>" --mac "<emphasis>aa:aa:aa:aa:aa:aa</emphasis>" \
--build true --enabled true --managed true</screen>
<simpara>Ensure the network interface options are set using the <literal>hammer host interface update</literal> command.</simpara>
<screen># hammer host interface update --host "test1" --managed true \
--primary true --provision true</screen>
</section>
<section xml:id="Provisioning_Bare_Metal_Hosts-Creating_New_Hosts_with_PXE-less_Provisioning">
<title>Creating Hosts with PXE-less Provisioning</title>
<simpara>Some hardware does not provide a PXE boot interface. In {Project}, you can provision a host without PXE boot. This is also known as PXE-less provisioning and involves generating a boot ISO that hosts can use. Using this ISO, the host can connect to {ProjectServer}, boot the installation media, and install the operating system.</simpara>
<simpara>{Project} also provides a PXE-less discovery service that operates without PXE-based services, such as DHCP and TFTP. For more information, see <xref linkend="implementing-pxe-less-discovery"/>.</simpara>
<formalpara>
<title>Boot ISO Types</title>
<para>There are four types of boot ISOs:</para>
</formalpara>
<variablelist>
<varlistentry>
<term>Host image</term>
<listitem>
<simpara>A boot ISO for the specific host. This image contains only the boot files that are necessary to access the installation media on {ProjectServer}. The user defines the subnet data in {Project} and the image is created with static networking.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Full host image</term>
<listitem>
<simpara>A boot ISO that contains the kernel and initial RAM disk image for the specific host. This image is useful if the host fails to chainload correctly. The provisioning template still downloads from {ProjectServer}.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Generic image</term>
<listitem>
<simpara>A boot ISO that is not associated with a specific host. The ISO sends the host&#8217;s MAC address to {ProjectServer}, which matches it against the host entry. The image does not store IP address details, and requires access to a DHCP server on the network to bootstrap. This image is also available from the <literal>/bootdisk/disks/generic</literal> URL on your {ProjectServer}, for example, <literal><link xlink:href="https://{foreman-example-com}/bootdisk/disks/generic">https://{foreman-example-com}/bootdisk/disks/generic</link></literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Subnet image</term>
<listitem>
<simpara>A boot ISO that is similar to the generic image but is configured with the address of a {SmartProxyServer}. This image is generic to all hosts with a provisioning NIC on the same subnet.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara><emphasis role="strong">Host image</emphasis> and <emphasis role="strong">Full host image</emphasis> contain provisioning tokens, therefore the generated image has limited lifespan. For more information about configuring security tokens, read <xref linkend="Provisioning_Bare_Metal_Hosts-Security_Token_in_the_Boot_Process"/>.</simpara>
<note>
<simpara>When using a <emphasis role="strong">Host image</emphasis>, <emphasis role="strong">Generic image</emphasis>, or <emphasis role="strong">Subnet image</emphasis>, see <link xlink:href="http://ipxe.org/appnote/hardware_drivers">http://ipxe.org/appnote/hardware_drivers</link> for a list of hardware drivers expected to work with an iPXE-based boot disk.</simpara>
</note>
<formalpara>
<title>Procedure</title>
<para>To create a host with PXE-less provisioning, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name that you want to become the provisioned system&#8217;s host name.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs and change the context to match your requirements.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select a host group that you want to use to populate the form.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab, and on the host&#8217;s interface, click <emphasis role="strong">Edit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">MAC address</emphasis> field, enter a MAC address for the host.</simpara>
</listitem>
<listitem>
<simpara>Ensure that {ProjectServer} automatically selects the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and verify that all fields contain values. Confirm each aspect of the operating system.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning template</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
<simpara>For more information about associating provisioning templates, see <xref linkend="Configuring_Provisioning_Resources-Creating_Provisioning_Templates"/>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host details.</simpara>
</listitem>
</orderedlist>
<simpara>This creates a host entry and the host details page appears.</simpara>
<simpara>The options on the upper-right of the window are the <emphasis role="strong">Boot disk</emphasis> menu. From this menu, one of the following images is available for download: <emphasis role="strong">Host image</emphasis>, <emphasis role="strong">Full host image</emphasis>, <emphasis role="strong">Generic image</emphasis>, and <emphasis role="strong">Subnet image</emphasis>.</simpara>
<formalpara>
<title>For CLI Users</title>
<para>Create the host with the <literal>hammer host create</literal> command.</para>
</formalpara>
<screen># hammer host create --name "<emphasis>My_Bare_Metal</emphasis>" --organization "<emphasis>My_Organization</emphasis>" \
--location "<emphasis>My_Location</emphasis>" --hostgroup "<emphasis>My_Host_Group</emphasis>" --mac "aa:aa:aa:aa:aa:aa" \
--build true --enabled true --managed true</screen>
<simpara>Ensure that your network interface options are set using the <literal>hammer host interface update</literal> command.</simpara>
<screen># hammer host interface update --host "test3" --managed true \
--primary true --provision true</screen>
<simpara>Download the boot disk from {ProjectServer} with the <literal>hammer bootdisk host</literal> command:</simpara>
<itemizedlist>
<listitem>
<simpara>For <emphasis role="strong">Host image</emphasis>:</simpara>
<screen># hammer bootdisk host --host <emphasis>test3.example.com</emphasis></screen>
</listitem>
<listitem>
<simpara>For <emphasis role="strong">Full host image</emphasis>:</simpara>
<screen># hammer bootdisk host --host <emphasis>test3.example.com</emphasis> --full true</screen>
</listitem>
<listitem>
<simpara>For <emphasis role="strong">Generic image</emphasis>:</simpara>
<screen># hammer bootdisk generic</screen>
</listitem>
<listitem>
<simpara>For <emphasis role="strong">Subnet image</emphasis>:</simpara>
<screen># hammer bootdisk subnet --subnet <emphasis>subnetName</emphasis></screen>
</listitem>
</itemizedlist>
<simpara>This creates a boot ISO for your host to use.</simpara>
<simpara>Write the ISO to a USB storage device using the <emphasis role="strong">dd</emphasis> utility or <emphasis role="strong">livecd-tools</emphasis> if required.</simpara>
<simpara>When you start the physical host and boot from the ISO or the USB storage device, the host connects to {ProjectServer} and starts installing operating system from its kickstart tree.</simpara>
</section>
<section xml:id="Configuring_Provisioning_Resources-Creating_Provisioning_Templates-Deploying_SSH_Keys_during_Provisioning">
<title>Deploying SSH Keys during Provisioning</title>
<simpara>Use this procedure to deploy SSH keys added to a user during provisioning. For information on adding SSH keys to a user, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-users_and_roles#sect-{Project_Link}-Administering_{Project_Link}-Creating_and_Managing_Users-Adding_SSH_keys_to_a_User">Adding SSH Keys to a User</link> in <emphasis>Administering {ProjectName}</emphasis>.</simpara>
<formalpara>
<title>Procedure</title>
<para>To deploy SSH keys during provisioning, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Create a provisioning template, or clone and edit an existing template. For more information, see <xref linkend="Configuring_Provisioning_Resources-Creating_Provisioning_Templates"/>.</simpara>
</listitem>
<listitem>
<simpara>In the template, click the <emphasis role="strong">Template</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Template editor</emphasis> field, add the <literal>create_users</literal> snippet to the <literal>%post</literal> section:</simpara>
<screen>&lt;%= snippet('create_users') %&gt;</screen>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default</emphasis> check box.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Application Operating Systems</emphasis> list, select an operating system.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the provisioning template.</simpara>
</listitem>
<listitem>
<simpara>Create a host that is associated with the provisioning template or rebuild a host using the OS associated with the modified template. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html//managing_hosts/#sect-{Project_Link}-Managing_Hosts-Managing_Hosts-Creating_a_Host">Creating a Host</link> in the <emphasis>Managing Hosts</emphasis> guide.</simpara>
<simpara>The SSH keys of the <emphasis role="strong">Owned by</emphasis> user are added automatically when the <literal>create_users</literal> snippet is executed during the provisioning process. You can set <emphasis role="strong">Owned by</emphasis> to an individual user or a user group. If you set <emphasis role="strong">Owned by</emphasis> to a user group, the SSH keys of all users in the user group are added automatically.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="configuring-the-discovery-service">
<title>Configuring the Discovery Service</title>
<simpara>{ProjectName} provides a method to automatically detect hosts on a network that are not in your {Project} inventory. These hosts boot the discovery image that performs hardware detection and relays this information back to {ProjectServer}. This method creates a list of ready-to-provision hosts in {ProjectServer} without needing to enter the MAC address of each host.</simpara>
<simpara>When you configure the Discovery service, and boot a blank, bare-metal host the boot menu has two options: <literal>local</literal> and <literal>discovery</literal>. If you select <literal>discovery</literal> to boot the Discovery image, after a few minutes, the Discovery image completes booting and a status screen is displayed.</simpara>
<simpara>The Discovery service is enabled by default on {ProjectServer}. However, the default setting of the global templates is to boot from the local hard drive. To use discovery you must change the default entry in the template to discovery.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/PXE-mode.png"/>
</imageobject>
<textobject><phrase>PXE mode</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>To use {ProjectServer} to provide the Discovery image, install the following RPM packages:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>foreman-discovery-image</literal></simpara>
</listitem>
<listitem>
<simpara><literal>rubygem-smart_proxy_discovery</literal></simpara>
</listitem>
</itemizedlist>
<simpara>The <literal>foreman-discovery-image</literal> package installs the Discovery ISO to the <literal>/usr/share/foreman-discovery-image/</literal> directory. You can build a PXE boot image from this ISO using the <literal>livecd-iso-to-pxeboot</literal> tool. The tool saves this PXE boot image in the <literal>/var/lib/tftpboot/boot</literal> directory. For more information, see <xref linkend="building-a-discovery-image"/>.</simpara>
<simpara>The <literal>rubygem-smart_proxy_discovery</literal> package configures a {SmartProxyServer}, such as the integrated {SmartProxy} of {ProjectServer}, to act as a proxy for the Discovery service.</simpara>
<simpara>When the installation completes, you can view the new menu option by navigating to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Discovered Hosts</emphasis>.</simpara>
<section xml:id="installing-the-discovery-service">
<title>Installing the Discovery Service</title>
<simpara>Complete the following procedure to enable the Discovery service on {SmartProxyServer}.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Enter the following commands on {SmartProxyServer}:</simpara>
<screen># yum install foreman-discovery-image rubygem-smart_proxy_discovery</screen>
<screen># {foreman-maintain} service restart</screen>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">{SmartProxy}</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the {SmartProxyServer} and select <emphasis role="strong">Refresh</emphasis> from the <emphasis role="strong">Actions</emphasis> list. Locate <emphasis role="strong">Discovery</emphasis> in the list of features to confirm the Discovery service is now running.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Subnets</title>
<para>All subnets with discoverable hosts require an appropriate {SmartProxyServer} selected to provide the Discovery service.</para>
</formalpara>
<simpara>To check this, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">{SmartProxies}</emphasis> and verify if the {SmartProxyServer} that you want to use lists the Discovery feature. If not, click <emphasis role="strong">Refresh features</emphasis>.</simpara>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Subnets</emphasis>, select a subnet, click the {SmartProxies} tab, and select the <emphasis role="strong">Discovery Proxy</emphasis> that you want to use. Perform this for each subnet that you want to use.</simpara>
</section>
<section xml:id="the-provisioning-template-pxelinux-discovery-snippet">
<title>The Provisioning Template PXELinux Discovery Snippet</title>
<simpara>For BIOS provisioning, the <literal>PXELinux global default</literal> template in the <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis> window contains the snippet <literal>pxelinux_discovery</literal>. The snippet has the following lines:</simpara>
<screen>LABEL discovery
  MENU LABEL Foreman Discovery Image
  KERNEL boot/fdi-image/vmlinuz0
  APPEND initrd=boot/fdi-image/initrd0.img rootflags=loop root=live:/fdi.iso rootfstype=auto ro rd.live.image acpi=force rd.luks=0 rd.md=0 rd.dm=0 rd.lvm=0 rd.bootif=0 rd.neednet=0 nomodeset proxy.url=&lt;%= foreman_server_url %&gt; proxy.type=foreman
  IPAPPEND 2</screen>
<simpara>The <literal>KERNEL</literal> and <literal>APPEND</literal> options boot the Discovery image and ramdisk. The <literal>APPEND</literal> option contains a <literal>proxy.url</literal> parameter, with the <literal>foreman_server_url</literal> macro as its argument. This macro resolves to the full URL of {ProjectServer}.</simpara>
<simpara>For UEFI provisioning, the <literal>PXEgrub2 global default</literal> template in the <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis> window contains the snippet <literal>pxegrub2_discovery</literal>:</simpara>
<screen>menuentry 'Foreman Discovery Image' --id discovery {
  linuxefi boot/fdi-image/vmlinuz0 rootflags=loop root=live:/fdi.iso rootfstype=auto ro rd.live.image acpi=force rd.luks=0 rd.md=0 rd.dm=0 rd.lvm=0 rd.bootif=0 rd.neednet=0 nomodeset proxy.url=&lt;%= foreman_server_url %&gt; proxy.type=foreman BOOTIF=01-$mac
  initrdefi boot/fdi-image/initrd0.img
}</screen>
<simpara>To use a {SmartProxy} to proxy the discovery steps, edit <literal>/var/lib/tftpboot/pxelinux.cfg/default</literal> or <literal>/var/lib/tftpboot/grub2/grub.cfg</literal> and change the URL to the FQDN of the {SmartProxyServer} you want to use.</simpara>
<simpara>The global template is available on {ProjectServer} and all {SmartProxies} that have the TFTP feature enabled.</simpara>
</section>
<section xml:id="automatic-contexts-for-discovered-hosts">
<title>Automatic Contexts for Discovered Hosts</title>
<simpara>{ProjectServer} assigns organization and location to discovered hosts according to the following sequence of rules:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>If a discovered host uses a subnet defined in {Project}, the host uses the first organization and location associated with the subnet.</simpara>
</listitem>
<listitem>
<simpara>If the <literal>discovery_organization</literal> or <literal>discovery_location</literal> fact values are set, the discovered host uses these fact values as an organization and location. To set these fact values, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis> &gt; <emphasis role="strong">Discovered</emphasis>, and add these facts to the <emphasis role="strong">Default organization</emphasis> and <emphasis role="strong">Default location</emphasis> fields. Ensure that the discovered host&#8217;s subnet also belongs to the organization and location set by the fact, otherwise  {Project} refuses to set it for security reasons.</simpara>
</listitem>
<listitem>
<simpara>If none of the previous conditions exists, {Project} assigns the first Organization and Location ordered by name.</simpara>
</listitem>
</orderedlist>
<simpara>You can change the organization or location using the bulk actions menu of the <emphasis role="strong">Discovered hosts</emphasis> page. Select the discovered hosts to modify and select <emphasis role="strong">Assign Organization</emphasis> or <emphasis role="strong">Assign Location</emphasis> from the <emphasis role="strong">Select Action</emphasis> menu.</simpara>
<simpara>Note that the <literal>foreman_organization</literal> and <literal>foreman_location</literal> facts are no longer valid values for assigning context for discovered hosts. You still can use these facts to configure the host for Puppet runs. To do this, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis> &gt; <emphasis role="strong">Puppet</emphasis> section and add the <literal>foreman_organization</literal> and <literal>foreman_location</literal> facts to the <emphasis role="strong">Default organization</emphasis> and <emphasis role="strong">Default location</emphasis> fields.</simpara>
</section>
<section xml:id="Creating_Hosts_from_Discovered_Hosts">
<title>Creating Hosts from Discovered Hosts</title>
<simpara>Provisioning discovered hosts follows a provisioning process that is similar to PXE provisioning. The main difference is that instead of manually entering the host&#8217;s MAC address, you can select the host to provision from the list of discovered hosts.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a host from a discovered host, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Discovered host</emphasis>. Select the host you want to use and click <emphasis role="strong">Provision</emphasis> to the right of the list.</simpara>
</listitem>
<listitem>
<simpara>Select from one of the two following options:</simpara>
<itemizedlist>
<listitem>
<simpara>To provision a host from a host group, select a host group, organization, and location, and then click <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To provision a host with further customization, click <emphasis role="strong">Customize Host</emphasis> and enter the additional details you want to specify for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Verify that the fields are populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically populates the MAC address from the Discovery results.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Ensure that {ProjectServer} automatically selects the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and verify that all fields contain values. Confirm each aspect of the operating system.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning template</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
<simpara>For more information about associating provisioning templates, see <xref linkend="Configuring_Provisioning_Resources-Creating_Provisioning_Templates"/>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host details.</simpara>
</listitem>
</orderedlist>
<simpara>When the host provisioning is complete, the discovered host becomes a content host. To view the host, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Content Hosts</emphasis>.</simpara>
<orderedlist numeration="arabic">
<title>For CLI Users</title>
<listitem>
<simpara>Identify the discovered host to use for provisioning:</simpara>
<screen># hammer discovery list</screen>
</listitem>
<listitem>
<simpara>Select a host and provision it using a host group. Set a new host name with the <literal>--new-name</literal> option:</simpara>
<screen># hammer discovery provision --name "<emphasis>host_name</emphasis>" \
--new-name "<emphasis>new_host_name</emphasis>" --organization "<emphasis>My_Organization</emphasis>" \
--location "<emphasis>My_Location</emphasis>" --hostgroup "<emphasis>My_Host_Group</emphasis>" --build true \
--enabled true --managed true</screen>
<simpara>This removes the host from the discovered host listing and creates a host entry with the provisioning settings. The Discovery image automatically resets the host so that it can boot to PXE. The host detects the DHCP service on {ProjectServer}'s integrated {SmartProxy} and starts installing the operating system. The rest of the process is identical to normal PXE workflow described in <xref linkend="Provisioning_Bare_Metal_Hosts-Creating_New_Hosts_with_Unattended_Provisioning"/>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="creating-discovery-rules">
<title>Creating Discovery Rules</title>
<simpara>As a method of automating the provisioning process for discovered hosts, {Project} provides a feature to create discovery rules. These rules define how discovered hosts automatically provision themselves, based on the assigned host group. For example, you can automatically provision hosts with a high CPU count as hypervisors. Likewise, you can provision hosts with large hard disks as storage servers.</simpara>
<formalpara>
<title>NIC Considerations</title>
<para>Auto provisioning does not currently allow configuring NICs; all systems are being provisioned with the NIC configuration that was detected during discovery. However, you can set the NIC in {provision-script} (scriplet), via script, or using configuration management later on.</para>
</formalpara>
<formalpara>
<title>Procedure</title>
<para>To create a rule, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Configure</emphasis> &gt; <emphasis role="strong">Discovery rules</emphasis>. Select <emphasis role="strong">Create Rule</emphasis> and enter the following details:</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the rule.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Search</emphasis> field, enter the rules to determine whether to provision a host. This field provides suggestions for values you enter and allows operators for multiple rules. For example: <literal>cpu_count  &gt; 8</literal>.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select the host group to use as a template for this host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Hostname</emphasis> field, enter the pattern to determine host names for multiple hosts. This uses the same ERB syntax that provisioning templates use. The host name can use the <literal>@host</literal> attribute for host-specific values and the <literal>rand</literal> function for a random number.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>myhost-&lt;%= rand(99999) %&gt;</literal></simpara>
</listitem>
<listitem>
<simpara><literal>abc-&lt;%= @host.facts['bios_vendor'] %&gt;-&lt;%= rand(99999) %&gt;</literal></simpara>
</listitem>
<listitem>
<simpara><literal>xyz-&lt;%= @host.hostgroup.name %&gt;</literal></simpara>
</listitem>
<listitem>
<simpara><literal>srv-&lt;%= @host.discovery_rule.name %&gt;</literal></simpara>
</listitem>
<listitem>
<simpara><literal>server-&lt;%= @host.ip.gsub('.','-') +  '-' + @host.hostgroup.subnet.name %&gt;</literal></simpara>
<simpara>When creating host name patterns, ensure the resulting host names are unique, do not start with numbers, and do not contain underscores or dots. A good approach is to use unique information provided by Facter, such as the MAC address, BIOS, or serial ID.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Hosts limit</emphasis> field, enter the maximum hosts you can provision with the rule. Enter <literal>0</literal> for unlimited.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Priority</emphasis> field, enter a number to set the precedence the rule has over other rules. Rules with lower values have a higher priority.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Enabled</emphasis> list, select whether you want to enable the rule.</simpara>
</listitem>
<listitem>
<simpara>To set a different provisioning context for the rule, click the <emphasis role="strong">Organizations</emphasis> and <emphasis role="strong">Locations</emphasis> tabs and select the contexts you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your rule.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Discovered Host</emphasis> and select one of the following two options:</simpara>
<itemizedlist>
<listitem>
<simpara>From the <emphasis role="strong">Discovered hosts</emphasis> list on the right, select <emphasis role="strong">Auto-Provision</emphasis> to automatically provisions a single host.</simpara>
</listitem>
<listitem>
<simpara>On the upper right of the window, click <emphasis role="strong">Auto-Provision All</emphasis> to automatically provisions all hosts.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the rule with the <literal>hammer discovery-rule create</literal> command:</para>
</formalpara>
<screen># hammer discovery-rule create --name "Hypervisor" \
--search "cpu_count  &gt; 8" --hostgroup "<emphasis>My_Host_Group</emphasis>" \
--hostname "hypervisor-&lt;%= rand(99999) %&gt;" \
--hosts-limit 5 --priority 5 --enabled true</screen>
<simpara>Automatically provision a host with the <literal>hammer discovery auto-provision</literal> command:</simpara>
<screen># hammer discovery auto-provision --name "macabcdef123456"</screen>
</section>
<section xml:id="implementing-pxe-less-discovery">
<title>Implementing PXE-less Discovery</title>
<simpara>{Project} provides a PXE-less Discovery service that operates without the need for PXE-based services (DHCP and TFTP). You accomplish this using {ProjectServer}'s Discovery image. Once a discovered node is scheduled for installation, it uses <literal>kexec</literal> command to reload Linux kernel with OS installer without rebooting the node.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/PXEless-mode.png"/>
</imageobject>
<textobject><phrase>PXEless mode</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>If you have not yet installed the Discovery service or image, see <xref linkend="building-a-discovery-image"/>.</simpara>
<simpara>The ISO for the Discovery service resides at <literal>/usr/share/foreman-discovery-image/</literal> and is installed using the <literal>foreman-discovery-image</literal> package.</simpara>
<formalpara>
<title>Attended Use</title>
<para>This ISO acts as bootable media. Copy this media to either a CD, DVD, or a USB stick. For example, to copy to a USB stick at <literal>/dev/sdb</literal>:</para>
</formalpara>
<screen># dd bs=4M \
if=/usr/share/foreman-discovery-image/foreman-discovery-image-3.4.4-5.iso \
of=/dev/sdb</screen>
<orderedlist numeration="arabic">
<listitem>
<simpara>Insert the Discovery boot media into a bare metal host, start the host, and boot from the media. The Discovery Image displays an option for either <emphasis role="strong">Manual network setup</emphasis> or <emphasis role="strong">Discovery with DHCP</emphasis>:</simpara>
<itemizedlist>
<listitem>
<simpara>If selecting <emphasis role="strong">Manual network setup</emphasis>, the Discovery image requests a set of network options. This includes the primary network interface that connects to {ProjectServer}. This Discovery image also asks for network interface configuration options, such as an <emphasis role="strong">IPv4 Address</emphasis>, <emphasis role="strong">IPv4 Gateway</emphasis>, and an <emphasis role="strong">IPv4 DNS</emphasis> server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>After entering these details, select <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If you select <emphasis role="strong">Discovery with DHCP</emphasis>, the Discovery image requests only the primary network interface that connects to {ProjectServer}. It attempts to automatically configure the network interface using a DHCP server, such as one that a {SmartProxyServer} provides.</simpara>
</listitem>
<listitem>
<simpara>After the primary interface configuration, the Discovery image requests the <emphasis role="strong">Server URL</emphasis>, which is the URL of {ProjectServer} or {SmartProxyServer} offering the Discovery service. For example, to use the integrated {SmartProxy} on {ProjectServer}, use the following URL:</simpara>
<screen>https://{foreman-example-com}:{smartproxy_port}</screen>
</listitem>
<listitem>
<simpara>Set the <emphasis role="strong">Connection type</emphasis> to <literal>Proxy</literal>, then select <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: The Discovery image also provides a set of fields to input <emphasis role="strong">Custom facts</emphasis> for the Facter tool to relay back to {ProjectServer}. These are entered in a <emphasis role="strong">name</emphasis>-<emphasis role="strong">value</emphasis> format. Provide any custom facts you require and select <emphasis role="strong">Confirm</emphasis> to continue.</simpara>
</listitem>
</orderedlist>
<simpara>The {Project} reports a successful communication with {ProjectServer}'s Discovery service. Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Discovered Hosts</emphasis> and view the newly discovered host.</simpara>
<simpara>For more information about provisioning discovered hosts, see <xref linkend="creating-hosts-from-discovered-hosts"/>.</simpara>
<formalpara>
<title>Unattended Use and Customization</title>
<para>It is possible to create a customized Discovery ISO, which automates the process of configuring the image after booting. The Discovery image uses a Linux kernel for the operating system, which means you pass kernel parameters to the configure the image&#8217;s operating system. These kernel parameters include:</para>
</formalpara>
<variablelist>
<varlistentry>
<term>proxy.url</term>
<listitem>
<simpara>The URL of the {SmartProxyServer} providing the Discovery service.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>proxy.type</term>
<listitem>
<simpara>The proxy type. This is usually set to <literal>proxy</literal> to connect to {SmartProxyServer}. This parameter also supports a legacy <literal>foreman</literal> option, where communication goes directly to {ProjectServer} instead of a {SmartProxyServer}.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>fdi.pxmac</term>
<listitem>
<simpara>The MAC address of the primary interface in the format of <literal>AA:BB:CC:DD:EE:FF</literal>. This is the interface you aim to use for communicating with {SmartProxyServer}. In automated mode, the first NIC (using network identifiers in alphabetical order) with a link is used. In semi-automated mode, a screen appears and requests you to select the correct interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>fdi.pxip, fdi.pxgw, fdi.pxdns</term>
<listitem>
<simpara>Manually configures IP address (<literal>fdi.pxip</literal>), the gateway (<literal>fdi.pxgw</literal>), and the DNS (<literal>fdi.pxdns</literal>) for the primary network interface. If your omit these parameters, the image uses DHCP to configure the network interface.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>fdi.pxfactname1, fdi.pxfactname2 &#8230;&#8203; fdi.pxfactnameN</term>
<listitem>
<simpara>Allows you to specify custom fact names.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>fdi.pxfactvalue1, fdi.pxfactvalue2 &#8230;&#8203; fdi.pxfactvalueN</term>
<listitem>
<simpara>The values for each custom fact. Each value corresponds to a fact name. For example, <literal>fdi.pxfactvalue1</literal> sets the value for the fact named with <literal>fdi.pxfactname1</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>fdi.pxauto</term>
<listitem>
<simpara>To set automatic or semi-automatic mode. If set to 0, the image uses semi-automatic mode, which allows you to confirm your choices through a set of dialog options. If set to 1, the image uses automatic mode and proceeds without any confirmation.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>{ProjectServer} also provides a tool (<literal>discovery-remaster</literal>) in the <literal>foreman-discovery-image</literal> package. This tool remasters the image to include these kernel parameters. To remaster the image, run the <literal>discovery-remaster</literal> tool. For example:</simpara>
<screen># discovery-remaster ~/iso/foreman-discovery-image-3.4.4-5.iso \
"fdi.pxip=192.168.140.20/24 fdi.pxgw=192.168.140.1 \
fdi.pxdns=192.168.140.2 proxy.url=https://<emphasis>{foreman-example-com}</emphasis>:{smartproxy_port} \
proxy.type=proxy fdi.pxfactname1=customhostname \
fdi.pxfactvalue1=myhost fdi.pxmac=52:54:00:be:8e:8c fdi.pxauto=1"</screen>
<simpara>The tool creates a new ISO file in the same directory as the original discovery image. In this scenario, it saves in the <literal>/usr/share/foreman-discovery-image/</literal> directory.</simpara>
<simpara>Copy this media to either a CD, DVD, or a USB stick. For example, to copy to a USB stick at <literal>/dev/sdb</literal>:</simpara>
<screen># dd bs=4M \
if=/usr/share/foreman-discovery-image/foreman-discovery-image-3.4.4-5.iso \
of=/dev/sdb</screen>
<simpara>Insert the Discovery boot media into a bare metal host, start the host, and boot from the media.</simpara>
<simpara>For more information about provisioning discovered hosts, see <xref linkend="creating-hosts-from-discovered-hosts"/>.</simpara>
<formalpara>
<title>Final Notes</title>
<para>The host must resolve to the following provisioning templates:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">kexec Template:</emphasis> <literal>Discovery Red Hat kexec</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">provision Template:</emphasis> <literal>{Project} Kickstart Default</literal></simpara>
</listitem>
</itemizedlist>
<simpara>For more information about associating provisioning templates, see <xref linkend="Configuring_Provisioning_Resources-Creating_Provisioning_Templates"/>.</simpara>
</section>
<section xml:id="building-a-discovery-image">
<title>Building a Discovery Image</title>
<simpara>The Discovery image is a minimal operating system based on {RHEL} that is PXE-booted on hosts to acquire initial hardware information and to check in to the Satellite Server. Discovered hosts keep running the Satellite Discovery image until they are rebooted into Anaconda, which then initiates the provisioning process. The <literal>foreman-discovery-image</literal> package contains this image. You must install the package on the {SmartProxy} that provides TFTP services.</simpara>
<simpara>Use this procedure to build a {Project} discovery image or rebuild an image if you change configuration files.</simpara>
<simpara>Do not use this procedure on your production {Project} or {SmartProxy}.</simpara>
<formalpara>
<title>Prerequisites</title>
<para>Install the <literal>livecd-tools</literal> package:</para>
</formalpara>
<screen># yum install livecd-tools</screen>
<simpara>Because Anaconda installer cannot publish through HTTPS, you must enable publishing through HTTP for Kickstart repositories:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Content</emphasis> &gt; <emphasis role="strong">Products</emphasis> and in the <emphasis role="strong">Products</emphasis> window, click the <emphasis role="strong">Repositories</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Select a Kickstart repository and for the <emphasis role="strong">Publish via HTTP</emphasis>, option, click the <emphasis role="strong">Edit</emphasis> icon, select the check box, and click <emphasis role="strong">Save</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Repeat the previous steps for the {Project} repository.</simpara>
</listitem>
</orderedlist>
<simpara>Note that publishing via HTTP does not apply to any Red&#160;Hat repositories.</simpara>
<formalpara>
<title>Procedure</title>
<para>To build the {Project} discovery image, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open the <literal>/usr/share/foreman-discovery-image/foreman-discovery-image.ks</literal> file for editing:</simpara>
<screen># vim /usr/share/foreman-discovery-image/foreman-discovery-image.ks</screen>
</listitem>
<listitem>
<simpara>Replace <literal>repo --name=rhel --baseurl=http://download/00000</literal> with with your own repos for RHEL and {Project} with your repository URLs. To find the URLs, navigate to <emphasis role="strong">Content</emphasis> &gt; <emphasis role="strong">Products</emphasis> and click the <emphasis role="strong">Repositories</emphasis> tab and copy the URL for both repositories into the file:</simpara>
<screen>repo --name=rhel --baseurl=http://download/released/RHEL-7/7.4/Server/x86_64/os/
repo --name=sat --baseurl=http://download2/nightly/Satellite/6.6/candidate/latest-Satellite-6.6-RHEL-7/compose/Satellite/x86_64/os/</screen>
</listitem>
<listitem>
<simpara>Run the <literal>livecd-creator</literal> tool:</simpara>
<screen># livecd-creator --title="Discovery-Image" \
--compression-type=xz \
--cache=var/cache/build-fdi \
--config /usr/share/foreman-discovery-image/foreman-discovery-image.ks \
--fslabel fdi \
--tmpdir /var/tmp</screen>
<simpara>If you change <literal>fdi</literal> in the <literal>--fslabel</literal> option, you must also change the root label on the kernel command line when loading the image. <literal>fdi</literal> or the alternative name is appended to the <literal>.iso</literal> file that is created as part of this procedure. The PXE Discovery tool uses this name when converting from <literal>.iso</literal> to PXE.</simpara>
<simpara>Use <literal>/var/tmp</literal> because this process requires close to 3GB of space and <literal>/tmp</literal> might have problems if the system is low on swap space.</simpara>
</listitem>
<listitem>
<simpara>Verify that your <literal>fdi.iso</literal> file is created:</simpara>
<screen># ls *.iso -h</screen>
</listitem>
</orderedlist>
<simpara>When you create the <literal>.iso</literal> file, you can boot the <literal>.iso</literal> file over a network or locally. Complete one of the following procedures.</simpara>
<orderedlist numeration="arabic">
<title>To boot the iso file over a network:</title>
<listitem>
<simpara>To extract the initial ramdisk and kernel files from the <literal>.iso</literal> file over a network, enter the following command:</simpara>
<screen># discovery-iso-to-pxe fdi.iso</screen>
</listitem>
<listitem>
<simpara>Create a directory to store your boot files:</simpara>
<screen># mkdir /var/lib/tftpboot/boot/<emphasis>myimage</emphasis></screen>
</listitem>
<listitem>
<simpara>Copy the <literal>initrd0.img</literal> and <literal>vmlinuz0</literal> files to your new directory.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>KERNEL</literal> and <literal>APPEND</literal> entries in the <literal>/var/lib/tftpboot/pxelinux.cfg</literal> file to add the information about your own initial ramdisk and kernel files.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>To boot the iso file locally:</title>
<para>If you want to create a hybrid <literal>.iso</literal> file for booting locally, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>To convert the <literal>.iso</literal> file to an <literal>.iso</literal> hybrid file for PXE provisioning, enter the following command:</simpara>
<screen># isohybrid --partok fdi.iso</screen>
<simpara>If you have <literal>grub2</literal> packages installed, you can also use the following command to install a <literal>grub2</literal> bootloader:</simpara>
<screen># isohybrid --partok --uefi fdi.iso</screen>
</listitem>
<listitem>
<simpara>To add <literal>md5</literal> checksum to the <literal>.iso</literal> file so it can pass installation media validation tests in {Project}, enter the following command:</simpara>
<screen># implantisomd5 fdi.iso</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Extending_the_Discovery_Image">
<title>Extending the Discovery Image</title>
<simpara>You can extend the {Project} Discovery image with custom facts, software, or device drivers. You can also provide a compressed archive file containing extra code for the image to use.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create the following directory structure:</simpara>
<screen>.
├── autostart.d
│   └── 01_zip.sh
├── bin
│   └── ntpdate
├── facts
│   └── test.rb
└── lib
    ├── libcrypto.so.1.0.0
    └── ruby
        └── test.rb</screen>
<itemizedlist>
<listitem>
<simpara>The <literal>autostart.d</literal> directory contains scripts that are executed in POSIX order by the image when it starts, but before the host is registered to {Project}.</simpara>
</listitem>
<listitem>
<simpara>The <literal>bin</literal> directory is added to the <literal>$PATH</literal> variable; you can place binary files in this directory and use them in the <literal>autostart</literal> scripts.</simpara>
</listitem>
<listitem>
<simpara>The <literal>facts</literal> directory is added to the <literal>FACTERLIB</literal> variable so that custom facts can be configured and sent to {Project}.</simpara>
</listitem>
<listitem>
<simpara>The <literal>lib</literal> directory is added to the <literal>LD_LIBRARY_PATH</literal> variable and <literal>lib/ruby</literal> is added to the <literal>RUBYLIB</literal> variable, so that binary files in <literal>/bin</literal> can be executed correctly.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>After creating the directory structure, create a <literal>.zip</literal> file archive with the following command:</simpara>
<screen>zip -r my_extension.zip .</screen>
</listitem>
<listitem>
<simpara>To inform the Discovery image of the extensions it must use, place your zip files on your TFTP server with the Discovery image, and then update the <literal>APPEND</literal> line of the PXELinux template with the <literal>fdi.zips</literal> option where the paths are relative to the TFTP root. For example, if you have two archives at <literal>$TFTP/zip1.zip</literal> and <literal>$TFTP/boot/zip2.zip</literal>, use the following syntax:</simpara>
<screen>fdi.zips=zip1.zip,boot/zip2.zip</screen>
</listitem>
</orderedlist>
<simpara>You can append new directives and options to the existing environment variables (<literal>PATH</literal>, <literal>LD_LIBRARY_PATH</literal>, <literal>RUBYLIB</literal> and <literal>FACTERLIB</literal>). If you want to specify the path explicitly in your scripts, the <literal>.zip</literal> file contents are extracted to the <literal>/opt/extension</literal> directory on the image.</simpara>
<simpara>You can create multiple <literal>.zip</literal> files but be aware that they are extracted to the same location on the Discovery image. Files extracted from in later <literal>.zip</literal> files overwrite earlier versions if they have the same file name.</simpara>
</section>
<section xml:id="troubleshooting-discovery-problems">
<title>Troubleshooting Discovery</title>
<simpara>If a machine is not listed in the {Project} web UI in <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Discovered Hosts</emphasis>, inspect the following configuration areas to help isolate the error:</simpara>
<itemizedlist>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis> and redeploy the default PXELinux template using the <emphasis role="strong">Build PXE Default</emphasis> button.</simpara>
</listitem>
<listitem>
<simpara>Verify the <literal>pxelinux.cfg/default</literal> configuration file on the TFTP {SmartProxy}.</simpara>
</listitem>
<listitem>
<simpara>Ensure adequate network connectivity between hosts, {SmartProxyServer}, and {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>Check the PXELinux template in use and determine the PXE discovery snippet it includes. Snippets are named as follows: <literal>pxelinux_discovery</literal>, <literal>pxegrub_discovery</literal>, or <literal>pxegrub2_discovery</literal>. Verify the <literal>proxy.url</literal> and <literal>proxy.type</literal> options in the PXE discovery snippet.</simpara>
</listitem>
<listitem>
<simpara>Ensure that DNS is working correctly for the discovered nodes, or use an IP address in the <literal>proxy.url</literal> option in the PXE discovery snippet included in the PXELinux template you are using.</simpara>
</listitem>
<listitem>
<simpara>Ensure that the DHCP server is delivering IP addresses to the booted image correctly.</simpara>
</listitem>
<listitem>
<simpara>Ensure the discovered host or virtual machine has at least 1200 MB of memory. Less memory can lead to various random kernel panic errors because the image is extracted in-memory.</simpara>
</listitem>
</itemizedlist>
<simpara>For gathering important system facts, use the <literal>discovery-debug</literal> command. It prints out system logs, network configuration, list of facts, and other information on the standard output. The typical use case is to redirect this output and copy it with the <literal>scp</literal> command for further investigation.</simpara>
<simpara>The first virtual console on the discovered host is reserved for <emphasis role="strong">systemd</emphasis> logs. Particularly useful system logs are tagged as follows:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>discover-host</literal> — initial facts upload</simpara>
</listitem>
<listitem>
<simpara><literal>foreman-discovery</literal> — facts refresh, reboot remote commands</simpara>
</listitem>
<listitem>
<simpara><literal>nm-prepare</literal> — boot script which pre-configures NetworkManager</simpara>
</listitem>
<listitem>
<simpara><literal>NetworkManager</literal> — networking information</simpara>
</listitem>
</itemizedlist>
<simpara>Use TTY2 or higher to log in to a discovered host. The root account and SSH access are disabled by default, but you can enable SSH and set the root password using the following kernel command-line options in the Default PXELinux template on the APPEND line:</simpara>
<screen>fdi.ssh=1 fdi.rootpw=<emphasis>My_Password</emphasis></screen>
</section>
</chapter>
<chapter xml:id="Provisioning_Virtual_Machines_in_KVM">
<title>Provisioning Virtual Machines on a KVM Server (libvirt)</title>
<simpara>Kernel-based Virtual Machines (KVMs) use an open source virtualization daemon and API called <literal>libvirt</literal> running on Red Hat Enterprise Linux. {ProjectNameX} can connect to the <literal>libvirt</literal> API on a KVM server, provision hosts on the hypervisor, and control certain virtualization functions.</simpara>
<section xml:id="Provisioning_Virtual_Machines_in_KVM-Prerequisites_for_KVM_Provisioning">
<title>Prerequisites for KVM Provisioning</title>
<simpara>The requirements for KVM provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing a network on the KVM server. Ensure no other DHCP services run on this network to avoid conflicts with the {SmartProxyServer}. For more information about network service configuration for {SmartProxyServer}s, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
<listitem>
<simpara>A {RHEL} server running KVM virtualization tools (libvirt daemon). For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Getting_Started_Guide/index.html">Red Hat Enterprise Linux 7 Virtualization Getting Started Guide</link>.</simpara>
</listitem>
<listitem>
<simpara>An existing virtual machine image if you want to use image-based provisioning. Ensure that this image exists in a storage pool on the KVM host. The <literal>default</literal> storage pool is usually located in <literal>/var/lib/libvirt/images</literal>. Only directory pool storage types can be managed through {Project}.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>User Roles and Permissions to Provision Libvirt Compute Resources</title>
<para>To provision a Libvirt host in {Project}, you must have a user account with the following roles:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><literal>Edit hosts</literal></simpara>
</listitem>
<listitem>
<simpara><literal>View hosts</literal></simpara>
</listitem>
</itemizedlist>
<simpara>For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-users_and_roles#sect-{Project_Link}-Administering_{Project_Link}-Creating_and_Managing_Users-Assigning_Roles_to_a_User">Assigning Roles to a User</link> in the <emphasis>Administering {ProjectName}</emphasis> guide.</simpara>
<simpara>You must also create a custom role with the following permissions:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>view_compute_resources</literal></simpara>
</listitem>
<listitem>
<simpara><literal>destroy_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>power_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>create_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_locations</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_subnets</literal></simpara>
</listitem>
</itemizedlist>
<simpara>For more information about creating roles, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-Administering_{Project_Link}-Users_and_Roles#sect-red_hat_satellite-Administering_{Project_Link}-Creating_and_Managing_Roles-Creating_a_Role">Creating a Role</link>. For more information about adding permissions to a role, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-Administering_{Project_Link}-Users_and_Roles#sect-red_hat_satellite-Administering_{Project_Link}-Creating_and_Managing_Roles-Adding_Permissions_to_a_Role">Adding Permissions to a Role</link> in the <emphasis>Administering {ProjectName}</emphasis> guide.</simpara>
</section>
<section xml:id="Povisioning_Virtual_Machines_in_KVM-Configuring_the_Satellite_Server_for_KVM_Connections">
<title>Configuring {ProjectServer} for KVM Connections</title>
<simpara>Before adding the KVM connection, {ProjectServer} requires some configuration to ensure a secure connection. This means creating an SSH key pair for the user that performs the connection, which is the <literal>foreman</literal> user.</simpara>
<formalpara>
<title>Non-root users</title>
<para>These examples use the root user for KVM. However, if you want to use a non-root user on the KVM server, add the user to the <literal>libvirt</literal> group on the KVM server:</para>
</formalpara>
<screen>useradd -a -G libvirt <emphasis>non_root_user</emphasis></screen>
<formalpara>
<title>Procedure</title>
<para>To configure {ProjectServer} for KVM connections, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On {ProjectServer}, switch to the <literal>foreman</literal> user:</simpara>
<screen># su foreman -s /bin/bash</screen>
</listitem>
<listitem>
<simpara>Generate the key pair:</simpara>
<screen>$ ssh-keygen</screen>
</listitem>
<listitem>
<simpara>Copy the public key to the KVM server:</simpara>
<screen>$ ssh-copy-id <emphasis>root@kvm.example.com</emphasis></screen>
</listitem>
<listitem>
<simpara>Exit the bash shell for the <literal>foreman</literal> user:</simpara>
<screen>$ exit</screen>
</listitem>
<listitem>
<simpara>Install the <literal>libvirt-client</literal> package:</simpara>
<screen># yum install libvirt-client</screen>
</listitem>
<listitem>
<simpara>Use the following command to test the connection to the KVM server:</simpara>
<screen># su foreman -s /bin/bash -c 'virsh -c qemu+ssh://root@kvm.example.com/system list'</screen>
<simpara>When you add the KVM connection in {ProjectServer}, use the <literal>qemu+ssh</literal> protocol and the address to the server. For example:</simpara>
<screen>qemu+ssh://root@<emphasis>kvm.example.com</emphasis>/system</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_KVM-Adding_a_KVM_Connection_to_the_Satellite_Server">
<title>Adding a KVM Connection to {ProjectServer}</title>
<simpara>Use this procedure to add a KVM connection to {ProjectServer}'s compute resources.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a KVM connection to {Project}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and in the Compute Resources window, click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the new compute resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">Libvirt</emphasis></simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the compute resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">URL</emphasis> field, enter the connection URL to the KVM server. For example:</simpara>
<screen> qemu+ssh://<emphasis>root@kvm.example.com</emphasis>/system</screen>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Display type</emphasis> list, select either <emphasis role="strong">VNC</emphasis> or <emphasis role="strong">Spice</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: To secure console access for new hosts with a randomly generated password, select the <emphasis role="strong">Set a randomly generated password on the display connection</emphasis> check box. You can retrieve the password for the VNC console to access the guest virtual machine console from the output of the following command executed on the KVM server:</simpara>
<screen># virsh edit <emphasis>your_VM_name</emphasis>
&lt;graphics type='vnc' port='-1' autoport='yes' listen='0.0.0.0' passwd='<emphasis>your_randomly_generated_password</emphasis>'&gt;</screen>
<simpara>The password is randomly generated every time the console for the virtual machine is opened, for example, with virt-manager.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Test Connection</emphasis> to ensure that {ProjectServer} connects to the KVM server without fault.</simpara>
</listitem>
<listitem>
<simpara>Verify that the <emphasis role="strong">Locations</emphasis> and <emphasis role="strong">Organizations</emphasis> tabs are automatically set to your current context. If you want, add additional contexts to these tabs.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the KVM connection.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>To create a compute resource, enter the following command:</para>
</formalpara>
<screen># hammer compute-resource create --name "<emphasis>My_KVM_Server</emphasis>" \
--provider "Libvirt" --description "KVM server at <emphasis>kvm.example.com</emphasis>" \
--url "qemu+ssh://root@<emphasis>kvm.example.com/system</emphasis>" --locations "New York" \
--organizations "<emphasis>My_Organization</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_KVM-Adding_KVM_Images_to_Satellite_Server">
<title>Adding KVM Images to {ProjectServer}</title>
<simpara>If you want to use image-based provisioning to create hosts, you must add information about the image to your {ProjectServer}. This includes access details and the image location.</simpara>
<formalpara>
<title>Supported Storage Types</title>
<para>Note that you can manage only directory pool storage types through {ProjectX}.</para>
</formalpara>
<formalpara>
<title>Procedure</title>
<para>To add KVM images on {ProjectServer}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and in the Compute Resources window, click the name of your KVM connection.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Image</emphasis> tab, and then click <emphasis role="strong">Create Image</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operatingsystem</emphasis> list, select the image&#8217;s base operating system.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Username</emphasis> field, enter the SSH user name for image access. This is normally the <literal>root</literal> user.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the SSH password for image access.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Image path</emphasis> field, enter the full path that points to the image on the KVM server. For example:</simpara>
<screen> /var/lib/libvirt/images/TestImage.qcow2</screen>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the image with the <literal>hammer compute-resource image create</literal> command. Use the <literal>--uuid</literal> field to store the full path of the image location on the KVM server.</para>
</formalpara>
<screen># hammer compute-resource image create --name "Test KVM Image" \
--operatingsystem "RedHat <emphasis>version</emphasis>" --architecture "x86_64" --username root \
--user-data false --uuid "/var/lib/libvirt/images/TestImage.qcow2" \
--compute-resource "<emphasis>My_KVM_Server</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_KVM-Adding_KVM_Details_to_a_Compute_Profile">
<title>Adding KVM Details to a Compute Profile</title>
<simpara>We can predefine certain hardware settings for KVM-based virtual machines by adding these hardware settings to a compute profile.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add KVM details to a compute profile, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the Compute Profiles window, click the name of an existing compute resource or click <emphasis role="strong">Create Compute Profile</emphasis> and select a compute resource to use to create a compute profile.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">CPUs</emphasis> field, enter the number of CPUs to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Memory</emphasis> field, enter the amount of memory to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image to use if performing image-based provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Network Interfaces</emphasis> list, select the network parameters for the host&#8217;s network interface. You can create multiple network interfaces. However, at least one interface must point to a {SmartProxy}-managed network.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Storage</emphasis> area, enter the storage parameters for the host. You can create multiple volumes for the host.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the settings to the compute profile.</simpara>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>For CLI Users</title>
<listitem>
<simpara>To create a compute profile, enter the following command:</simpara>
<screen># hammer compute-profile create --name "Libvirt CP"</screen>
</listitem>
<listitem>
<simpara>To add the values for the compute profile, enter the following command:</simpara>
<screen># hammer compute-profile values create --compute-profile "Libvirt CP" \
--compute-resource "<emphasis>My_KVM_Server</emphasis>" \
--interface "compute_type=network,compute_model=virtio,compute_network=<emphasis>examplenetwork</emphasis>" \
--volume "pool_name=default,capacity=20G,format_type=qcow2" \
--compute-attributes "cpus=1,memory=1073741824"</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_KVM-Creating_Hosts_on_a_KVM_Server">
<title>Creating Hosts on a KVM Server</title>
<simpara>In {Project}, you can use KVM provisioning to create hosts over a network connection and from an existing image.</simpara>
<simpara>If you want to create a host over a network connection, the new host must have access either to {ProjectServer}'s integrated {SmartProxy} or an external {SmartProxyServer} on a KVM virtual network, so that the host has access to PXE provisioning services. This new host entry triggers the KVM server to create and start a virtual machine. If the virtual machine detects the defined {SmartProxyServer} through the virtual network, the virtual machine boots to PXE and begins to install the chosen operating system.</simpara>
<simpara>If you create a host with an existing image, the new host entry triggers the KVM server to create the virtual machine, using the pre-existing image as a basis for the new volume.</simpara>
<formalpara>
<title>DHCP Conflicts</title>
<para>For network-based provisioning, if you use a virtual network on the KVM server for provisioning, select a network that does not provide DHCP assignments. This causes DHCP conflicts with {ProjectServer} when booting new hosts.</para>
</formalpara>
<formalpara>
<title>Procedure</title>
<para>To create a KVM host, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter the name that you want to become the provisioned system&#8217;s host name.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs to ensure that the provisioning context is automatically set to the current context.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select the host group that you want to use to populate the form.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> list, select the KVM connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute Profile</emphasis> list, select a profile to use to automatically populate virtual machine-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab and click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are automatically populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">MAC address</emphasis> field is blank. The KVM server assigns one to the host.</simpara>
</listitem>
<listitem>
<simpara>Verify that the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options are automatically selected for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>In the interface window, review the KVM-specific fields that are populated with settings from your compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and confirm that all fields automatically contain values.</simpara>
</listitem>
<listitem>
<simpara>For network-based provisioning, ensure that the <emphasis role="strong">Provisioning Method</emphasis> is set to <literal>Network Based</literal>. For image-based provisioning, ensure that the <emphasis role="strong">Provisioning Method</emphasis> is set to <literal>Image Based</literal></simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning templates</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Virtual Machine</emphasis> tab and confirm that these settings are populated with details from the host group and compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host entry.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the host with the <literal>hammer host create</literal> command and include <literal>--provision-method build</literal> to use network-based provisioning.</para>
</formalpara>
<screen># hammer host create --name "kvm-test1" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My_KVM_Server</emphasis>" --provision-method build \
--build true --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_type=network,compute_network=<emphasis>examplenetwork</emphasis>" \
--compute-attributes="cpus=1,memory=1073741824" \
--volume="pool_name=default,capacity=20G,format_type=qcow2" \
--root-password "<emphasis>password</emphasis>"</screen>
<simpara>Create the host with the <literal>hammer host create</literal> command and include <literal>--provision-method image</literal> to use image-based provisioning.</simpara>
<screen># hammer host create --name "kvm-test2" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My_KVM_Server</emphasis>" --provision-method image \
--image "Test KVM Image" --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_type=network,compute_network=examplenetwork" \
--compute-attributes="cpus=1,memory=1073741824" \
--volume="pool_name=default,capacity=20G,format_type=qcow2"</screen>
<simpara>For more information about additional host creation parameters for this compute resource, see <xref linkend="CLI_Params"/>.</simpara>
</section>
</chapter>
<chapter xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization">
<title>Provisioning Virtual Machines in {OVirt}</title>
<simpara>With {ProjectNameX}, you can manage virtualization functions through {OVirt}'s REST API version 3. REST API version 4 is not yet supported by {ProjectX}. This includes creating virtual machines and controlling their power states.</simpara>
<simpara>Use the following procedures to add a connection to a {OVirt} environment and provision a virtual machine.</simpara>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Enterprise_Virtualization-Prerequisites_for_Red_Hat_Virtualization_Provisioning">
<title>Prerequisites for {OVirt} Provisioning</title>
<simpara>The requirements for {OVirt} provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing a logical network on the {OVirt} environment. Ensure no other DHCP services run on this network to avoid conflicts with the {SmartProxyServer}. For more information, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
<listitem>
<simpara>An existing template, other than the <literal>blank</literal> template, if you want to use image-based provisioning. For more information about creating templates for virtual machines, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_virtualization/4.0/html/virtual_machine_management_guide/chap-templates">Templates</link> in the <emphasis>Virtual Machine Management Guide</emphasis>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization-Creating_a_Red_Hat_Virtualization_User">
<title>Creating a {OVirt} User</title>
<simpara>The {OVirt} server requires an administration-like user for {ProjectServer} communication. For security reasons, {Team} advises against using the <literal>admin@internal</literal> user for such communication. Instead, create a new {OVirt} user with the following permissions:</simpara>
<itemizedlist>
<listitem>
<simpara>System</simpara>
<itemizedlist>
<listitem>
<simpara>Configure System</simpara>
<itemizedlist>
<listitem>
<simpara>Login Permissions</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Network</simpara>
<itemizedlist>
<listitem>
<simpara>Configure vNIC Profile</simpara>
<itemizedlist>
<listitem>
<simpara>Create</simpara>
</listitem>
<listitem>
<simpara>Edit Properties</simpara>
</listitem>
<listitem>
<simpara>Delete</simpara>
</listitem>
<listitem>
<simpara>Assign vNIC Profile to VM</simpara>
</listitem>
<listitem>
<simpara>Assign vNIC Profile to Template</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Template</simpara>
<itemizedlist>
<listitem>
<simpara>Provisioning Operations</simpara>
<itemizedlist>
<listitem>
<simpara>Import/Export</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>VM</simpara>
<itemizedlist>
<listitem>
<simpara>Provisioning Operations</simpara>
<itemizedlist>
<listitem>
<simpara>Create</simpara>
</listitem>
<listitem>
<simpara>Delete</simpara>
</listitem>
<listitem>
<simpara>Import/Export</simpara>
</listitem>
<listitem>
<simpara>Edit Storage</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Disk</simpara>
<itemizedlist>
<listitem>
<simpara>Provisioning Operations</simpara>
<itemizedlist>
<listitem>
<simpara>Create</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Disk Profile</simpara>
<itemizedlist>
<listitem>
<simpara>Attach Disk Profile</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization-Adding_a_Red_Hat_Virtualization_Connection_to_the_Satellite_Server">
<title>Adding a {OVirt} Connection to {ProjectServer}</title>
<simpara>Use this procedure to add a {OVirt} connection to {ProjectServer}'s compute resources.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a {OVirt} connection to {Project}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and in the Compute Resources window, click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the new compute resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">{OVirtShort}</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the compute resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">URL</emphasis> field, enter the connection URL for the {OVirt} Manager&#8217;s API.</simpara>
<simpara>For example, in {OVirtLegacyShort} 3.6 and earlier, the URL is
of the following form: <literal><link xlink:href="https://{ovirt-example-com}/ovirt-engine/api">https://{ovirt-example-com}/ovirt-engine/api</link></literal>. In {OVirtShort} 4.0 and
later, the URL is of the following form: <literal><link xlink:href="https://{ovirt-example-com}/ovirt-engine/api/v3">https://{ovirt-example-com}/ovirt-engine/api/v3</link></literal>.</simpara>
</listitem>
<listitem>
<simpara>Optionally, select the <emphasis role="strong">Use APIv4 (experimental)</emphasis> check box to evaluate the new engine API.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> field, enter the name of a user with permissions to access {OVirt} Manager&#8217;s resources.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the password of the user.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Load Datacenters</emphasis> to populate the <emphasis role="strong">Datacenter</emphasis> list with data centers from your {OVirt} environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Datacenter</emphasis> list, select a data center.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Quota ID</emphasis> list, select a quota to limit resources available to {Project}.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">X509 Certification Authorities</emphasis> field, enter the certificate authority for SSL/TLS access. Alternatively, if you leave the field blank, a self-signed certificate is generated on the first API request by the server.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab and select the location you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab and select the organization you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute resource.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>To create a {OVirt} connection, enter the <literal>hammer compute-resource create</literal> command with <literal>Ovirt</literal> for <literal>--provider</literal> and the name of the data center you want to use for <literal>--datacenter</literal>.</para>
</formalpara>
<screen># hammer compute-resource create \
--name "<emphasis>My</emphasis>{OVirtShort}_" --provider "Ovirt" \
--description "{OVirtShort} server at <emphasis>{ovirt-example-com}</emphasis>" \
--url "<emphasis>https://{ovirt-example-com}/ovirt-engine/api</emphasis>" \
--use-v4 "false" --user "<emphasis>Satellite_User</emphasis>" \
--password "<emphasis>My_Password</emphasis>" \
--locations "New York" --organizations "<emphasis>My_Organization</emphasis>" \
--datacenter "<emphasis>My_Datacenter</emphasis>"</screen>
<simpara>Optionally, to evaluate the new engine API, change <literal>false</literal> to <literal>true</literal> for the <literal>--use-v4</literal> option.</simpara>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization-Adding_Red_Hat_Virtualization_Images_on_the_Satellite_Server">
<title>Adding {OVirt} Images to {ProjectServer}</title>
<simpara>{OVirt} uses templates as images for creating virtual machines. If you use image-based provisioning to create hosts, you must add {OVirt} template details to your {ProjectServer}. This includes access details and the template name.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add {OVirt} images on {ProjectServer}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and in the Compute Resources window, click the name of your {OVirt} connection.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Image</emphasis> tab, and then click <emphasis role="strong">New Image</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operatingsystem</emphasis> list, select the image&#8217;s base operating system.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Username</emphasis> field, enter the SSH user name for image access. This is normally the <literal>root</literal> user.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the SSH password for image access.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the name of the image on {OVirt}.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the image with the <literal>hammer compute-resource image create</literal> command. Use the <literal>--uuid</literal> option to store the template UUID on the {OVirt} server.</para>
</formalpara>
<screen># hammer compute-resource image create --name "<emphasis>Test</emphasis>{OVirtShort}_Image_" \
--operatingsystem "RedHat 7.2" --architecture "x86_64" --username root \
--uuid "9788910c-4030-4ae0-bad7-603375dd72b1" \
--compute-resource "<emphasis>My</emphasis>{OVirtShort}_"</screen>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization-Adding_Red_Hat_Virtualization_Details_to_a_Compute_Profile">
<title>Adding {OVirt} Details to a Compute Profile</title>
<simpara>You can predefine certain hardware settings for virtual machines on {OVirt}. You achieve this through adding these hardware settings to a compute profile.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add {OVirt} details to a compute profile, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis> and in the Compute Profiles window, click the name of the {OVirt} connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Cluster</emphasis> list, select the target host cluster in the {OVirt} environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Template</emphasis> list, select the {OVirtShort} template to use for the <emphasis role="strong">Cores</emphasis> and <emphasis role="strong">Memory</emphasis> settings.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Cores</emphasis> field, enter the number of CPU cores to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Memory</emphasis> field, enter the amount of memory to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select image to use for image-based provisioning.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Network Interfaces</emphasis> area, enter the network parameters for the host&#8217;s network interface. You can create multiple network interfaces. However, at least one interface must point to a {SmartProxy}-managed network. For each network interface, enter the following details:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter the name of the network interface.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Network</emphasis> list, select The logical network that you want to use.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Storage</emphasis> area, enter the storage parameters for the host. You can create multiple volumes for the host. For each volume, enter the following details:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the <emphasis role="strong">Size (GB)</emphasis> enter the size, in GB, for the new volume.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Storage domain</emphasis> list, select the storage domain for the volume.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Preallocate disk</emphasis>, select either thin provisioning or preallocation of the full disk.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Bootable</emphasis> list, select whether you want a bootable or non bootable volume.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute profile.</simpara>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>For CLI Users</title>
<listitem>
<simpara>To create a compute profile, enter the following command:</simpara>
<screen># hammer compute-profile create --name "{OVirt} CP"</screen>
</listitem>
<listitem>
<simpara>To set the values for the compute profile, enter the following command:</simpara>
<screen># hammer compute-profile values create --compute-profile "{OVirt} CP" \
--compute-resource "<emphasis>My</emphasis>{OVirtShort}_" \
--interface "compute_interface=<emphasis>Interface_Type</emphasis>,compute_name=eth0,compute_network=satnetwork" \
--volume "size_gb=20G,storage_domain=Data,bootable=true" \
--compute-attributes "cluster=Default,cores=1,memory=1073741824,start=true""</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Red_Hat_Virtualization-Creating_Hosts_on_a_Red_Hat_Virtualization_Server">
<title>Creating Network-Based Hosts on a {OVirt} Server</title>
<simpara>In {Project}, you can create {OVirt} hosts over a network connection or from an existing image.</simpara>
<simpara>To create a host over a network, the new host must have access to either {ProjectServer}'s integrated {SmartProxy} or an external {SmartProxyServer} on a {OVirt} virtual network, so that the host has access to PXE provisioning services. The new host entry triggers the {OVirt} server to create the virtual machine. If the virtual machine detects the defined {SmartProxyServer} through the virtual network, the virtual machine boots to PXE and begins to install the chosen operating system.</simpara>
<formalpara>
<title>DHCP conflicts</title>
<para>If you use a virtual network on the {OVirt} server for provisioning, ensure to select one that does not provide DHCP assignments. This causes DHCP conflicts with {ProjectServer} when booting new hosts.</para>
</formalpara>
<simpara>When you create a host with an existing image, the new host entry triggers the {OVirt} server to create the virtual machine, using the pre-existing image as a basis for the new volume.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a host for {OVirt} Server, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">New Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter the name that you want to become the provisioned system&#8217;s host name.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs to ensure that the provisioning context is automatically set to the current context.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select the host group that you want to use to populate the form.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> list, select the {OVirt} connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute Profile</emphasis> list, select a profile to use to automatically populate virtual machine-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab and click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are automatically populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>{ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">MAC address</emphasis> field is blank. The {OVirt} server assigns one to the host.</simpara>
</listitem>
<listitem>
<simpara>Verify that the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options are automatically selected for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>In the interface window, ensure that the {OVirt}-specific fields are populated with settings from the compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and confirm that all fields automatically contain values.</simpara>
</listitem>
<listitem>
<simpara>For network-based provisioning, ensure that the <emphasis role="strong">Provisioning Method</emphasis> is set to <literal>Network Based</literal>. For image-based provisioning, ensure that the <emphasis role="strong">Provisioning Method</emphasis> is set to <literal>Image Based</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning templates</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Virtual Machine</emphasis> tab and confirm that these settings are populated with details from the host group and compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host entry.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>To create a host with network-based provisioning, use the <literal>hammer host create</literal> command and include <literal>--provision-method build</literal>.</para>
</formalpara>
<screen># hammer host create --name "{OVirtShort}-test1" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My</emphasis>{OVirtShort}_" --provision-method build \
--build true --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_name=eth0,compute_network=satnetwork" \
--compute-attributes="cluster=Default,cores=1,memory=1073741824,start=true" \
--volume="size_gb=20G,storage_domain=Data,bootable=true"</screen>
<simpara>To create a host with image-based provisioning, use the <literal>hammer host create</literal> command and include <literal>--provision-method image</literal>.</simpara>
<screen># hammer host create --name "{OVirtShort}-test2" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My</emphasis>{OVirtShort}_" --provision-method image \
--image "<emphasis>Test_RHV_Image</emphasis>" --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_name=eth0,compute_network=satnetwork" \
--compute-attributes="cluster=Default,cores=1,memory=1073741824,start=true" \
--volume="size_gb=20G,storage_domain=Data,bootable=true"</screen>
<simpara>For more information about additional host creation parameters for this compute resource, see <xref linkend="CLI_Params"/>.</simpara>
</section>
</chapter>
<chapter xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere">
<title>Provisioning Virtual Machines in VMware vSphere</title>
<simpara>VMware vSphere is an enterprise-level virtualization platform from VMware. {ProjectNameX} can interact with the vSphere platform, including creating new virtual machines and controlling their power management states.</simpara>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Prerequisites_for_VMware_vSphere_Provisioning">
<title>Prerequisites for VMware vSphere Provisioning</title>
<simpara>The requirements for VMware vSphere provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing a network on the vSphere environment. Ensure no other DHCP services run on this network to avoid conflicts with the {SmartProxyServer}. For more information, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
<listitem>
<simpara>An existing VMware template if you want to use image-based provisioning.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Creating_a_VMware_vSphere_User">
<title>Creating a VMware vSphere User</title>
<simpara>The VMware vSphere server requires an administration-like user for {ProjectServer} communication. For security reasons, do not use the <literal>administrator</literal> user for such communication. Instead, create a user with the following permissions:</simpara>
<simpara>For VMware vCenter Server version 6.7, set the following permissions:</simpara>
<itemizedlist>
<listitem>
<simpara>All Privileges &#8594; Datastore &#8594; Allocate Space, Browse datastore, Update Virtual Machine files, Low level file operations</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Network &#8594; Assign Network</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Resource &#8594; Assign virtual machine to resource pool</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Change Config (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Interaction (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Edit Inventory (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Provisioning (All)</simpara>
</listitem>
</itemizedlist>
<simpara>For VMware vCenter Server version 6.5, set the following permissions:</simpara>
<itemizedlist>
<listitem>
<simpara>All Privileges &#8594; Datastore &#8594; Allocate Space, Browse datastore, Update Virtual Machine files, Low level file operations</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Network &#8594; Assign Network</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Resource &#8594; Assign virtual machine to resource pool</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Configuration (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Interaction (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Inventory (All)</simpara>
</listitem>
<listitem>
<simpara>All Privileges &#8594; Virtual Machine &#8594; Provisioning (All)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Adding_a_VMware_vSphere_Connection_to_the_Satellite_Server">
<title>Adding a VMware vSphere Connection to {ProjectServer}</title>
<simpara>Use this procedure to add a VMware vSphere connection in {ProjectServer}'s compute resources.</simpara>
<simpara>Ensure that the host and network-based firewalls are configured to allow {Project} to vCenter communication on TCP port 443. Verify that {Project} is able to resolve the host name of vCenter and vCenter is able to resolve {ProjectServer}'s host name.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a connection, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and in the Compute Resources window, click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">VMware</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">VCenter/Server</emphasis> field, enter the IP address or host name of the vCenter server.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> field, enter the user name with permission to access the vCenter&#8217;s resources.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the password for the user.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Load Datacenters</emphasis> to populate the list of data centers from your VMware vSphere environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Datacenter</emphasis> list, select a specific data center to manage from this list.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Fingerprint</emphasis> field, ensure that this field is populated with the fingerprint from the data center.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Display Type</emphasis> list, select a console type, for example, <emphasis role="strong">VNC</emphasis> or <emphasis role="strong">VMRC</emphasis>. Note that VNC consoles are unsupported on VMware ESXi 6.5 and later.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">VNC Console Passwords</emphasis> field, select the <emphasis role="strong">Set a randomly generated password on the display connection</emphasis> check box to secure console access for new hosts with a randomly generated password. You can retrieve the password for the VNC console to access guest virtual machine console from the <literal>libvirtd</literal> host from the output of the following command:</simpara>
<screen># virsh edit <emphasis>your_VM_name</emphasis>
&lt;graphics type='vnc' port='-1' autoport='yes' listen='0.0.0.0' passwd='<emphasis>your_randomly_generated_password</emphasis>'&gt;</screen>
<simpara>The password randomly generates every time the console for the virtual machine opens, for example, with virt-manager.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Enable Caching</emphasis> list, you can select whether to enable caching of compute resources. For more information, see <xref linkend="Provisioning_Virtual_Machines_in_VMware_vSphere-Caching_of_Compute_resources"/>.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> and <emphasis role="strong">Organizations</emphasis> tabs and verify that the values are automatically set to your current context. You can also add additional contexts.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the connection.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the connection with the <literal>hammer compute-resource create</literal> command. Select <literal>Vmware</literal> as the <literal>--provider</literal> and set the instance UUID of the data center as the <literal>--uuid</literal>:</para>
</formalpara>
<screen># hammer compute-resource create --name "My_vSphere" \
--provider "Vmware" \
--description "vSphere server at <emphasis>vsphere.example.com</emphasis>" \
--server "<emphasis>vsphere.example.com</emphasis>" --user "<emphasis>My_User</emphasis>" \
--password "<emphasis>My_Password</emphasis>" --locations "<emphasis>My_Location</emphasis>" --organizations "<emphasis>My_Organization</emphasis>" \
--datacenter "<emphasis>My_Datacenter</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Adding_VMware_vSphere_Images_on_the_Satellite_Server">
<title>Adding VMware vSphere Images to {ProjectServer}</title>
<simpara>VMware vSphere uses templates as images for creating new virtual machines. If using image-based provisioning to create new hosts, you need to add VMware template details to your {ProjectServer}. This includes access details and the template name.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add an image, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and in the Compute Resources window, click the VMware vSphere connection.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operatingsystem</emphasis> list, select the image&#8217;s base operating system.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> field, enter the SSH user name for image access. This is normally the <literal>root</literal> user.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the SSH password for image access.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">User data</emphasis> list, select whether you want the images to support user data input, such as <literal>cloud-init</literal> data.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Image</emphasis> field, enter the relative path and name of the template on the vSphere environment. Do not include the data center in the relative path.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the image with the <literal>hammer compute-resource image create</literal> command. Use the <literal>--uuid</literal> field to store the relative template path on the vSphere environment.</para>
</formalpara>
<screen># hammer compute-resource image create --name "<emphasis>Test_vSphere_Image</emphasis>" \
--operatingsystem "RedHat 7.2" --architecture "x86_64" \
--username root --uuid "Templates/RHEL72" \
--compute-resource "<emphasis>My_vSphere</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Adding_VMware_vSphere_Details_to_a_Compute_Profile">
<title>Adding VMware vSphere Details to a Compute Profile</title>
<simpara>You can predefine certain hardware settings for virtual machines on VMware vSphere. You achieve this through adding these hardware settings to a compute profile.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add VMware vSphere details to a compute profile, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis> and, in the Compute Profiles window, click the name of the compute profile, and then click the vSphere connection.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">CPUs</emphasis> field, enter the number of CPUs to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Cores per socket</emphasis> field, enter the number of cores to allocate to each CPU.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Memory</emphasis> field, enter the amount of memory to allocate to the new host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Cluster</emphasis> field, enter the name of the target host cluster on the VMware environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Resource pool</emphasis> list, select an available resource allocations for the host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Folder</emphasis> field, enter the folder to organize the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Guest OS</emphasis> list, select the operating system you want to use in VMware vSphere.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">SCSI controller</emphasis> list, select the disk access method for the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Virtual H/W version</emphasis> list, select the underlying VMware hardware abstraction to use for virtual machines.</simpara>
</listitem>
<listitem>
<simpara>You can select the <emphasis role="strong">Memory hot add</emphasis> or <emphasis role="strong">CPU hot add</emphasis> check boxes if you want to add more resources while the virtual machine is powered.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image to use if performing image-based provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Network Interfaces</emphasis> list, select the network parameters for the host&#8217;s network interface. You can create multiple network interfaces. However, at least one interface must point to a {SmartProxy}-managed network.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Eager zero</emphasis> check box if you want to use eager zero thick provisioning. If unchecked, the disk uses lazy zero thick provisioning.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute profile.</simpara>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>For CLI Users</title>
<listitem>
<simpara>To create the compute profile, enter the following command:</simpara>
<screen># hammer compute-profile create --name "VMWare CP"</screen>
</listitem>
<listitem>
<simpara>To add the values for the compute profile, enter the following command:</simpara>
<screen># hammer compute-profile values create --compute-profile "<emphasis>VMWare CP</emphasis>" \
--compute-resource "<emphasis>My_vSphere</emphasis>" \
--interface "compute_type=VirtualE1000,compute_network=mynetwork \
--volume "size_gb=20G,datastore=Data,name=myharddisk,thin=true" \
--compute-attributes "cpus=1,corespersocket=2,memory_mb=1024,cluster=MyCluster,path=MyVMs,start=true"</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Creating_Hosts_on_a_VMware_vSphere_Server">
<title>Creating Hosts on a VMware vSphere Server</title>
<simpara>The VMware vSphere provisioning process provides the option to create hosts over a network connection or using an existing image.</simpara>
<simpara>For network-based provisioning, you must create a host to access either {ProjectServer}'s integrated {SmartProxy} or an external {SmartProxyServer} on a VMware vSphere virtual network, so that the host has access to PXE provisioning services. The new host entry triggers the VMware vSphere server to create the virtual machine. If the virtual machine detects the defined {SmartProxyServer} through the virtual network, the virtual machine boots to PXE and begins to install the chosen operating system.</simpara>
<formalpara>
<title>DHCP Conflicts</title>
<para>If you use a virtual network on the VMware vSphere server for provisioning, ensure that you select a virtual network that does not provide DHCP assignments. This causes DHCP conflicts with {ProjectServer} when booting new hosts.</para>
</formalpara>
<simpara>For image-based provisioning, use the pre-existing image as a basis for the new volume.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a host for a VMware vSphere server, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter the name that you want to become the provisioned system&#8217;s host name.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs to ensure that the provisioning context is automatically set to the current context.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, select the host group that you want to use to populate the form.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> list, select the VMware vSphere connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute Profile</emphasis> list, select a profile to use to automatically populate virtual machine-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab and click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are automatically populated with values. Note in particular:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>The {ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">MAC address</emphasis> field is blank. The VMware vSphere server assigns one to the host.</simpara>
</listitem>
<listitem>
<simpara>Verify that the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options are automatically selected for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>In the interface window, review the VMware vSphere-specific fields that are populated with settings from our compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and confirm that all fields automatically contain values.</simpara>
</listitem>
<listitem>
<simpara>Select the Provisioning Method that you want:</simpara>
<itemizedlist>
<listitem>
<simpara>For network-based provisioning, click <emphasis role="strong">Network Based</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For image-based provisioning, click <emphasis role="strong">Image Based</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning templates</emphasis> to check the new host can identify the right provisioning templates to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Virtual Machine</emphasis> tab and confirm that these settings are populated with details from the host group and compute profile. Modify these settings to suit your requirements.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host entry.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the host from a network with the <literal>hammer host create</literal> command and include <literal>--provision-method build</literal> to use network-based provisioning.</para>
</formalpara>
<screen># hammer host create --name "vmware-test1" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My_vSphere</emphasis>" --provision-method build \
--build true --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_type=VirtualE1000,compute_network=mynetwork" \
--compute-attributes="cpus=1,corespersocket=2,memory_mb=1024,cluster=MyCluster,path=MyVMs,start=true" \
--volume="size_gb=20G,datastore=Data,name=myharddisk,thin=true"</screen>
<note>
<simpara>See <xref linkend="CLI_Params"/> for more information on additional host creation parameters for this compute resource.</simpara>
</note>
<formalpara>
<title>For CLI Users</title>
<para>Create the host from an image with the <literal>hammer host create</literal> command and include <literal>--provision-method image</literal> to use image-based provisioning.</para>
</formalpara>
<screen># hammer host create --name "vmware-test2" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My_VMware</emphasis>" --provision-method image \
--image "<emphasis>Test VMware Image</emphasis>" --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,compute_type=VirtualE1000,compute_network=mynetwork" \
--compute-attributes="cpus=1,corespersocket=2,memory_mb=1024,cluster=MyCluster,path=MyVMs,start=true" \
--volume="size_gb=20G,datastore=Data,name=myharddisk,thin=true"</screen>
<simpara>For more information about additional host creation parameters for this compute resource, see <xref linkend="CLI_Params"/>.</simpara>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Provisioning_with_cloudinit_and_userdata_templates">
<title>Using the VMware vSphere Cloud-init and Userdata Templates for Provisioning</title>
<simpara>You can use VMware with the <literal>Cloud-init</literal> and <literal>Userdata</literal> templates to insert user data into the new virtual machine, to make further VMware customization, and to enable the VMware-hosted virtual machine to call back to {Project}.</simpara>
<simpara>You can use the same procedures to set up a VMware compute resource within {Project}, with a few modifications to the work flow.</simpara>
<formalpara>
<title>VMware cloud-init Provisioning Overview</title>
<para>When you set up the compute resource and images for VMware provisioning in {Project}, the following sequence of provisioning events occur:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>The user provisions one or more virtual machines using the {Project} web UI, API, or hammer</simpara>
</listitem>
<listitem>
<simpara>{Project} calls the VMware vCenter to clone the virtual machine template</simpara>
</listitem>
<listitem>
<simpara>{Project} <literal>userdata</literal> provisioning template adds customized identity information</simpara>
</listitem>
<listitem>
<simpara>When provisioning completes, the <literal>Cloud-init</literal> provisioning template instructs the virtual machine to call back to {SmartProxy} when <literal>cloud-init</literal> runs</simpara>
</listitem>
<listitem>
<simpara>VMware vCenter clones the template to the virtual machine</simpara>
</listitem>
<listitem>
<simpara>VMware vCenter applies customization for the virtual machine&#8217;s identity, including the host name, IP, and DNS</simpara>
</listitem>
<listitem>
<simpara>The virtual machine builds, <literal>cloud-init</literal> is invoked and calls back {Project} on port <literal>80</literal>, which then redirects to <literal>443</literal></simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Port and Firewall Requirements</title>
<para>Because of the <literal>cloud-init</literal> service, the virtual machine always calls back to {Project} even if you register the virtual machine to {SmartProxy}. Ensure that you configure port and firewall settings to open any necessary connections.</para>
</formalpara>
<simpara>For more information about port and firewall requirements, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/installing_satellite_server_from_a_connected_network/preparing_your_environment_for_installation#ports-and-firewalls-requirements_satellite">Port and Firewall Requirements</link> in the <emphasis>Installing {Project}</emphasis> and <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/installing_capsule_server/preparing-environment-for-capsule-installation#ports-and-firewalls-requirements_capsule">Ports and Firewalls Requirements</link> in <emphasis>Installing {SmartProxyServer}</emphasis>.</simpara>
<orderedlist numeration="arabic">
<title>Associating the <literal>userdata</literal> and <literal>Cloud-init</literal> Templates with the Operating System</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating Systems</emphasis>, and select the operating system that you want to use for provisioning.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Template</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Cloud-init template</emphasis> list, select <emphasis role="strong">Cloudinit default</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">User data template</emphasis> list, select <emphasis role="strong">UserData open-vm-tools</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Preparing an Image to use the cloud-init Template</title>
<para>To prepare an image, you must first configure the settings that you require on a virtual machine that you can then save as an image to use in {Project}.</para>
</formalpara>
<simpara>To use the <literal>cloud-init</literal> template for provisioning, you must configure a virtual machine so that <literal>cloud-init</literal> is installed, enabled, and configured to call back to {ProjectServer}.</simpara>
<simpara>For security purposes, you must install a CA certificate to use HTTPs for all communication. This procedure includes steps to clean the virtual machine so that no unwanted information transfers to the image you use for provisioning.</simpara>
<simpara>If you have an image with <literal>cloud-init</literal>, you must still follow this procedure to enable <literal>cloud-init</literal> to communicate with {Project} because <literal>cloud-init</literal> is disabled by default.</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On the virtual machine that you use to create the image, install <literal>cloud-init</literal>, <literal>open-vm-tools</literal>, and <literal>perl</literal>:</simpara>
<screen># yum -y install cloud-init open-vm-tools perl</screen>
</listitem>
<listitem>
<simpara>Create a configuration file for <literal>cloud-init</literal>:</simpara>
<screen># vi /etc/cloud/cloud.cfg.d/<emphasis>example_cloud-init_config</emphasis>.cfg</screen>
</listitem>
<listitem>
<simpara>Add the following information to the <literal><emphasis>example_cloud_init_config</emphasis>.cfg</literal> file:</simpara>
<screen>datasource_list: [NoCloud]
datasource:
  NoCloud:
    seedfrom: https://{foreman-example-com}/userdata/
EOF</screen>
</listitem>
<listitem>
<simpara>Enable the CA certificates for the image:</simpara>
<screen># update-ca-trust enable</screen>
</listitem>
<listitem>
<simpara>Download the <literal>katello-server-ca.crt</literal> file from {ProjectServer}:</simpara>
<screen># wget -O /etc/pki/ca-trust/source/anchors/cloud-init-ca.crt http://<emphasis>{foreman-example-com}</emphasis>/pub/katello-server-ca.crt</screen>
</listitem>
<listitem>
<simpara>To update the record of certificates, enter the following command:</simpara>
<screen># update-ca-trust extract</screen>
</listitem>
<listitem>
<simpara>Use the following commands to clean the image:</simpara>
<screen># systemctl stop rsyslog
# systemctl stop auditd
# package-cleanup -oldkernels -count=1
# yum clean all</screen>
</listitem>
<listitem>
<simpara>Use the following commands to reduce logspace, remove old logs, and truncate logs:</simpara>
<screen># logrotate -f /etc/logrotate.conf
# rm -f /var/log/*-???????? /var/log/*.gz
# rm -f /var/log/dmesg.old
# rm -rf /var/log/anaconda
# cat /dev/null &gt; /var/log/audit/audit.log
# cat /dev/null &gt; /var/log/wtmp
# cat /dev/null &gt; /var/log/lastlog
# cat /dev/null &gt; /var/log/grubby</screen>
</listitem>
<listitem>
<simpara>Remove <literal>udev</literal> hardware rules:</simpara>
<screen># rm -f /etc/udev/rules.d/70*</screen>
</listitem>
<listitem>
<simpara>Remove the <literal>uuid</literal> from <literal>ifcfg</literal> scripts:</simpara>
<screen># cat &gt; /etc/sysconfig/network-scripts/ifcfg-ens192 &lt;&lt;EOM
DEVICE=ens192
ONBOOT=yes
EOM</screen>
</listitem>
<listitem>
<simpara>Remove the SSH host keys:</simpara>
<screen># rm -f /etc/ssh/<emphasis>SSH_keys</emphasis></screen>
</listitem>
<listitem>
<simpara>Remove root user&#8217;s shell history:</simpara>
<screen># rm -f ~root/.bash_history
# unset HISTFILE</screen>
</listitem>
<listitem>
<simpara>Remove root user&#8217;s SSH history:</simpara>
<screen># rm -rf ~root/.ssh/known_hosts</screen>
</listitem>
</orderedlist>
<simpara>You can now create an image from this virtual machine.</simpara>
<simpara>You can use the <xref linkend="Provisioning_Virtual_Machines_in_VMware_vSphere-Adding_VMware_vSphere_Images_on_the_Satellite_Server"/> section to add the image to {Project}.</simpara>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_VMware_vSphere-Caching_of_Compute_resources">
<title>Caching of Compute Resources</title>
<simpara>Caching of compute resources speeds up rendering of VMware information.</simpara>
<section xml:id="_enabling_caching_of_compute_resources">
<title>Enabling Caching of Compute Resources</title>
<simpara>To enable or disable caching of compute resources:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Edit</emphasis> button to the right of the VMware server you want to update.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Enable caching</emphasis> check box.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_refreshing_the_compute_resources_cache">
<title>Refreshing the Compute Resources Cache</title>
<simpara>To refresh the cache of compute resources to update compute resources information:</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select a VMware server you want to refresh the compute resources cache for and click the <emphasis role="strong">Refresh Cache</emphasis> button.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Use this API call to refresh the compute resources cache:</para>
</formalpara>
<screen># curl -H "Accept:application/json,version=2" \
-H "Content-Type:application/json" -X PUT \
-u <emphasis>username</emphasis>:<emphasis>password</emphasis> -k \
https://<emphasis>{foreman-example-com}</emphasis>/api/compute_resources/<emphasis>compute_resource_id</emphasis>/refresh_cache</screen>
<simpara>Use the <literal>hammer compute-resource list</literal> command to determine the ID of the VMware server you want to refresh the compute resources cache for.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="Provisioning_Virtual_Machines_in_Container_native_virtualization-Provisioning_Virtual_Machines_with_Container_native_virtualization">
<title>Provisioning Virtual Machines with {KubeVirt}</title>
<simpara>{KubeVirt} addresses the needs of development teams that have adopted or want to adopt Kubernetes but possess existing virtual machine (VM)-based workloads that cannot be easily containerized. This technology provides a unified development platform where developers can build, modify, and deploy applications residing in application containers and VMs in a shared environment. These capabilities support rapid application modernization across the open hybrid cloud.</simpara>
<simpara>With {ProjectNameX}, you can create a compute resource for {KubeVirt} so that you can provision and manage Kubernetes virtual machines using {Project}.</simpara>
<section xml:id="_prerequisites_for_kubevirt_provisioning">
<title>Prerequisites for {KubeVirt} Provisioning</title>
<itemizedlist>
<listitem>
<simpara>A {KubeVirt} user that has the <literal>cluster-admin</literal> permissions for the Openshift Container Platform virtual cluster. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.1/html/authentication/using-rbac">Using RBAC to Define and Apply Permissions</link> in the <emphasis>Authentication</emphasis> guide of the Openshift Container Platform documentation.</simpara>
</listitem>
<listitem>
<simpara>A {SmartProxyServer} managing a network on the {KubeVirt} server. Ensure that no other DHCP services run on this network to avoid conflicts with {SmartProxyServer}. For more information about network service configuration for {SmartProxyServer}s, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Enabling the {KubeVirt} plugin for {Project}</title>
<para>To enable the {KubeVirt} plugin for {Project}, you must run the <literal>{foreman-installer}</literal> command with the following option:</para>
</formalpara>
<screen># {foreman-installer} --enable-foreman-plugin-kubevirt</screen>
<formalpara>
<title>User Roles and Permissions to Provision using {KubeVirt}</title>
<para>To provision a {KubeVirt} virtual machine in {Project}, you must have a user account with the following roles:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><literal>Edit hosts</literal></simpara>
</listitem>
<listitem>
<simpara><literal>View hosts</literal></simpara>
</listitem>
</itemizedlist>
<simpara>For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/administering_red_hat_satellite/chap-red_hat_satellite-administering_red_hat_satellite-users_and_roles#sect-{Project_Link}-Administering_{Project_Link}-Creating_and_Managing_Users-Assigning_Roles_to_a_User">Assigning Roles to a User</link> in the <emphasis>Administering {ProjectName}</emphasis> guide.</simpara>
<simpara>You must also create a custom role with the following permissions:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>view_compute_resources</literal></simpara>
</listitem>
<listitem>
<simpara><literal>destroy_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>power_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>create_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_compute_resources_vms</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_locations</literal></simpara>
</listitem>
<listitem>
<simpara><literal>view_subnets</literal></simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Bearer token authentication</title>
<para>Before you can create a {KubeVirt} compute resource, you must generate a bearer token to use for HTTP and HTTPs authentication.</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>On your {KubeVirt} server, to list the secrets that contain tokens, enter the following command:</simpara>
<screen># kubectl get secrets</screen>
</listitem>
<listitem>
<simpara>To list the token for your secret, enter the following command:</simpara>
<screen># kubectl get secrets <emphasis>YOUR_SECRET</emphasis> -o jsonpath='{.data.token}' | base64 -d | xargs</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_Container_native_virtualization-Adding_a_Container_native_virtualization_Connection_to_Satellite_Server">
<title>Adding a {KubeVirt} Connection to {ProjectServer}</title>
<simpara>Use this procedure to add a {KubeVirt} connection to {ProjectServer}'s compute resources.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a {KubeVirt} connection to {Project}, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis>, and click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the new compute resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">{KubeVirt}</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the compute resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Hostname</emphasis> field, enter the address of the {KubeVirt} server that you want to use.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">API Port</emphasis> field, enter the port number that you want to use for provisioning requests from {Project} to {KubeVirt}.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Namespace</emphasis> field, enter the user name of the {KubeVirt} virtual cluster that you want to use.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Token</emphasis> field, enter a bearer token for HTTP and HTTPs authentication.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">X509 Certification Authorities</emphasis> field, enter a certifcate to enable client certificate authentication for API server calls.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform">
<title>Provisioning Cloud Instances in {OpenStack}</title>
<simpara>{OpenStack} provides the foundation to build a private or public Infrastructure-as-a-Service (IaaS) cloud. It offers a massively scalable, fault-tolerant platform for the development of cloud-enabled workloads. In {ProjectNameX}, you can interact with {OpenStack} REST API to create cloud instances and control their power management states.</simpara>
<section xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform-Prerequisites_for_Red_Hat_OpenStack_Platform_Provisioning">
<title>Prerequisites for {OpenStack} Provisioning:</title>
<simpara>Requirements for {OpenStack} Provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing a network in your OpenStack environment. For more information, see <xref linkend="Configuring_Networking"/>.</simpara>
</listitem>
<listitem>
<simpara>An image added to OpenStack Image Storage (glance) service for image-based provisioning. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en/red-hat-openstack-platform/9/paged/instances-and-images-guide/">{OpenStack} Instances and Images Guide</link>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform-Adding_a_Red_Hat_OpenStack_Platform_Connection_to_the_Satellite_Server">
<title>Adding a {OpenStack} Connection to the {ProjectServer}</title>
<simpara>Use this procedure to add the {OpenStack} connection in the {ProjectServer}'s compute resources.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a compute resource, use the following procedure:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and in the Compute Resources window, click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to identify the compute resource for future use.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">RHEL OpenStack Platform</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter a description for the resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">URL</emphasis> field, enter a URL to point to the OpenStack Authentication keystone service&#8217;s API at the <literal>tokens</literal> resource. Use the following format: <literal><link xlink:href="http://openstack.example.com:5000/v2.0/tokens">http://openstack.example.com:5000/v2.0/tokens</link></literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> and <emphasis role="strong">Password</emphasis> fields, enter the authentication user and password for {Project} to access the environment.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Domain</emphasis> field, enter the domain for V3 authentication.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Tenant</emphasis> list, select the tenant or project for {ProjectServer} to manage.</simpara>
</listitem>
<listitem>
<simpara>To use external networks as primary networks for hosts, select the <emphasis role="strong">Allow external network as main network</emphasis> check box.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> and <emphasis role="strong">Organizations</emphasis> tabs and verify that the location and organization that you want to use are set to your current context. Add any additional contexts that you want to these tabs.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the {OpenStack} connection.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the connection with the <literal>hammer compute-resource create</literal> command:</para>
</formalpara>
<screen># hammer compute-resource create --name "<emphasis>My_OpenStack</emphasis>" \
--provider "OpenStack" \
--description "My OpenStack environment at <emphasis>openstack.example.com</emphasis>" \
--url "<emphasis>http://openstack.example.com</emphasis>:5000/v2.0/tokens" --user "<emphasis>My_Username</emphasis>" \
--password "<emphasis>My_Password</emphasis>" --tenant "openstack" --locations "New York" \
--organizations "<emphasis>My_Organization</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform-Adding_Red_Hat_OpenStack_Platform_Images_on_the_Satellite_Server">
<title>Adding {OpenStack} Images to the {ProjectServer}</title>
<simpara>{OpenStack} uses image-based provisioning to create hosts. You must add image details to your {ProjectServer}. This includes access details and image location.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add {OpenStack} images, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and in the Computer Resources window, click the name of a {OpenStack} connection.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name that describes the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operatingsystem</emphasis> list, select the image&#8217;s base operating system.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> field, enter the SSH user name for image access. This is normally the <literal>root</literal> user.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the SSH password for image access.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image in OpenStack Image Storage.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">User data</emphasis> list, select whether you want to set if images support user data input, such as <literal>cloud-init</literal> data.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the image with the <literal>hammer compute-resource image create</literal> command. Use the <literal>--uuid</literal> field to store the full path of the image location on the {OpenStack} server.</para>
</formalpara>
<screen># hammer compute-resource image create --name "Test OpenStack Image" \
--operatingsystem "RedHat 7.2" --architecture "x86_64" \
--user root --user-data true \
--compute-resource "<emphasis>My_OpenStack_Platform</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform-Adding_Red_Hat_OpenStack_Platform_Details_to_a_Compute_Profile">
<title>Adding {OpenStack} Details to a Compute Profile</title>
<simpara>In {Project}, you can define certain hardware settings for instances on {OpenStack}. You can add these hardware settings to a compute profile.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add {OpenStack} details to a compute profile, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis> and in the Compute Profiles window, click the name of the profile you want to use.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Flavor</emphasis> list, select the hardware profile on OpenStack Platform to use for the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Availability zone</emphasis> list, selec the target cluster to use within the OpenStack Platform environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image to use for image-based provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Tenant</emphasis> list, select the tenant or project for the OpenStack Platform instance.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Security Group</emphasis> list, select the cloud-based access rules for ports and IP addresses.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Internal network</emphasis>, select the private networks for the host to join.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Floating IP network</emphasis>, select the external networks for the host to join and assign a floating IP address.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Boot from volume</emphasis>, select whether a volume is created from the image. If not selected, the instance boots the image directly.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">New boot volume size (GB)</emphasis> field, enter the size, in GB, of the new boot volume.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute profile.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>The compute profile CLI commands are not yet implemented in {ProjectName} 6.6. As an alternative, you can include the same settings directly during the host creation process.</para>
</formalpara>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Red_Hat_OpenStack_Platform-Creating_Image_Based_Hosts_on_Red_Hat_OpenStack_Platform">
<title>Creating Image-Based Hosts on {OpenStack}</title>
<simpara>In {Project}, you can provision {OpenStack} hosts from existing images on the {OpenStack} server.</simpara>
<formalpara>
<title>Procedure</title>
<para>To provision a host, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">New Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter the name that you want to assign to the provisioned system&#8217;s host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, you can select a host group to populate the host fields.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> lits, select the OpenStack Platform connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute profile</emphasis> list, select a profile to use to automatically populate cloud instance-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab, and click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface. Verify that the <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>, and that the {ProjectServer} automatically assigns an IP address for the new host.</simpara>
</listitem>
<listitem>
<simpara>Ensure that the <emphasis role="strong">MAC address</emphasis> field is blank. The {OpenStack} server assigns a MAC address to the host.</simpara>
</listitem>
<listitem>
<simpara>Verify that {ProjectServer} automatically selects the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options for the first interface on the host. If not, select them.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and confirm that each aspect of the operating system is populated.</simpara>
</listitem>
<listitem>
<simpara>If you want to change the image that populates automatically from your compute profile, from the <emphasis role="strong">Images</emphasis> list, select a different image to base the new host&#8217;s root volume.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning Templates</emphasis> to verify that the new host can identify the right provisioning templates to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Virtual Machine</emphasis> tab, and verify that the settings are populated with details from the host groups and compute profile. Modify these settings to suit your needs.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
</orderedlist>
<simpara>This new host entry triggers the {OpenStack} server to create the instance, using the pre-existing image as a basis for the new volume.</simpara>
<formalpara>
<title>For CLI Users</title>
<para>Create the host with the <literal>hammer host create</literal> command and include the <literal>--provision-method image</literal> option to use image-based provisioning.</para>
</formalpara>
<screen># hammer host create --name "openstack-test1" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "<emphasis>Example_Hostgroup</emphasis>" \
--compute-resource "<emphasis>My_OpenStack_Platform</emphasis>" --provision-method image \
--image "Test OpenStack Image" --enabled true --managed true \
--interface "managed=true,primary=true,provision=true" \
--compute-attributes="flavor_ref=m1.small,tenant_id=openstack,security_groups=default,network=mynetwork"</screen>
<simpara>For more information about additional host creation parameters for this compute resource, see <xref linkend="CLI_Params"/>.</simpara>
</section>
</chapter>
<chapter xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2">
<title>Provisioning Cloud Instances in Amazon EC2</title>
<simpara>Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides public cloud compute resources. Using {Project}, you can interact with Amazon EC2&#8217;s public API to create cloud instances and control their power management states. Use the procedures in this chapter to add a connection to an Amazon EC2 account and provision a cloud instance.</simpara>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Prerequisites_for_Amazon_EC2_Provisioning">
<title>Prerequisites for Amazon EC2 Provisioning</title>
<simpara>The requirements for Amazon EC2 provisioning include:</simpara>
<itemizedlist>
<listitem>
<simpara>A {SmartProxyServer} managing a network in your EC2 environment. Use a Virtual Private Cloud (VPC) to ensure a secure network between the hosts and the {SmartProxyServer}.</simpara>
</listitem>
<listitem>
<simpara>An Amazon Machine Image (AMI) for image-based provisioning.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Adding_a_Amazon_EC2_Connection_to_the_Satellite_Server">
<title>Adding an Amazon EC2 Connection to the {ProjectServer}</title>
<simpara>Use this procedure to add the Amazon EC2 connection in the {ProjectServer}'s compute resources.</simpara>
<formalpara>
<title>Time Settings and Amazon Web Services</title>
<para>Amazon Web Services uses time settings as part of the authentication process. Ensure that {ProjectServer}'s time is correctly synchronized. Ensure that an NTP service, such as <literal>ntpd</literal> or <literal>chronyd</literal>, is running properly on the {ProjectServer}. Failure to provide the correct time to Amazon Web Services can lead to authentication failures.</para>
</formalpara>
<simpara>For more information about synchronizing time in {Project}, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/installing_satellite_server_from_a_connected_network/installing_satellite_server#synchronizing_time">Synchronizing Time</link> in <emphasis>Installing {ProjectServer} from a Connected Network</emphasis>.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add an Amazon EC2 connection, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and in the Compute Resources window, click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to identify the Amazon EC2 compute resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">EC2</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Description</emphasis> field, enter information that helps distinguish the resource for future use.</simpara>
</listitem>
<listitem>
<simpara>Optional: From the <emphasis role="strong">HTTP proxy</emphasis> list, select an HTTP proxy to connect to external API services. You must add HTTP proxies to {Project} before you can select a proxy from this list. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/installing_satellite_server_from_a_connected_network/performing_additional_configuration_on_satellite_server#configuring_satellite_http_proxy">Configuring {ProjectServer} with HTTP Proxy</link> in <emphasis>Installing {ProjectServer} from a Connected Network</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Access Key</emphasis> and <emphasis role="strong">Secret Key</emphasis> fields, enter the access keys for your Amazon EC2 account. For more information, see <link xlink:href="http://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html">Managing Access Keys for your AWS Account</link> on the Amazon documentation website.</simpara>
</listitem>
<listitem>
<simpara>Optional: Click the <emphasis role="strong">Load Regions</emphasis> button to populate the <emphasis role="strong">Regions</emphasis> list.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Region</emphasis> list, select the Amazon EC2 region or data center to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab and ensure that the location you want to use is selected, or add a different location.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab and ensure that the organization you want to use is selected, or add a different organization.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the Amazon EC2 connection.</simpara>
</listitem>
<listitem>
<simpara>Select the new compute resource and then click the <emphasis role="strong">SSH keys</emphasis> tab, and click <emphasis role="strong">Download</emphasis> to save a copy of the SSH keys to use for SSH authentication. Until <link xlink:href="https://bugzilla.redhat.com/show_bug.cgi?id=1793138">BZ1793138</link> is resolved, you can download a copy of the SSH keys only immediately after creating the Amazon EC2 compute resource. If you require SSH keys at a later stage, follow the procedure in <xref linkend="connecting_to_an_Amazon_EC2_instance_using_SSH"/>.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the connection with the <literal>hammer compute-resource create</literal> command. Use <literal>--user</literal> and <literal>--password</literal> options to add the access key and secret key respectively.</para>
</formalpara>
<screen># hammer compute-resource create --name "<emphasis>My_EC2</emphasis>" --provider "EC2" \
--description "Amazon EC2 Public Cloud` --user "<emphasis>user_name</emphasis>" \
--password "<emphasis>secret_key</emphasis>" --region "us-east-1" --locations "New York" \
--organizations "<emphasis>My_Organization</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Using-an-HTTP-Smart-Proxy">
<title>Using an HTTP Proxy with Compute Resources</title>
<simpara>In some cases, the EC2 compute resource that you use might require a specific HTTP proxy to communicate with {Project}. In {Project}, you can create an HTTP proxy and then assign the HTTP proxy to your EC2 compute resource.</simpara>
<simpara>However, if you configure an HTTP proxy for {Project} in <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis>, and then add another HTTP proxy for your compute resource, the HTTP proxy that you define in <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis> takes precedence.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">HTTP Proxies</emphasis>, and select <emphasis role="strong">New HTTP Proxy</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the HTTP proxy.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">URL</emphasis> field, enter the URL for the HTTP proxy, including the port number.</simpara>
</listitem>
<listitem>
<simpara>Optional: Enter a username and password to authenticate to the HTTP proxy, if your HTTP proxy requires authentication.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Test Connection</emphasis> to ensure that you can connect to the HTTP proxy from {Project}.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab and add a location.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> tab and add an organization.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Adding_Amazon_EC2_Images_on_the_Satellite_Server">
<title>Adding Amazon EC2 Images to {ProjectServer}</title>
<simpara>Amazon EC2 uses image-based provisioning to create hosts. You must add image details to your {ProjectServer}. This includes access details and image location.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and select an Amazon EC2 connection.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Images</emphasis> tab, and then click <emphasis role="strong">New Image</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name to identify the image for future use.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operating System</emphasis> list, select the operating system that corresponds with the image you want to add.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system&#8217;s architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Username</emphasis> field, enter the SSH user name for image access. This is normally the <literal>root</literal> user.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Password</emphasis> field, enter the SSH password for image access.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Image ID</emphasis> field, enter the Amazon Machine Image (AMI) ID for the image. This is usually in the following format: <literal>ami-xxxxxxxx</literal>.</simpara>
</listitem>
<listitem>
<simpara>Optional: Select the <emphasis role="strong">User Data</emphasis> check box if the images support user data input, such as <literal>cloud-init</literal> data. If you enable user data, the Finish scripts are automatically disabled. This also applies in reverse: if you enable the Finish scripts, this disables user data.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">IAM role</emphasis> field, enter the Amazon security role used for creating the image.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>Create the image with the <literal>hammer compute-resource image create</literal> command. Use the <literal>--uuid</literal> field to store the full path of the image location on the Amazon EC2 server.</para>
</formalpara>
<screen># hammer compute-resource image create --name "Test Amazon EC2 Image" \
--operatingsystem "RedHat 7.2" --architecture "x86_64" --username root \
--user-data true --uuid "ami-<emphasis>my_ami_id</emphasis>" --compute-resource "<emphasis>My_EC2</emphasis>"</screen>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Adding_Amazon_EC2_Details_to_a_Compute_Profile">
<title>Adding Amazon EC2 Details to a Compute Profile</title>
<simpara>You can add hardware settings for instances on Amazon EC2 to a compute profile.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add hardware settings, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis> and click the name of your profile, then click an EC2 connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Flavor</emphasis> list, select the hardware profile on EC2 to use for the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image to use for image-based provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Availability zone</emphasis> list, select the target cluster to use within the chosen EC2 region.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Subnet</emphasis> list, add the subnet for the EC2 instance. If you have a VPC for provisioning new hosts, use its subnet.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Security Groups</emphasis> list, select the cloud-based access rules for ports and IP addresses to apply to the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Managed IP</emphasis> list, select either a <literal>Public</literal> IP or a <literal>Private</literal> IP.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute profile.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>For CLI Users</title>
<para>The compute profile CLI commands are not yet implemented in {ProjectName}. As an alternative, you can include the same settings directly during the host creation process.</para>
</formalpara>
</section>
<section xml:id="Provisioning_Cloud_Instances_in_Amazon_EC2-Creating_Image_Based_Hosts_on_Amazon_EC2">
<title>Creating Image-Based Hosts on Amazon EC2</title>
<simpara>The Amazon EC2 provisioning process creates hosts from existing images on the Amazon EC2 server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the host.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Host Group</emphasis> list, you can select a host group to populate most of the new host&#8217;s fields.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> list, select the EC2 connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute Profile</emphasis> list, select a profile to use to automatically populate virtual machine-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab, and then click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface, and verify that the fields are populated with values. Leave the <emphasis role="strong">Mac Address</emphasis> field blank. The {ProjectServer} automatically selects and IP address and the <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options for the first interface on the host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab and confirm that all fields are populated with values.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Virtual Machine</emphasis> tab and confirm that all fields are populated with values.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save your changes.</simpara>
</listitem>
</orderedlist>
<simpara>This new host entry triggers the Amazon EC2 server to create the instance, using the pre-existing image as a basis for the new volume.</simpara>
<formalpara>
<title>For CLI Users</title>
<para>Create the host with the <literal>hammer host create</literal> command and include <literal>--provision-method image</literal> to use image-based provisioning.</para>
</formalpara>
<screen># hammer host create --name "ec2-test1" --organization "<emphasis>My_Organization</emphasis>" \
--location "New York" --hostgroup "Base" \
--compute-resource "<emphasis>My_EC2</emphasis>" --provision-method image \
--image "Test Amazon EC2 Image" --enabled true --managed true \
--interface "managed=true,primary=true,provision=true,subnet_id=EC2" \
--compute-attributes="flavor_id=m1.small,image_id=TestImage,availability_zones=us-east-1a,security_group_ids=Default,managed_ip=Public"</screen>
<simpara>For more information about host creation parameters for this compute resource, see <xref linkend="CLI_Params"/>.</simpara>
</section>
<section xml:id="connecting_to_an_Amazon_EC2_instance_using_SSH">
<title>Connecting to an Amazon EC2 instance using SSH</title>
<simpara>You can connect remotely to an Amazon EC2 instance from {ProjectServer} using SSH. However, to connect to any Amazon Web Services EC2 instance that you provision through {ProjectName}, you must first access the private key that is associated with the compute resource in the Foreman database, and use this key for authentication.</simpara>
<simpara>To locate the private key and connect to an Amazon EC2 server using SSH, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>To locate the compute resource list, on your {ProjectServer} base system, enter the following command, and note the ID of the compute resource that you want to use:</simpara>
<screen># hammer compute-resource list</screen>
</listitem>
<listitem>
<simpara>Switch user to the <literal>postgres</literal> user:</simpara>
<screen># su - postgres</screen>
</listitem>
<listitem>
<simpara>Initiate the <literal>postgres</literal> shell:</simpara>
<screen>$ psql</screen>
</listitem>
<listitem>
<simpara>Connect to the Foreman database as the user <literal>postgres</literal>:</simpara>
<screen># postgres=# \c foreman</screen>
</listitem>
<listitem>
<simpara>Select the secret from <literal>key_pairs</literal> where <literal>compute_resource_id = 3</literal>:</simpara>
<screen># select secret from key_pairs where compute_resource_id = 3; secret</screen>
</listitem>
<listitem>
<simpara>Copy the key from after <literal>-----BEGIN RSA PRIVATE KEY-----</literal> until <literal>-----END RSA PRIVATE KEY-----</literal>.</simpara>
</listitem>
<listitem>
<simpara>Create a <literal>.pem</literal> file and paste your key into the file:</simpara>
<screen># vim <emphasis>Keyname</emphasis>.pem</screen>
</listitem>
<listitem>
<simpara>Ensure that you restrict access to the <literal>.pem</literal> file:</simpara>
<screen># chmod 600 <emphasis>Keyname</emphasis>.pem</screen>
</listitem>
<listitem>
<simpara>To connect to the Amazon EC2 instance, enter the following command:</simpara>
<screen>ssh -i <emphasis>Keyname</emphasis>.pem   ec2-user@<emphasis>example.aws.com</emphasis></screen>
</listitem>
</orderedlist>
</section>
<section xml:id="_configuring_a_finish_template_for_an_amazon_web_service_ec2_environment">
<title>Configuring a Finish Template for an Amazon Web Service EC2 Environment</title>
<simpara>To configure a finish template for Amazon EC2, complete the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {ProjectName} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Provisioning Templates</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Provisioning Templates</emphasis> page, enter <literal>Kickstart default finish</literal> into the search field and click <emphasis role="strong">Search</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Kickstart default finish</emphasis> template, select <emphasis role="strong">Clone</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a unique name for the template.</simpara>
<screen>sudo -s &lt;&lt; EOS
_Template_ _Body_
EOS</screen>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Association</emphasis> tab, and associate the template with a Red&#160;Hat Enterprise Linux operating system that you want to use.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Locations</emphasis> tab, and add the the location where the host resides.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organizations</emphasis> tab, and add the organization that the host belongs to.</simpara>
</listitem>
<listitem>
<simpara>Make any additional customizations or changes that you require, then click <emphasis role="strong">Submit</emphasis> to save your template.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Operating systems</emphasis> and select the operating system that you want for your host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Templates</emphasis> tab, and from the <emphasis role="strong">Finish Template</emphasis> list, select your finish template.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create Host</emphasis> and enter the information about the host that you want to create.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Parameters</emphasis> tab and navigate to <emphasis role="strong">Host parameters</emphasis>.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter <literal>remote_execution_ssh_keys</literal>. In the corresponding <emphasis role="strong">Value</emphasis> field, enter the output of <literal>cat /usr/share/foreman-proxy/.ssh/id_rsa_foreman_proxy.pub</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter <literal>remote_execution_ssh_user</literal>. In the corresponding <emphasis role="strong">Value</emphasis> field, enter <literal>ec2-user</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the changes.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_more_information_about_amazon_web_services_and_project">
<title>More Information about Amazon Web Services and {Project}</title>
<simpara>For information about how to locate Red&#160;Hat Gold Images on Amazon Web Services EC2, see <link xlink:href="https://access.redhat.com/articles/2962171">How to Locate Red&#160;Hat Cloud Access Gold Images on AWS EC2</link>.</simpara>
<simpara>For information about how to install and use the Amazon Web Service Client on Linux, see <link xlink:href="https://docs.aws.amazon.com/cli/latest/userguide/awscli-install-linux.html">Install the AWS Command Line Interface on Linux</link> in the Amazon Web Services documentation.</simpara>
<simpara>For information about importing and exporting virtual machines in Amazon Web Services, see <link xlink:href="https://aws.amazon.com/ec2/vm-import/">VM Import/Export</link> in the Amazon Web Services documentation.</simpara>
</section>
</chapter>
<chapter xml:id="Provisioning_Virtual_Machines_in_GCE">
<title>Provisioning Cloud Instances in Google Compute Engine</title>
<simpara>{ProjectName} can interact with Google Compute Engine (GCE), including creating new virtual machines and controlling their power management states. Only image-based provisioning is supported for creating GCE hosts.</simpara>
<section xml:id="Provisioning_Virtual_Machines_in_GCE-Prerequisites_for_GCE_Provisioning">
<title>Prerequisites for GCE Provisioning</title>
<simpara>Before you begin, ensure that the following conditions are met:</simpara>
<itemizedlist>
<listitem>
<simpara>In your GCE project, configure a service account with the necessary IAM Compute role. For more information, see <link xlink:href="https://cloud.google.com/compute/docs/access/iam">Compute Engine IAM roles </link> in the GCE documentation.</simpara>
</listitem>
<listitem>
<simpara>In your GCE project-wise metadata, set the <literal>enable-oslogin</literal> to <literal>FALSE</literal>. For more information, see <link xlink:href="https://cloud.google.com/compute/docs/instances/managing-instance-access#enable_oslogin">Enabling or disabling OS Login</link> in the GCE documentation.</simpara>
</listitem>
<listitem>
<simpara>Optional: If you want to use Puppet with GCE hosts, navigate to <emphasis role="strong">Administer</emphasis> &gt; <emphasis role="strong">Settings</emphasis> &gt; <emphasis role="strong">Puppet</emphasis> and enable the <literal>Use UUID for certificates</literal> setting to configure Puppet to use consistent Puppet certificate IDs.</simpara>
</listitem>
<listitem>
<simpara>Based on your needs, associate a <literal>finish</literal> or <literal>user_data</literal> provisioning template with the operating system you want to use. For more information about provisioning templates, see <xref linkend="Configuring_Provisioning_Resources-Types_of_Provisioning_Templates"/>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_GCE-Adding_a_GCE_Connection">
<title>Adding a GCE Connection to {ProjectServer}</title>
<simpara>Use this procedure to add a GCE connection to {Project} to be able to add images and provision hosts on GCE.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add a connection, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In GCE, generate a service account key in JSON format and upload this file to the <literal>/usr/share/foreman/</literal> directory on {ProjectServer}.</simpara>
</listitem>
<listitem>
<simpara>On {ProjectServer}, configure permissions for the service account key to ensure that the file is readable by the <literal>foreman</literal> user:</simpara>
<screen># chown foreman /usr/share/foreman/<emphasis>gce_key</emphasis>.json
# chmod 0600 /usr/share/foreman/<emphasis>gce_key</emphasis>.json
# restorecon -vv /usr/share/foreman/<emphasis>gce_key</emphasis>.json</screen>
</listitem>
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and click <emphasis role="strong">Create Compute Resource</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the resource.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Provider</emphasis> list, select <emphasis role="strong">Google</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">Description</emphasis> field, enter a description for the resource.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Google Project ID</emphasis> field, enter the project ID.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Client Email</emphasis> field, enter the client email.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Certificate Path</emphasis> field, enter the path to the service account key. For example, <literal>/usr/share/foreman/<emphasis>gce_key</emphasis>.json</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Load Zones</emphasis> to populate the list of zones from your GCE environment.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Zone</emphasis> list, select the GCE zone to use.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_GCE-Adding_GCE_Images">
<title>Adding GCE Images to {ProjectServer}</title>
<simpara>GCE uses image-based provisioning to create hosts. You must add image details to your {ProjectServer}.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add an image, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Resources</emphasis> and click the GCE connection.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Images</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create Image</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Operating system</emphasis> list, select the base operating system for the image.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Architecture</emphasis> list, select the operating system architecture.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">User</emphasis> field, enter the SSH user name for image access. Specify a user other than <literal>root</literal>, because the <literal>root</literal> user cannot connect to a GCE instance using SSH keys. The username must begin with a letter and consist of lowercase letters and numbers.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the GCE image.</simpara>
</listitem>
<listitem>
<simpara>Optional: If the selected image supports <literal>cloud-init</literal>, select the <emphasis role="strong">User data</emphasis> check box to enable user data input.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the image details.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_GCE-Adding_GCE_Details_to_a_Compute_Profile">
<title>Adding GCE Details to a Compute Profile</title>
<simpara>You can add GCE details to a compute profile to automatically populate virtual machine-based settings on host creation.</simpara>
<formalpara>
<title>Procedure</title>
<para>To add details to a compute profile, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Infrastructure</emphasis> &gt; <emphasis role="strong">Compute Profiles</emphasis> and click the name of your profile.</simpara>
</listitem>
<listitem>
<simpara>Select a GCE connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Machine Type</emphasis> list, select the machine type to use for provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Image</emphasis> list, select the image to use for provisioning.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Network</emphasis> list, select the GCE network to use for provisioning.</simpara>
</listitem>
<listitem>
<simpara>Optional: Select the <emphasis role="strong">Associate Ephemeral External IP</emphasis> check box to assign a dynamic ephemeral IP address that {Project} uses to communicate with the host. This public IP address changes when you reboot the host. If you need a permanent IP address, reserve a static public IP address on GCE and attach it to the host.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Size (GB)</emphasis> field, enter the size of the storage to create on the host.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the compute profile.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="Provisioning_Virtual_Machines_in_GCE-Creating_Image_Based_Hosts_on_GCE">
<title>Creating Image-Based Hosts on GCE</title>
<simpara>The GCE provisioning process creates hosts from existing images on GCE.</simpara>
<formalpara>
<title>Procedure</title>
<para>To create a host on GCE, complete the following steps:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>In the {Project} web UI, navigate to <emphasis role="strong">Hosts</emphasis> &gt; <emphasis role="strong">Create host</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the host.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Organization</emphasis> and <emphasis role="strong">Location</emphasis> tabs to ensure that the provisioning context is automatically set to the current context.</simpara>
</listitem>
<listitem>
<simpara>Optional: From the <emphasis role="strong">Host Group</emphasis> list, you can select a host group to populate most of the new host&#8217;s fields.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Deploy on</emphasis> list, select the GCE connection.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Compute Profile</emphasis> list, select a profile to use to automatically populate virtual machine-based settings.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Interface</emphasis> tab and click <emphasis role="strong">Edit</emphasis> on the host&#8217;s interface.</simpara>
</listitem>
<listitem>
<simpara>Verify that the fields are automatically populated with values, particularly the following items:</simpara>
<itemizedlist>
<listitem>
<simpara>The <emphasis role="strong">Name</emphasis> from the <emphasis role="strong">Host</emphasis> tab becomes the <emphasis role="strong">DNS name</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>The <emphasis role="strong">MAC address</emphasis> field is blank.</simpara>
</listitem>
<listitem>
<simpara>The <emphasis role="strong">Domain</emphasis> field is populated with the required domain.</simpara>
</listitem>
<listitem>
<simpara>The <emphasis role="strong">Managed</emphasis>, <emphasis role="strong">Primary</emphasis>, and <emphasis role="strong">Provision</emphasis> options are automatically selected for the first interface on the host. If not, select them.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Operating System</emphasis> tab, and select the operating system to install.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Resolve</emphasis> in <emphasis role="strong">Provisioning templates</emphasis> to verify that the new host can identify the correct provisioning templates to use. You must select either a <literal>finish</literal> or <literal>user_data</literal> provisioning template.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Submit</emphasis> to save the host entry.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<appendix xml:id="Initialization_Script_for_Provisioning_Examples">
<title>Initialization Script for Provisioning Examples</title>
<simpara>If you have not followed the examples in the {ProjectNameX} Content Management Guide, you can use the following initialization script to create an environment for provisioning examples.</simpara>
<simpara>Create a script file (<literal>content-init.sh</literal>) and include the following:</simpara>
<screen>#!/bin/bash

MANIFEST=$1

# Import the content from Red Hat CDN
hammer organization create --name "ACME" --label "ACME" \
--description "Our example organization for managing content."
hammer subscription upload --file ~/$MANIFEST --organization "ACME"
hammer repository-set enable \
--name "Red Hat Enterprise Linux 7 Server (RPMs)" \
--releasever "7Server" --basearch "x86_64" \
--product "Red Hat Enterprise Linux Server" --organization "ACME"
hammer repository-set enable \
--name "Red Hat Enterprise Linux 7 Server (Kickstart)" \
--releasever "7Server" --basearch "x86_64" \
--product "Red Hat Enterprise Linux Server" --organization "ACME"
hammer repository-set enable \
--name "Red Hat Satellite Tools 6.6 (for RHEL 7 Server) (RPMs)" \
--basearch "x86_64" --product "Red Hat Enterprise Linux Server" \
--organization "ACME"
hammer product synchronize --name "Red Hat Enterprise Linux Server" \
--organization "ACME"

# Create our application life cycle
hammer lifecycle-environment create --name "Development" \
--description "Environment for ACME's Development Team" \
--prior "Library" --organization "ACME"
hammer lifecycle-environment create --name "Testing" \
--description "Environment for ACME's Quality Engineering Team" \
--prior "Development" --organization "ACME"
hammer lifecycle-environment create --name "Production" \
--description "Environment for ACME's Product Releases" \
--prior "Testing" --organization "ACME"

# Create and publish our Content View
hammer content-view create --name "Base" \
--description "Base operating system" \
--repositories "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server,Red Hat Satellite Tools 6.6 for RHEL 7 Server RPMs x86_64" \
--organization "ACME"
hammer content-view publish --name "Base" \
--description "Initial content view for our operating system" \
--organization "ACME"
hammer content-view version promote --content-view "Base" --version 1 \
--to-lifecycle-environment "Development" --organization "ACME"
hammer content-view version promote --content-view "Base" --version 1 \
--to-lifecycle-environment "Testing" --organization "ACME"
hammer content-view version promote --content-view "Base" --version 1 \
--to-lifecycle-environment "Production" --organization "ACME"</screen>
<simpara>Set executable permissions on the script:</simpara>
<screen># chmod +x content-init.sh</screen>
<simpara>Download a copy of your Subscription Manifest from the Red Hat Customer Portal and run the script on the manifest:</simpara>
<screen># ./content-init.sh manifest_98f4290e-6c0b-4f37-ba79-3a3ec6e405ba.zip</screen>
<simpara>This imports the necessary Red Hat content for the provisioning examples in this guide.</simpara>
</appendix>
<appendix xml:id="CLI_Params">
<title>Additional Host Parameters for Hammer CLI</title>
<simpara>This appendix provides some information on additional parameters for the <literal>hammer host create</literal> command.</simpara>
<section xml:id="_common_interface_parameters">
<title>Common Interface Parameters</title>
<simpara>These parameters are used with the <literal>--interface</literal> option for all provisioning types:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>mac</simpara></entry>
<entry align="left" valign="top"><simpara>MAC address for the interface</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>ip</simpara></entry>
<entry align="left" valign="top"><simpara>IP address for the interface</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>type</simpara></entry>
<entry align="left" valign="top"><simpara>The type of interface. For example: <literal>interface</literal>, <literal>bmc</literal>, or <literal>bond</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>name</simpara></entry>
<entry align="left" valign="top"><simpara>The host name associated with this interface`</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>subnet_id</simpara></entry>
<entry align="left" valign="top"><simpara>The subnet ID on the {ProjectServer}</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>domain_id</simpara></entry>
<entry align="left" valign="top"><simpara>The domain ID on the {ProjectServer}</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>identifier</simpara></entry>
<entry align="left" valign="top"><simpara>The device identifier. For example: <literal>eth0</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>managed</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean for managed interfaces. Set to <literal>true</literal> or <literal>false</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>primary</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean for primary interfaces. Managed hosts needs to have one primary interface. Set to <literal>true</literal> or <literal>false</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>provision</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean for whether to provision on this interface. Set to <literal>true</literal> or <literal>false</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>virtual</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean for whether the interface is a VLAN interface. Set to <literal>true</literal> or <literal>false</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Use the following parameters if <literal>virtual</literal> is <literal>true</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>tag</simpara></entry>
<entry align="left" valign="top"><simpara>VLAN tag, this attribute has precedence over the subnet VLAN ID. Only for virtual interfaces.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>attached_to</simpara></entry>
<entry align="left" valign="top"><simpara>Identifier of the interface to which this interface belongs. For example: <literal>eth1</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Use the following parameters if <literal>type</literal> is <literal>bond</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>mode</simpara></entry>
<entry align="left" valign="top"><simpara>The bonding mode. One of <literal>balance-rr</literal>, <literal>active-backup</literal>, <literal>balance-xor</literal>, <literal>broadcast</literal>, <literal>802.3ad</literal>, <literal>balance-tlb</literal>, <literal>balance-alb</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>attached_devices</simpara></entry>
<entry align="left" valign="top"><simpara>Identifiers of slave interfaces. For example: <literal>[eth1,eth2]</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>bond_options</simpara></entry>
<entry align="left" valign="top"><simpara>Additional bonding options</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Use the following parameters if <literal>type</literal> is <literal>bmc</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>provider</simpara></entry>
<entry align="left" valign="top"><simpara>The BMC provider. Only <literal>IPMI</literal> is supported</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>username</simpara></entry>
<entry align="left" valign="top"><simpara>The username for the BMC device</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>password</simpara></entry>
<entry align="left" valign="top"><simpara>The password for the BMC device</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_ec2_parameters">
<title>EC2 Parameters</title>
<simpara>Available parameters for <literal>--compute-attributes</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>flavor_id</simpara></entry>
<entry align="left" valign="top"><simpara>The EC2 flavor to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>image_id</simpara></entry>
<entry align="left" valign="top"><simpara>The AMI ID of the image to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>availability_zone</simpara></entry>
<entry align="left" valign="top"><simpara>The availability zone within the region of the EC2 provider</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>security_group_ids</simpara></entry>
<entry align="left" valign="top"><simpara>The IDs for security groups to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>managed_ip</simpara></entry>
<entry align="left" valign="top"><simpara>To utilize a public or private IP</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_libvirt_parameters">
<title>Libvirt Parameters</title>
<simpara>Available keys for <literal>--compute-attributes</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>cpus</simpara></entry>
<entry align="left" valign="top"><simpara>Number of CPUs</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>memory</simpara></entry>
<entry align="left" valign="top"><simpara>Amount of memory in bytes</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>start</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean to start the machine</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--interface</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>compute_type</simpara></entry>
<entry align="left" valign="top"><simpara>Either <literal>bridge</literal> or <literal>network</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compute_network / compute_bridge</simpara></entry>
<entry align="left" valign="top"><simpara>Name of the network or physical interface</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compute_model</simpara></entry>
<entry align="left" valign="top"><simpara>The interface model. One of <literal>virtio</literal>, <literal>rtl8139</literal>, <literal>ne2k_pci</literal>, <literal>pcnet</literal>, or <literal>e1000</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--volume</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>pool_name</simpara></entry>
<entry align="left" valign="top"><simpara>The storage pool to store the volume</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>capacity</simpara></entry>
<entry align="left" valign="top"><simpara>The capacity of the volume. For example: <literal>10G</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>format_type</simpara></entry>
<entry align="left" valign="top"><simpara>The disk type. Either <literal>raw</literal> or <literal>qcow2</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_openstack_parameters">
<title>{OpenStack} Parameters</title>
<simpara>Available keys for <literal>--compute-attributes</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>flavor_ref</simpara></entry>
<entry align="left" valign="top"><simpara>The flavor to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>image_ref</simpara></entry>
<entry align="left" valign="top"><simpara>The image to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>tenant_id</simpara></entry>
<entry align="left" valign="top"><simpara>The tenant to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>security_groups</simpara></entry>
<entry align="left" valign="top"><simpara>A list of security groups to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>network</simpara></entry>
<entry align="left" valign="top"><simpara>The network to connect the instance</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_ovirt_parameters">
<title>{OVirt} Parameters</title>
<simpara>Available keys for <literal>--compute-attributes</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>cluster</simpara></entry>
<entry align="left" valign="top"><simpara>The cluster ID to contain the host</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>template</simpara></entry>
<entry align="left" valign="top"><simpara>The hardware profile to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>cores</simpara></entry>
<entry align="left" valign="top"><simpara>The number of CPU cores  to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>memory</simpara></entry>
<entry align="left" valign="top"><simpara>The amount of memory in bytes</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>start</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean to start the machine</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--interface</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>compute_name</simpara></entry>
<entry align="left" valign="top"><simpara>The interface name. For example: <literal>eth0</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compute_network</simpara></entry>
<entry align="left" valign="top"><simpara>The network in the cluster to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--volume</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>size_gb</simpara></entry>
<entry align="left" valign="top"><simpara>Volume size in GB</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>storage_domain</simpara></entry>
<entry align="left" valign="top"><simpara>The storage domain to use</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>bootable</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean to set the volume as bootable. Only one volume can be bootable</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_vmware_interface_parameters">
<title>VMware Interface Parameters</title>
<simpara>Available keys for <literal>--compute-attributes</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>cpus</simpara></entry>
<entry align="left" valign="top"><simpara>Number of CPUs for the host</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>corespersocket</simpara></entry>
<entry align="left" valign="top"><simpara>Number of cores per CPU socket. Applicable to hosts using hardware versions less than v10.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>memory_mb</simpara></entry>
<entry align="left" valign="top"><simpara>Amount of memory in MB</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>cluster</simpara></entry>
<entry align="left" valign="top"><simpara>Cluster ID for the host</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>path</simpara></entry>
<entry align="left" valign="top"><simpara>Path to folder to organize the host</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>guest_id</simpara></entry>
<entry align="left" valign="top"><simpara>Guest OS ID</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>scsi_controller_type</simpara></entry>
<entry align="left" valign="top"><simpara>ID of the VMware controller</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>hardware_version</simpara></entry>
<entry align="left" valign="top"><simpara>VMware hardware version ID</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>start</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean to start the machine</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--interface</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>compute_type</simpara></entry>
<entry align="left" valign="top"><simpara>Type of the network adapter. One of <literal>VirtualVmxnet</literal>, <literal>VirtualVmxnet2</literal>, <literal>VirtualVmxnet3</literal>, <literal>VirtualE1000</literal>, <literal>VirtualE1000e</literal>, <literal>VirtualPCNet32</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>compute_network</simpara></entry>
<entry align="left" valign="top"><simpara>VMware network ID</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>Available keys for <literal>--volume</literal>:</simpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top"></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>datastore</simpara></entry>
<entry align="left" valign="top"><simpara>The datastore ID</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>name</simpara></entry>
<entry align="left" valign="top"><simpara>The name of the volume</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>size_gb</simpara></entry>
<entry align="left" valign="top"><simpara>The size in GB</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>thin</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean value to enable thin provisioning</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>eager_zero</simpara></entry>
<entry align="left" valign="top"><simpara>Boolean value to enable Eager Zero thick provisioning</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</appendix>
<appendix xml:id="Provision_FIPS_Hosts">
<title>Provisioning FIPS Compliant Hosts</title>
<simpara>{Project} supports provisioning hosts that comply with the National Institute of Standards and Technology&#8217;s <link xlink:href="http://csrc.nist.gov/groups/STM/cmvp/standards.html#02">Security Requirements for Cryptographic Modules</link> standard, reference number FIPS 140-2, referred to here as FIPS.</simpara>
<simpara>To enable the provisioning of hosts that are FIPS-compliant, complete the following tasks:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the provisioning password hashing algorithm for the operating system</simpara>
</listitem>
<listitem>
<simpara>Create a host group and set a host group parameter to enable FIPS</simpara>
</listitem>
</itemizedlist>
<simpara>For more information about creating host groups, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_satellite/6.6/html/managing_hosts/administering_hosts#creating-a-host-group">Creating a Host Group</link> in the <emphasis>Managing Hosts</emphasis> guide.</simpara>
<simpara>The provisioned hosts have the FIPS-compliant settings applied. To confirm that these settings are enabled, complete the steps in <xref linkend="verifying_fips_mode_enabled"/>.</simpara>
<section xml:id="_change_the_provisioning_password_hashing_algorithm">
<title>Change the Provisioning Password Hashing Algorithm</title>
<simpara>To provision FIPS-compliant hosts, you must first set the password hashing algorithm that you use in provisioning to SHA256. This configuration setting must be applied for each operating system you want to deploy as FIPS-compliant.</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Identify the Operating System IDs.</simpara>
<screen>$ hammer os list</screen>
</listitem>
<listitem>
<simpara>Update each operating system&#8217;s password hash value.</simpara>
<screen>$ hammer os update --title <emphasis>Operating_System</emphasis> \
  --password-hash SHA256</screen>
</listitem>
<listitem>
<simpara>Repeat this command for each of the operating systems, using the matching value in the <literal>TITLE</literal> column:</simpara>
<screen>$ hammer os update --title "RedHat <emphasis>version_number</emphasis>" \
  --password-hash SHA256</screen>
<simpara>Note that you cannot use a comma-separated list of values.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_setting_the_fips_enabled_parameter">
<title>Setting the FIPS Enabled Parameter</title>
<simpara>To provision a FIPS-compliant host, you must create a host group and set the host group parameter <literal>fips_enabled</literal> to <literal>true</literal>. If this is not set to <literal>true</literal>, or is absent, the FIPS-specific changes do not apply to the system. You can set this parameter when you provision a host or for a host group.</simpara>
<simpara>To set this parameter when provisioning a host, append <literal>--parameters fips_enabled=true</literal> to the Hammer command.</simpara>
<screen>$ hammer hostgroup set-parameter --name fips_enabled \
 --value 'true' \
 --hostgroup <emphasis>prod_servers</emphasis></screen>
<simpara>For more information, see the output of the command <literal>hammer hostgroup set-parameter --help</literal>.</simpara>
</section>
<section xml:id="verifying_fips_mode_enabled">
<title>Verifying FIPS Mode is Enabled</title>
<simpara>To verify these FIPS compliance changes have been successful, you must provision a host and check its configuration.</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Log on to the host as <literal>root</literal> or with an admin-level account.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command:</simpara>
<screen>$ cat /proc/sys/crypto/fips_enabled</screen>
<simpara>A value of <literal>1</literal> confirms that FIPS mode is enabled.</simpara>
</listitem>
</orderedlist>
</section>
</appendix>
</book>
